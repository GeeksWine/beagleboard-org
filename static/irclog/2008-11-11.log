<li class="quit">[<a href="#T00:00:11" id="T00:00:11"><abbr title="2008-11-11T00:00:11+00:00">00:00:11</abbr></a>] <span>* nemequ (n=nemequ@ip68-111-215-155.sd.sd.cox.net) Quit ("Ex-Chat")</span></li>
<li class="quit">[<a href="#T00:02:53" id="T00:02:53"><abbr title="2008-11-11T00:02:53+00:00">00:02:53</abbr></a>] <span>* zedstar (n=john@fsf/member/zedstar) Quit (Remote closed the connection)</span></li>
<li class="join">[<a href="#T00:04:34" id="T00:04:34"><abbr title="2008-11-11T00:04:34+00:00">00:04:34</abbr></a>] <span>* jrmuizel (n=jrmuizel@CPE001f5be79d0f-CM0017ee62f8b0.cpe.net.cable.rogers.com) has joined #beagle</span></li>
<li class="quit">[<a href="#T00:11:29" id="T00:11:29"><abbr title="2008-11-11T00:11:29+00:00">00:11:29</abbr></a>] <span>* gduncan (n=spec@static-71-249-182-7.nycmny.east.verizon.net) Quit ()</span></li>
<li class="join">[<a href="#T00:21:00" id="T00:21:00"><abbr title="2008-11-11T00:21:00+00:00">00:21:00</abbr></a>] <span>* gregoiregentil (n=zonbu@208.96.53.210) has joined #beagle</span></li>
<li class="message">[<a href="#T00:25:10" id="T00:25:10"><abbr title="2008-11-11T00:25:10+00:00">00:25:10</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>Ping mru</q></li>
<li class="part">[<a href="#T00:25:27" id="T00:25:27"><abbr title="2008-11-11T00:25:27+00:00">00:25:27</abbr></a>] <span>* JuanG_ (n=Juan@nat/ti/x-9869130187b67169) has left #beagle</span></li>
<li class="quit">[<a href="#T00:26:35" id="T00:26:35"><abbr title="2008-11-11T00:26:35+00:00">00:26:35</abbr></a>] <span>* dcramer (n=davec@static-72-71-192-9.cncdnh.fios.verizon.net) Quit ()</span></li>
<li class="message">[<a href="#T00:26:48" id="T00:26:48"><abbr title="2008-11-11T00:26:48+00:00">00:26:48</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>anyone know how to stop a beagle from using xloader/u-boot from NAND?</q></li>
<li class="message">[<a href="#T00:27:00" id="T00:27:00"><abbr title="2008-11-11T00:27:00+00:00">00:27:00</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>I gues I can erase the first NAND block</q></li>
<li class="message">[<a href="#T00:27:45" id="T00:27:45"><abbr title="2008-11-11T00:27:45+00:00">00:27:45</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>Press the user button and it will boot first from USB</q></li>
<li class="quit">[<a href="#T00:31:10" id="T00:31:10"><abbr title="2008-11-11T00:31:10+00:00">00:31:10</abbr></a>] <span>* jkridner|work (n=a0321898@nat/ti/x-939c2eb0d0b4baf2) Quit ("Leaving.")</span></li>
<li class="quit">[<a href="#T00:34:34" id="T00:34:34"><abbr title="2008-11-11T00:34:34+00:00">00:34:34</abbr></a>] <span>* flo_lap (n=fuchs@g227198235.adsl.alicedsl.de) Quit (Read error: 60 (Operation timed out))</span></li>
<li class="message">[<a href="#T00:37:19" id="T00:37:19"><abbr title="2008-11-11T00:37:19+00:00">00:37:19</abbr></a>] &lt;<cite>mru</cite>&gt; <q>gregoiregentil: pong</q></li>
<li class="message">[<a href="#T00:37:50" id="T00:37:50"><abbr title="2008-11-11T00:37:50+00:00">00:37:50</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>mru: thanks for coming back. so I applied some of your patches to my 2.6.27 kernel and omapfbplay works from the console</q></li>
<li class="message">[<a href="#T00:38:07" id="T00:38:07"><abbr title="2008-11-11T00:38:07+00:00">00:38:07</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>but if I start xorg, then I can't make it work from X.</q></li>
<li class="message">[<a href="#T00:38:14" id="T00:38:14"><abbr title="2008-11-11T00:38:14+00:00">00:38:14</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>I have two planes and everything seems fine on this front</q></li>
<li class="message">[<a href="#T00:38:27" id="T00:38:27"><abbr title="2008-11-11T00:38:27+00:00">00:38:27</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>the error I get is a problem when mapping the memory</q></li>
<li class="message">[<a href="#T00:38:34" id="T00:38:34"><abbr title="2008-11-11T00:38:34+00:00">00:38:34</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>invalid argument. then I get a segfault</q></li>
<li class="message">[<a href="#T00:38:50" id="T00:38:50"><abbr title="2008-11-11T00:38:50+00:00">00:38:50</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>obviously, if I do from the console before starting X, the memory map works fine</q></li>
<li class="message">[<a href="#T00:39:02" id="T00:39:02"><abbr title="2008-11-11T00:39:02+00:00">00:39:02</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>any idea what could cause this error in the memory map?</q></li>
<li class="message">[<a href="#T00:39:16" id="T00:39:16"><abbr title="2008-11-11T00:39:16+00:00">00:39:16</abbr></a>] &lt;<cite>mru</cite>&gt; <q>try playing with the -b option</q></li>
<li class="message">[<a href="#T00:39:30" id="T00:39:30"><abbr title="2008-11-11T00:39:30+00:00">00:39:30</abbr></a>] &lt;<cite>mru</cite>&gt; <q>maybe it's not able to allocate the amount of memory it wants</q></li>
<li class="message">[<a href="#T00:39:50" id="T00:39:50"><abbr title="2008-11-11T00:39:50+00:00">00:39:50</abbr></a>] &lt;<cite>mru</cite>&gt; <q>the argument is the amount of memory to use for pre-buffering in MB</q></li>
<li class="message">[<a href="#T00:39:52" id="T00:39:52"><abbr title="2008-11-11T00:39:52+00:00">00:39:52</abbr></a>] &lt;<cite>mru</cite>&gt; <q>default is 64</q></li>
<li class="message">[<a href="#T00:40:44" id="T00:40:44"><abbr title="2008-11-11T00:40:44+00:00">00:40:44</abbr></a>] &lt;<cite>mru</cite>&gt; <q>what is the exact error message you get?</q></li>
<li class="message">[<a href="#T00:41:13" id="T00:41:13"><abbr title="2008-11-11T00:41:13+00:00">00:41:13</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>mmap error: invalid argument</q></li>
<li class="message">[<a href="#T00:41:25" id="T00:41:25"><abbr title="2008-11-11T00:41:25+00:00">00:41:25</abbr></a>] &lt;<cite>mru</cite>&gt; <q>oh, -b won't help with that</q></li>
<li class="message">[<a href="#T00:41:30" id="T00:41:30"><abbr title="2008-11-11T00:41:30+00:00">00:41:30</abbr></a>] &lt;<cite>mru</cite>&gt; <q>it shouldn't crash though</q></li>
<li class="message">[<a href="#T00:42:38" id="T00:42:38"><abbr title="2008-11-11T00:42:38+00:00">00:42:38</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>yes, it's not the allocation inside alloc_buffer but the one of fb</q></li>
<li class="message">[<a href="#T00:43:17" id="T00:43:17"><abbr title="2008-11-11T00:43:17+00:00">00:43:17</abbr></a>] &lt;<cite>mru</cite>&gt; <q>segfault fixed, I hope</q></li>
<li class="message">[<a href="#T00:43:58" id="T00:43:58"><abbr title="2008-11-11T00:43:58+00:00">00:43:58</abbr></a>] &lt;<cite>mru</cite>&gt; <q>can you strace it and see what it's trying to mmap?</q></li>
<li class="part">[<a href="#T00:44:27" id="T00:44:27"><abbr title="2008-11-11T00:44:27+00:00">00:44:27</abbr></a>] <span>* RogerMonk (n=a0740758@nat/ti/x-a16f422cd3bbbe39) has left #beagle</span></li>
<li class="message">[<a href="#T00:45:04" id="T00:45:04"><abbr title="2008-11-11T00:45:04+00:00">00:45:04</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>I can definitely try... I need to investigate more. What worries me is that I get similar problem with mplayer -vo fbdev which works from console but not inside X or after starting X</q></li>
<li class="quit">[<a href="#T00:45:07" id="T00:45:07"><abbr title="2008-11-11T00:45:07+00:00">00:45:07</abbr></a>] <span>* FuL|OUT (n=fn@a83-132-158-61.cpe.netcabo.pt) Quit (Read error: 60 (Operation timed out))</span></li>
<li class="message">[<a href="#T00:45:26" id="T00:45:26"><abbr title="2008-11-11T00:45:26+00:00">00:45:26</abbr></a>] &lt;<cite>mru</cite>&gt; <q>hmm... maybe X is the bad guy here</q></li>
<li class="message">[<a href="#T00:45:32" id="T00:45:32"><abbr title="2008-11-11T00:45:32+00:00">00:45:32</abbr></a>] &lt;<cite>mru</cite>&gt; <q>which X driver are you using?</q></li>
<li class="message">[<a href="#T00:45:45" id="T00:45:45"><abbr title="2008-11-11T00:45:45+00:00">00:45:45</abbr></a>] &lt;<cite>mru</cite>&gt; <q>plain fb or the experimental omapfb?</q></li>
<li class="message">[<a href="#T00:47:36" id="T00:47:36"><abbr title="2008-11-11T00:47:36+00:00">00:47:36</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>I will do more test with different kernel and also with kdrive</q></li>
<li class="message">[<a href="#T00:48:19" id="T00:48:19"><abbr title="2008-11-11T00:48:19+00:00">00:48:19</abbr></a>] &lt;<cite>mru</cite>&gt; <q>are there any kernel messages?</q></li>
<li class="message">[<a href="#T00:49:02" id="T00:49:02"><abbr title="2008-11-11T00:49:02+00:00">00:49:02</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>no. And I remember that I made it work from xorg with 2.6.26 but I have made a lot of modifications since then. So I can't say for sure if it's the new kernel or a potential new xorg</q></li>
<li class="join">[<a href="#T00:49:10" id="T00:49:10"><abbr title="2008-11-11T00:49:10+00:00">00:49:10</abbr></a>] <span>* FuL|OUT (n=fn@a83-132-158-61.cpe.netcabo.pt) has joined #beagle</span></li>
<li class="message">[<a href="#T00:49:24" id="T00:49:24"><abbr title="2008-11-11T00:49:24+00:00">00:49:24</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>let me investigate more. Thanks for the answer. I was jut asking in case you have a strong opinion of something that could go wrong</q></li>
<li class="message">[<a href="#T00:49:32" id="T00:49:32"><abbr title="2008-11-11T00:49:32+00:00">00:49:32</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q> Another quick question: when you do fullscreen in omapfbplay, obviously</q></li>
<li class="message">[<a href="#T00:49:46" id="T00:49:46"><abbr title="2008-11-11T00:49:46+00:00">00:49:46</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>you are using the hardware scaling of the device</q></li>
<li class="message">[<a href="#T00:49:54" id="T00:49:54"><abbr title="2008-11-11T00:49:54+00:00">00:49:54</abbr></a>] &lt;<cite>mru</cite>&gt; <q>yes</q></li>
<li class="message">[<a href="#T00:49:56" id="T00:49:56"><abbr title="2008-11-11T00:49:56+00:00">00:49:56</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>is the hardware scaling supports also downscaling (output</q></li>
<li class="message">[<a href="#T00:50:10" id="T00:50:10"><abbr title="2008-11-11T00:50:10+00:00">00:50:10</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>is smaller than codec output)?</q></li>
<li class="message">[<a href="#T00:50:19" id="T00:50:19"><abbr title="2008-11-11T00:50:19+00:00">00:50:19</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>s/is/does</q></li>
<li class="message">[<a href="#T00:50:22" id="T00:50:22"><abbr title="2008-11-11T00:50:22+00:00">00:50:22</abbr></a>] &lt;<cite>mru</cite>&gt; <q>the hardware support downscaling, but the driver in l-o git doesn't</q></li>
<li class="message">[<a href="#T00:50:49" id="T00:50:49"><abbr title="2008-11-11T00:50:49+00:00">00:50:49</abbr></a>] &lt;<cite>mru</cite>&gt; <q><a href="http://thread.gmane.org/gmane.linux.ports.arm.omap/13410">http://thread.gmane.org/gmane.linux.ports.arm.omap/13410</a></q></li>
<li class="message">[<a href="#T00:50:50" id="T00:50:50"><abbr title="2008-11-11T00:50:50+00:00">00:50:50</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>I saw a patch on one of the mailing list (it was a single line patch)</q></li>
<li class="message">[<a href="#T00:50:54" id="T00:50:54"><abbr title="2008-11-11T00:50:54+00:00">00:50:54</abbr></a>] &lt;<cite>mru</cite>&gt; <q>that thread has two patches</q></li>
<li class="message">[<a href="#T00:51:05" id="T00:51:05"><abbr title="2008-11-11T00:51:05+00:00">00:51:05</abbr></a>] &lt;<cite>mru</cite>&gt; <q>the first fixes upscaling which was accidentally broken recently</q></li>
<li class="message">[<a href="#T00:51:12" id="T00:51:12"><abbr title="2008-11-11T00:51:12+00:00">00:51:12</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>that removes a test fo upscaling</q></li>
<li class="message">[<a href="#T00:51:19" id="T00:51:19"><abbr title="2008-11-11T00:51:19+00:00">00:51:19</abbr></a>] &lt;<cite>mru</cite>&gt; <q>the second allegedly makes downscaling work as well</q></li>
<li class="message">[<a href="#T00:51:22" id="T00:51:22"><abbr title="2008-11-11T00:51:22+00:00">00:51:22</abbr></a>] &lt;<cite>mru</cite>&gt; <q>I haven't tested it</q></li>
<li class="quit">[<a href="#T00:52:05" id="T00:52:05"><abbr title="2008-11-11T00:52:05+00:00">00:52:05</abbr></a>] <span>* jonnor (n=jon@ti0016a380-2455.bb.online.no) Quit (Remote closed the connection)</span></li>
<li class="message">[<a href="#T00:52:06" id="T00:52:06"><abbr title="2008-11-11T00:52:06+00:00">00:52:06</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>Great! I saw the first email from Tuomas but not the second. I will test the downscaling and report</q></li>
<li class="message">[<a href="#T00:52:45" id="T00:52:45"><abbr title="2008-11-11T00:52:45+00:00">00:52:45</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>One more question ;-)</q></li>
<li class="message">[<a href="#T00:53:13" id="T00:53:13"><abbr title="2008-11-11T00:53:13+00:00">00:53:13</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>I have done some benchmark between omapfbplay assembly conversion and the one I found in the Siarhei project (mplayer for Nxxx)</q></li>
<li class="message">[<a href="#T00:53:41" id="T00:53:41"><abbr title="2008-11-11T00:53:41+00:00">00:53:41</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>omapfbplay is definitely a little bit faster than Siarhei's code (which was very good). 15% faster</q></li>
<li class="message">[<a href="#T00:54:07" id="T00:54:07"><abbr title="2008-11-11T00:54:07+00:00">00:54:07</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>I would like to understand what would be the next step in terms of performance improvment. What would be the gain</q></li>
<li class="message">[<a href="#T00:54:23" id="T00:54:23"><abbr title="2008-11-11T00:54:23+00:00">00:54:23</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>of using NEON optimization in ffmpeg? How difficult would it be? What would need to be done?</q></li>
<li class="message">[<a href="#T00:56:12" id="T00:56:12"><abbr title="2008-11-11T00:56:12+00:00">00:56:12</abbr></a>] &lt;<cite>mru</cite>&gt; <q>there are lots of neon optimisations in ffmpeg</q></li>
<li class="message">[<a href="#T00:56:31" id="T00:56:31"><abbr title="2008-11-11T00:56:31+00:00">00:56:31</abbr></a>] &lt;<cite>mru</cite>&gt; <q>most of it is not difficult, just time-consuming to code</q></li>
<li class="message">[<a href="#T00:57:25" id="T00:57:25"><abbr title="2008-11-11T00:57:25+00:00">00:57:25</abbr></a>] &lt;<cite>mru</cite>&gt; <q>are you using the ffmpeg that OE builds?</q></li>
<li class="message">[<a href="#T00:57:34" id="T00:57:34"><abbr title="2008-11-11T00:57:34+00:00">00:57:34</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>yes</q></li>
<li class="message">[<a href="#T00:57:49" id="T00:57:49"><abbr title="2008-11-11T00:57:49+00:00">00:57:49</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>any idea how much performance can we get at the end of the day? I would like to have an understanding of this road vs. DSP decoding ?? la gstreamer. And also am I correct to say that such NEON optimization applies only in the Cortex so totaly independent from c64x DSP?</q></li>
<li class="message">[<a href="#T00:58:13" id="T00:58:13"><abbr title="2008-11-11T00:58:13+00:00">00:58:13</abbr></a>] &lt;<cite>mru</cite>&gt; <q>neon is independent of the dsp, yes</q></li>
<li class="message">[<a href="#T00:58:32" id="T00:58:32"><abbr title="2008-11-11T00:58:32+00:00">00:58:32</abbr></a>] &lt;<cite>mru</cite>&gt; <q>the dsp is powerful, but it can't do magic</q></li>
<li class="message">[<a href="#T00:58:44" id="T00:58:44"><abbr title="2008-11-11T00:58:44+00:00">00:58:44</abbr></a>] &lt;<cite>mru</cite>&gt; <q>and it only runs at 430 MHz</q></li>
<li class="message">[<a href="#T00:59:40" id="T00:59:40"><abbr title="2008-11-11T00:59:40+00:00">00:59:40</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>My point is to compare: current-ffmpeg-from-OE (perhaps improved in the future) + mplayer + your very-smart-assembly conversion VS. gstreamer-leveraging-DSP</q></li>
<li class="message">[<a href="#T00:59:57" id="T00:59:57"><abbr title="2008-11-11T00:59:57+00:00">00:59:57</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>the first option is still quite high in terms of CPU usage</q></li>
<li class="message">[<a href="#T01:00:08" id="T01:00:08"><abbr title="2008-11-11T01:00:08+00:00">01:00:08</abbr></a>] &lt;<cite>mru</cite>&gt; <q>mplayer is ffmpeg, more or less</q></li>
<li class="message">[<a href="#T01:00:28" id="T01:00:28"><abbr title="2008-11-11T01:00:28+00:00">01:00:28</abbr></a>] &lt;<cite>mru</cite>&gt; <q>the advantage of using the dsp is that you release the cpu for other things</q></li>
<li class="message">[<a href="#T01:00:44" id="T01:00:44"><abbr title="2008-11-11T01:00:44+00:00">01:00:44</abbr></a>] &lt;<cite>mru</cite>&gt; <q>the disadvantage is that it's bloody difficult to use</q></li>
<li class="message">[<a href="#T01:01:36" id="T01:01:36"><abbr title="2008-11-11T01:01:36+00:00">01:01:36</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>we need to solve this bloody difficult to use problem :(</q></li>
<li class="message">[<a href="#T01:01:56" id="T01:01:56"><abbr title="2008-11-11T01:01:56+00:00">01:01:56</abbr></a>] &lt;<cite>mru</cite>&gt; <q>I'm not holding my breath</q></li>
<li class="message">[<a href="#T01:02:14" id="T01:02:14"><abbr title="2008-11-11T01:02:14+00:00">01:02:14</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>from a certain point of view, I even wonder if the $20 for the DSP worths the whole complexity and performance improvment</q></li>
<li class="message">[<a href="#T01:02:38" id="T01:02:38"><abbr title="2008-11-11T01:02:38+00:00">01:02:38</abbr></a>] &lt;<cite>mru</cite>&gt; <q>the dsp is definitely useful, if only I could figure out how to use it</q></li>
<li class="message">[<a href="#T01:02:55" id="T01:02:55"><abbr title="2008-11-11T01:02:55+00:00">01:02:55</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>if you do only video, that makes sense but if your usage of OMAP is not only video, I'm wondering right now...</q></li>
<li class="message">[<a href="#T01:03:10" id="T01:03:10"><abbr title="2008-11-11T01:03:10+00:00">01:03:10</abbr></a>] &lt;<cite>mru</cite>&gt; <q>all I ask for is the correct sequence to bring it out of reset</q></li>
<li class="message">[<a href="#T01:03:15" id="T01:03:15"><abbr title="2008-11-11T01:03:15+00:00">01:03:15</abbr></a>] &lt;<cite>mru</cite>&gt; <q>and start running some code</q></li>
<li class="message">[<a href="#T01:03:36" id="T01:03:36"><abbr title="2008-11-11T01:03:36+00:00">01:03:36</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>can't we leverage more TI on this front?</q></li>
<li class="message">[<a href="#T01:03:50" id="T01:03:50"><abbr title="2008-11-11T01:03:50+00:00">01:03:50</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>how hard is bridge to work out</q></li>
<li class="message">[<a href="#T01:03:56" id="T01:03:56"><abbr title="2008-11-11T01:03:56+00:00">01:03:56</abbr></a>] &lt;<cite>mru</cite>&gt; <q>they just start chanting "dsplink, dsplink, ..."</q></li>
<li class="message">[<a href="#T01:04:09" id="T01:04:09"><abbr title="2008-11-11T01:04:09+00:00">01:04:09</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>because if they don't help us to use more DSP, some people may think like me that it doesn't worth the $20 per chip.</q></li>
<li class="message">[<a href="#T01:04:10" id="T01:04:10"><abbr title="2008-11-11T01:04:10+00:00">01:04:10</abbr></a>] &lt;<cite>mru</cite>&gt; <q>bridge is rather ugly too</q></li>
<li class="message">[<a href="#T01:04:17" id="T01:04:17"><abbr title="2008-11-11T01:04:17+00:00">01:04:17</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>I hope that Jason will read this... ;-)</q></li>
<li class="message">[<a href="#T01:04:28" id="T01:04:28"><abbr title="2008-11-11T01:04:28+00:00">01:04:28</abbr></a>] &lt;<cite>mru</cite>&gt; <q>I've said this to jason many times</q></li>
<li class="message">[<a href="#T01:04:52" id="T01:04:52"><abbr title="2008-11-11T01:04:52+00:00">01:04:52</abbr></a>] &lt;<cite>gregoiregentil</cite>&gt; <q>We are on the same page!</q></li>
<li class="quit">[<a href="#T01:04:55" id="T01:04:55"><abbr title="2008-11-11T01:04:55+00:00">01:04:55</abbr></a>] <span>* felipec (n=felipec@a91-153-251-222.elisa-laajakaista.fi) Quit ("Leaving")</span></li>
<li class="message">[<a href="#T01:04:57" id="T01:04:57"><abbr title="2008-11-11T01:04:57+00:00">01:04:57</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q></q></li>
<li class="message">[<a href="#T01:05:07" id="T01:05:07"><abbr title="2008-11-11T01:05:07+00:00">01:05:07</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q><a href="http://gnuradio.org/trac/wiki/Gcell">http://gnuradio.org/trac/wiki/Gcell</a></q></li>
<li class="message">[<a href="#T01:05:16" id="T01:05:16"><abbr title="2008-11-11T01:05:16+00:00">01:05:16</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>we need something like this</q></li>
<li class="message">[<a href="#T01:05:49" id="T01:05:49"><abbr title="2008-11-11T01:05:49+00:00">01:05:49</abbr></a>] &lt;<cite>mru</cite>&gt; <q>not really</q></li>
<li class="message">[<a href="#T01:05:52" id="T01:05:52"><abbr title="2008-11-11T01:05:52+00:00">01:05:52</abbr></a>] &lt;<cite>mru</cite>&gt; <q>there's only one dsp</q></li>
<li class="message">[<a href="#T01:05:58" id="T01:05:58"><abbr title="2008-11-11T01:05:58+00:00">01:05:58</abbr></a>] &lt;<cite>mru</cite>&gt; <q>and it shares memory with the cpu</q></li>
<li class="message">[<a href="#T01:06:11" id="T01:06:11"><abbr title="2008-11-11T01:06:11+00:00">01:06:11</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>although in this case we need a small kernel on the dsp to handle scheduling and communicaiton</q></li>
<li class="message">[<a href="#T01:06:15" id="T01:06:15"><abbr title="2008-11-11T01:06:15+00:00">01:06:15</abbr></a>] &lt;<cite>mru</cite>&gt; <q>dsplink and bridge are both being stupid and segretating the memory</q></li>
<li class="message">[<a href="#T01:06:33" id="T01:06:33"><abbr title="2008-11-11T01:06:33+00:00">01:06:33</abbr></a>] &lt;<cite>mru</cite>&gt; <q>the dsp "kernel" I have in mind is maybe 10 lines of C code</q></li>
<li class="message">[<a href="#T01:06:38" id="T01:06:38"><abbr title="2008-11-11T01:06:38+00:00">01:06:38</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>the idea being we have a way to pass work units to the dsp</q></li>
<li class="message">[<a href="#T01:06:58" id="T01:06:58"><abbr title="2008-11-11T01:06:58+00:00">01:06:58</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>you are thinking of running very specific tasks on the dsp?</q></li>
<li class="message">[<a href="#T01:07:19" id="T01:07:19"><abbr title="2008-11-11T01:07:19+00:00">01:07:19</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>dsp side has a mmu?</q></li>
<li class="message">[<a href="#T01:07:22" id="T01:07:22"><abbr title="2008-11-11T01:07:22+00:00">01:07:22</abbr></a>] &lt;<cite>mru</cite>&gt; <q>yes</q></li>
<li class="message">[<a href="#T01:07:45" id="T01:07:45"><abbr title="2008-11-11T01:07:45+00:00">01:07:45</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>so we need a way to have the linux mm coordinate with dsp side</q></li>
<li class="message">[<a href="#T01:08:01" id="T01:08:01"><abbr title="2008-11-11T01:08:01+00:00">01:08:01</abbr></a>] &lt;<cite>mru</cite>&gt; <q>that gets very complicated very quickly</q></li>
<li class="message">[<a href="#T01:08:08" id="T01:08:08"><abbr title="2008-11-11T01:08:08+00:00">01:08:08</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>I suspect part of TI's problem is they can't do that on all the OS's they try to support with link</q></li>
<li class="message">[<a href="#T01:08:44" id="T01:08:44"><abbr title="2008-11-11T01:08:44+00:00">01:08:44</abbr></a>] &lt;<cite>mru</cite>&gt; <q>I think a simpler approach would be to expose a device that apps can mmap, which would allocate as many pages as needed and map them to both the cpu and dsp address spaces</q></li>
<li class="message">[<a href="#T01:08:52" id="T01:08:52"><abbr title="2008-11-11T01:08:52+00:00">01:08:52</abbr></a>] &lt;<cite>mru</cite>&gt; <q>well, something along those lines</q></li>
<li class="message">[<a href="#T01:08:53" id="T01:08:53"><abbr title="2008-11-11T01:08:53+00:00">01:08:53</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>could you send a block to the dsp by having the kernel send the mmu settings scroos to the dsp</q></li>
<li class="message">[<a href="#T01:09:05" id="T01:09:05"><abbr title="2008-11-11T01:09:05+00:00">01:09:05</abbr></a>] &lt;<cite>mru</cite>&gt; <q>the cpu can program the dsp mmu directly</q></li>
<li class="message">[<a href="#T01:09:06" id="T01:09:06"><abbr title="2008-11-11T01:09:06+00:00">01:09:06</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>yeah</q></li>
<li class="message">[<a href="#T01:09:32" id="T01:09:32"><abbr title="2008-11-11T01:09:32+00:00">01:09:32</abbr></a>] &lt;<cite>mru</cite>&gt; <q>you can even program it so the dsp can *not* change it</q></li>
<li class="message">[<a href="#T01:09:41" id="T01:09:41"><abbr title="2008-11-11T01:09:41+00:00">01:09:41</abbr></a>] &lt;<cite>mru</cite>&gt; <q>makes security simpler</q></li>
<li class="message">[<a href="#T01:09:42" id="T01:09:42"><abbr title="2008-11-11T01:09:42+00:00">01:09:42</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>or load algortithms into the dsp, and have them operate on pages setup by the arm</q></li>
<li class="message">[<a href="#T01:10:07" id="T01:10:07"><abbr title="2008-11-11T01:10:07+00:00">01:10:07</abbr></a>] &lt;<cite>mru</cite>&gt; <q>if you lock down the dsp mmu, you can allow apps to run more or less anything they want there</q></li>
<li class="message">[<a href="#T01:10:39" id="T01:10:39"><abbr title="2008-11-11T01:10:39+00:00">01:10:39</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>in other words, we send code to the dsp for inner product, fft etc</q></li>
<li class="message">[<a href="#T01:11:01" id="T01:11:01"><abbr title="2008-11-11T01:11:01+00:00">01:11:01</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>map blocks, and tell dsp what algorithm to run on what block</q></li>
<li class="quit">[<a href="#T01:12:06" id="T01:12:06"><abbr title="2008-11-11T01:12:06+00:00">01:12:06</abbr></a>] <span>* jrmuizel (n=jrmuizel@CPE001f5be79d0f-CM0017ee62f8b0.cpe.net.cable.rogers.com) Quit ()</span></li>
<li class="message">[<a href="#T01:12:48" id="T01:12:48"><abbr title="2008-11-11T01:12:48+00:00">01:12:48</abbr></a>] &lt;<cite>mru</cite>&gt; <q>the design I'm picturing has only a simple job dispatcher as "kernel" on the dsp</q></li>
<li class="part">[<a href="#T01:13:41" id="T01:13:41"><abbr title="2008-11-11T01:13:41+00:00">01:13:41</abbr></a>] <span>* emeb (n=ericb@ip72-223-95-46.ph.ph.cox.net) has left #beagle</span></li>
<li class="message">[<a href="#T01:13:49" id="T01:13:49"><abbr title="2008-11-11T01:13:49+00:00">01:13:49</abbr></a>] &lt;<cite>mru</cite>&gt; <q>wait for message in mailbox, run requested function with supplied parameters (maybe just a single pointer), send reply to cpu mailbox, repeat</q></li>
<li class="message">[<a href="#T01:13:50" id="T01:13:50"><abbr title="2008-11-11T01:13:50+00:00">01:13:50</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>I wish they had dspbridge in a real scm ....</q></li>
<li class="message">[<a href="#T01:14:00" id="T01:14:00"><abbr title="2008-11-11T01:14:00+00:00">01:14:00</abbr></a>] &lt;<cite>mru</cite>&gt; <q>no need for multitasking</q></li>
<li class="message">[<a href="#T01:14:15" id="T01:14:15"><abbr title="2008-11-11T01:14:15+00:00">01:14:15</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>I like the idea of preloading code into the dsp</q></li>
<li class="message">[<a href="#T01:14:22" id="T01:14:22"><abbr title="2008-11-11T01:14:22+00:00">01:14:22</abbr></a>] &lt;<cite>mru</cite>&gt; <q>the linux kernel could simple job queue management</q></li>
<li class="message">[<a href="#T01:14:27" id="T01:14:27"><abbr title="2008-11-11T01:14:27+00:00">01:14:27</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>yes</q></li>
<li class="message">[<a href="#T01:14:47" id="T01:14:47"><abbr title="2008-11-11T01:14:47+00:00">01:14:47</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>send the dsp instruction on which code to run and required args</q></li>
<li class="message">[<a href="#T01:15:47" id="T01:15:47"><abbr title="2008-11-11T01:15:47+00:00">01:15:47</abbr></a>] &lt;<cite>mru</cite>&gt; <q>I have the feeling such a driver could be made really simple</q></li>
<li class="message">[<a href="#T01:16:10" id="T01:16:10"><abbr title="2008-11-11T01:16:10+00:00">01:16:10</abbr></a>] &lt;<cite>mru</cite>&gt; <q>but as I said, I got stuck at bringing up the dsp from reset</q></li>
<li class="message">[<a href="#T01:16:37" id="T01:16:37"><abbr title="2008-11-11T01:16:37+00:00">01:16:37</abbr></a>] &lt;<cite>mru</cite>&gt; <q>and I can't find the motivation to keep stabbing in the dark, hoping to hit the magic sequence by random chance</q></li>
<li class="message">[<a href="#T01:16:50" id="T01:16:50"><abbr title="2008-11-11T01:16:50+00:00">01:16:50</abbr></a>] &lt;<cite>mru</cite>&gt; <q>I have more interesting things to do</q></li>
<li class="join">[<a href="#T01:26:39" id="T01:26:39"><abbr title="2008-11-11T01:26:39+00:00">01:26:39</abbr></a>] <span>* jrmuizel (n=jrmuizel@CPE001f5be79d0f-CM0017ee62f8b0.cpe.net.cable.rogers.com) has joined #beagle</span></li>
<li class="message">[<a href="#T01:28:35" id="T01:28:35"><abbr title="2008-11-11T01:28:35+00:00">01:28:35</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>yeah</q></li>
<li class="message">[<a href="#T01:28:38" id="T01:28:38"><abbr title="2008-11-11T01:28:38+00:00">01:28:38</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>I know the feeling</q></li>
<li class="message">[<a href="#T01:28:48" id="T01:28:48"><abbr title="2008-11-11T01:28:48+00:00">01:28:48</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>We need a talented lacky :)</q></li>
<li class="message">[<a href="#T01:28:53" id="T01:28:53"><abbr title="2008-11-11T01:28:53+00:00">01:28:53</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>anywya gotta tun</q></li>
<li class="message">[<a href="#T01:28:55" id="T01:28:55"><abbr title="2008-11-11T01:28:55+00:00">01:28:55</abbr></a>] &lt;<cite>Crofton|1rssi</cite>&gt; <q>er run</q></li>
<li class="message">[<a href="#T01:29:00" id="T01:29:00"><abbr title="2008-11-11T01:29:00+00:00">01:29:00</abbr></a>] &lt;<cite>ldesnogu_</cite>&gt; <q>mru, what you propose looks similar to how it's done for the SPU on the Cell (except there's no shared memory)</q></li>
<li class="message">[<a href="#T01:29:21" id="T01:29:21"><abbr title="2008-11-11T01:29:21+00:00">01:29:21</abbr></a>] &lt;<cite>ldesnogu_</cite>&gt; <q>simple and efficient</q></li>
<li class="quit">[<a href="#T01:45:51" id="T01:45:51"><abbr title="2008-11-11T01:45:51+00:00">01:45:51</abbr></a>] <span>* _altered (n=Beagle0@sceapdsd43-72.989studios.com) Quit ()</span></li>
<li class="join">[<a href="#T01:51:28" id="T01:51:28"><abbr title="2008-11-11T01:51:28+00:00">01:51:28</abbr></a>] <span>* emeb_mac (n=ericb@ip72-223-95-46.ph.ph.cox.net) has joined #beagle</span></li>
<li class="quit">[<a href="#T01:54:44" id="T01:54:44"><abbr title="2008-11-11T01:54:44+00:00">01:54:44</abbr></a>] <span>* JoeyBorn (n=jborn@dsl017-022-247.chi1.dsl.speakeasy.net) Quit (Read error: 110 (Connection timed out))</span></li>
<li class="join">[<a href="#T01:55:43" id="T01:55:43"><abbr title="2008-11-11T01:55:43+00:00">01:55:43</abbr></a>] <span>* JuanG (n=Juan@nat/ti/x-1968f7a428689626) has joined #beagle</span></li>
<li class="part">[<a href="#T01:55:48" id="T01:55:48"><abbr title="2008-11-11T01:55:48+00:00">01:55:48</abbr></a>] <span>* JuanG (n=Juan@nat/ti/x-1968f7a428689626) has left #beagle</span></li>
<li class="quit">[<a href="#T01:57:50" id="T01:57:50"><abbr title="2008-11-11T01:57:50+00:00">01:57:50</abbr></a>] <span>* ldesnogu_ (n=ldesnogu@ven06-2-82-247-86-183.fbx.proxad.net) Quit ()</span></li>
