<li class="join">[<a href="#T00:00:26" id="T00:00:26"><abbr title="2015-01-20T00:00:26+00:00">00:00:26</abbr></a>] <span>* BeagleBot (~PircBot@ec2-50-17-196-130.compute-1.amazonaws.com) has joined #beagle</span></li>
<li class="topic">[<abbr title="2015-01-20T00:00:26+00:00">00:00:26</abbr>] <span>* Topic is '<a href="http://beagleboard.org/chat">http://beagleboard.org/chat</a> has a guide on how to ask questions and links to the logs | never ask to ask, just ask | be patient | pastebin a boot log | <a href="http://ahsoftware.de/Beaglebone_Black_Boot_explained.svg">http://ahsoftware.de/Beaglebone_Black_Boot_explained.svg</a> | <a href="http://beagleboard.org/latest-images">http://beagleboard.org/latest-images</a> | <a href="http://beagleboard.org/Support/bone101">http://beagleboard.org/Support/bone101</a> | direct bonescript/node.js questions to #beagle-bonescript'</span></li>
<li class="topic">[<abbr title="2015-01-20T00:00:26+00:00">00:00:26</abbr>] <span>* Set by jkridner!~jkridner@pdpc/supporter/active/jkridner on Wed Oct 22 00:02:16 UTC 2014</span></li>
<li class="join">[<abbr title="2015-01-20T00:00:26+00:00">00:00:26</abbr>] <span>* BeagleBot (~PircBot@ec2-50-17-196-130.compute-1.amazonaws.com) has joined #beagleboard</span></li>
<li class="join">[<abbr title="2015-01-20T00:00:26+00:00">00:00:26</abbr>] <span>* BeagleBot (~PircBot@ec2-50-17-196-130.compute-1.amazonaws.com) has joined #beaglebone</span></li>
<li class="join">[<a href="#T00:08:00" id="T00:08:00"><abbr title="2015-01-20T00:08:00+00:00">00:08:00</abbr></a>] <span>* Russ (foobar@pool-100-9-139-246.lsanca.fios.verizon.net) has joined #beagle</span></li>
<li class="join">[<a href="#T00:08:22" id="T00:08:22"><abbr title="2015-01-20T00:08:22+00:00">00:08:22</abbr></a>] <span>* nofxx (~nofxx@unaffiliated/nofxx) has joined #beaglebone</span></li>
<li class="join">[<a href="#T00:13:23" id="T00:13:23"><abbr title="2015-01-20T00:13:23+00:00">00:13:23</abbr></a>] <span>* mhaberler (~mhaberler@91.112.104.170) has joined #beagle</span></li>
<li class="join">[<abbr title="2015-01-20T00:13:23+00:00">00:13:23</abbr>] <span>* mhaberler (~mhaberler@91.112.104.170) has joined #beaglebone</span></li>
<li class="nick-change">[<a href="#T00:28:19" id="T00:28:19"><abbr title="2015-01-20T00:28:19+00:00">00:28:19</abbr></a>] <span>* BobCat is now known as bobcatsleepingdo</span></li>
<li class="quit">[<a href="#T00:29:44" id="T00:29:44"><abbr title="2015-01-20T00:29:44+00:00">00:29:44</abbr></a>] <span>* ocamlman (~ocamlman@cpe-67-249-140-143.twcny.res.rr.com) Quit (Ping timeout: 252 seconds)</span></li>
<li class="quit">[<a href="#T00:31:50" id="T00:31:50"><abbr title="2015-01-20T00:31:50+00:00">00:31:50</abbr></a>] <span>* nicksydney (~quassel@43.230.dsl.syd.iprimus.net.au) Quit (Remote host closed the connection)</span></li>
<li class="quit">[<a href="#T00:35:55" id="T00:35:55"><abbr title="2015-01-20T00:35:55+00:00">00:35:55</abbr></a>] <span>* mhaberler (~mhaberler@91.112.104.170) Quit (Quit: mhaberler)</span></li>
<li class="join">[<a href="#T00:38:42" id="T00:38:42"><abbr title="2015-01-20T00:38:42+00:00">00:38:42</abbr></a>] <span>* nicksydney (~quassel@43.230.dsl.syd.iprimus.net.au) has joined #beagle</span></li>
<li class="quit">[<a href="#T00:38:57" id="T00:38:57"><abbr title="2015-01-20T00:38:57+00:00">00:38:57</abbr></a>] <span>* dwery (~dwery@nslu2-linux/dwery) Quit (Ping timeout: 264 seconds)</span></li>
<li class="join">[<a href="#T00:40:53" id="T00:40:53"><abbr title="2015-01-20T00:40:53+00:00">00:40:53</abbr></a>] <span>* djerome (~djerome@ip24-251-115-14.ph.ph.cox.net) has joined #beaglebone</span></li>
<li class="quit">[<a href="#T00:42:02" id="T00:42:02"><abbr title="2015-01-20T00:42:02+00:00">00:42:02</abbr></a>] <span>* ynnhoj (~johnny@parkinglot.honeycloud.net) Quit (Ping timeout: 265 seconds)</span></li>
<li class="join">[<a href="#T00:43:17" id="T00:43:17"><abbr title="2015-01-20T00:43:17+00:00">00:43:17</abbr></a>] <span>* ynnhoj (~johnny@parkinglot.honeycloud.net) has joined #beagle</span></li>
<li class="quit">[<a href="#T00:45:23" id="T00:45:23"><abbr title="2015-01-20T00:45:23+00:00">00:45:23</abbr></a>] <span>* staylor (~staylor@mail.au-zone.com) Quit (Ping timeout: 276 seconds)</span></li>
<li class="quit">[<a href="#T00:51:33" id="T00:51:33"><abbr title="2015-01-20T00:51:33+00:00">00:51:33</abbr></a>] <span>* florian (~fuchs@Maemo/community/contributor/florian) Quit (Ping timeout: 244 seconds)</span></li>
<li class="quit">[<a href="#T00:55:02" id="T00:55:02"><abbr title="2015-01-20T00:55:02+00:00">00:55:02</abbr></a>] <span>* webdaford (~daford@ool-4357e09c.dyn.optonline.net) Quit (Quit: Leaving)</span></li>
<li class="quit">[<a href="#T01:00:50" id="T01:00:50"><abbr title="2015-01-20T01:00:50+00:00">01:00:50</abbr></a>] <span>* VirG (~VirGin@c-24-20-140-208.hsd1.or.comcast.net) Quit (Quit: Leaving.)</span></li>
<li class="join">[<a href="#T01:01:18" id="T01:01:18"><abbr title="2015-01-20T01:01:18+00:00">01:01:18</abbr></a>] <span>* VirG (~VirGin@c-24-20-140-208.hsd1.or.comcast.net) has joined #beagle</span></li>
<li class="quit">[<a href="#T01:06:06" id="T01:06:06"><abbr title="2015-01-20T01:06:06+00:00">01:06:06</abbr></a>] <span>* nicksydney (~quassel@43.230.dsl.syd.iprimus.net.au) Quit (Remote host closed the connection)</span></li>
<li class="quit">[<a href="#T01:06:27" id="T01:06:27"><abbr title="2015-01-20T01:06:27+00:00">01:06:27</abbr></a>] <span>* bugzc_ (~bugzc@unaffiliated/bugzc) Quit (Remote host closed the connection)</span></li>
<li class="join">[<a href="#T01:07:05" id="T01:07:05"><abbr title="2015-01-20T01:07:05+00:00">01:07:05</abbr></a>] <span>* nicksydney (~quassel@43.230.dsl.syd.iprimus.net.au) has joined #beagle</span></li>
<li class="quit">[<a href="#T01:13:25" id="T01:13:25"><abbr title="2015-01-20T01:13:25+00:00">01:13:25</abbr></a>] <span>* kalem (~kalem@unaffiliated/kalem) Quit (Quit: Sto andando via)</span></li>
<li class="join">[<a href="#T01:20:02" id="T01:20:02"><abbr title="2015-01-20T01:20:02+00:00">01:20:02</abbr></a>] <span>* Nico44 (~Nico44@crb44-1-82-67-127-241.fbx.proxad.net) has joined #beagle</span></li>
<li class="quit">[<a href="#T01:20:47" id="T01:20:47"><abbr title="2015-01-20T01:20:47+00:00">01:20:47</abbr></a>] <span>* n-st (~n-st@2001:470:7272:0:254b:9b41:ce50:e5d7) Quit (Remote host closed the connection)</span></li>
<li class="quit">[<a href="#T01:24:17" id="T01:24:17"><abbr title="2015-01-20T01:24:17+00:00">01:24:17</abbr></a>] <span>* Nico44 (~Nico44@crb44-1-82-67-127-241.fbx.proxad.net) Quit (Ping timeout: 246 seconds)</span></li>
<li class="quit">[<a href="#T01:24:51" id="T01:24:51"><abbr title="2015-01-20T01:24:51+00:00">01:24:51</abbr></a>] <span>* manuel__ (~manuel@209.6.175.242) Quit (Quit: manuel__)</span></li>
<li class="part">[<a href="#T01:28:50" id="T01:28:50"><abbr title="2015-01-20T01:28:50+00:00">01:28:50</abbr></a>] <span>* methuzla (~methuzla@216.254.17.117) has left #beagle</span></li>
<li class="quit">[<a href="#T01:35:56" id="T01:35:56"><abbr title="2015-01-20T01:35:56+00:00">01:35:56</abbr></a>] <span>* j0rd_ (~j0rd_@unaffiliated/j0rd-/x-9112651) Quit (Ping timeout: 272 seconds)</span></li>
<li class="join">[<a href="#T01:37:38" id="T01:37:38"><abbr title="2015-01-20T01:37:38+00:00">01:37:38</abbr></a>] <span>* j0rd_ (~j0rd_@unaffiliated/j0rd-/x-9112651) has joined #beagle</span></li>
<li class="join">[<a href="#T01:50:43" id="T01:50:43"><abbr title="2015-01-20T01:50:43+00:00">01:50:43</abbr></a>] <span>* KiloJuliet (~gplgeek@pdpc/supporter/student/GPLGeek) has joined #beagle</span></li>
<li class="quit">[<a href="#T01:55:43" id="T01:55:43"><abbr title="2015-01-20T01:55:43+00:00">01:55:43</abbr></a>] <span>* emeb (~ericb@ip68-104-219-12.ph.ph.cox.net) Quit (Quit: Leaving.)</span></li>
<li class="join">[<a href="#T01:57:41" id="T01:57:41"><abbr title="2015-01-20T01:57:41+00:00">01:57:41</abbr></a>] <span>* LordWillO (~LordWillO@173-31-169-165.client.mchsi.com) has joined #beagle</span></li>
<li class="quit">[<a href="#T01:57:42" id="T01:57:42"><abbr title="2015-01-20T01:57:42+00:00">01:57:42</abbr></a>] <span>* SpeedEvil (~quassel@tor/regular/SpeedEvil) Quit (Read error: Connection reset by peer)</span></li>
<li class="join">[<a href="#T01:57:48" id="T01:57:48"><abbr title="2015-01-20T01:57:48+00:00">01:57:48</abbr></a>] <span>* BitEvil (~quassel@tor/regular/SpeedEvil) has joined #beagle</span></li>
<li class="join">[<a href="#T01:59:09" id="T01:59:09"><abbr title="2015-01-20T01:59:09+00:00">01:59:09</abbr></a>] <span>* manuel__ (~manuel@c-24-61-40-209.hsd1.ma.comcast.net) has joined #beagle</span></li>
<li class="quit">[<a href="#T01:59:12" id="T01:59:12"><abbr title="2015-01-20T01:59:12+00:00">01:59:12</abbr></a>] <span>* LordWillO (~LordWillO@173-31-169-165.client.mchsi.com) Quit (Client Quit)</span></li>
<li class="join">[<a href="#T01:59:47" id="T01:59:47"><abbr title="2015-01-20T01:59:47+00:00">01:59:47</abbr></a>] <span>* LordWillO (~LordWillO@173-31-169-165.client.mchsi.com) has joined #beagle</span></li>
<li class="quit">[<a href="#T02:07:48" id="T02:07:48"><abbr title="2015-01-20T02:07:48+00:00">02:07:48</abbr></a>] <span>* idwer (~irc@unaffiliated/idwer) Quit (Remote host closed the connection)</span></li>
<li class="quit">[<a href="#T02:38:57" id="T02:38:57"><abbr title="2015-01-20T02:38:57+00:00">02:38:57</abbr></a>] <span>* pwillard (~pwillard@c-73-184-136-133.hsd1.ga.comcast.net) Quit (Quit: Leaving)</span></li>
<li class="quit">[<a href="#T02:40:39" id="T02:40:39"><abbr title="2015-01-20T02:40:39+00:00">02:40:39</abbr></a>] <span>* manuel__ (~manuel@c-24-61-40-209.hsd1.ma.comcast.net) Quit (Quit: manuel__)</span></li>
<li class="join">[<a href="#T02:42:49" id="T02:42:49"><abbr title="2015-01-20T02:42:49+00:00">02:42:49</abbr></a>] <span>* Peter___ (b11110ba@gateway/web/freenode/ip.177.17.16.186) has joined #beagle</span></li>
<li class="quit">[<a href="#T02:44:40" id="T02:44:40"><abbr title="2015-01-20T02:44:40+00:00">02:44:40</abbr></a>] <span>* VirG (~VirGin@c-24-20-140-208.hsd1.or.comcast.net) Quit (Ping timeout: 240 seconds)</span></li>
<li class="join">[<a href="#T02:45:40" id="T02:45:40"><abbr title="2015-01-20T02:45:40+00:00">02:45:40</abbr></a>] <span>* jr_ (ad1ccc2b@gateway/web/freenode/ip.173.28.204.43) has joined #beagle</span></li>
<li class="quit">[<a href="#T02:47:03" id="T02:47:03"><abbr title="2015-01-20T02:47:03+00:00">02:47:03</abbr></a>] <span>* Peter___ (b11110ba@gateway/web/freenode/ip.177.17.16.186) Quit (Ping timeout: 246 seconds)</span></li>
<li class="join">[<a href="#T02:51:49" id="T02:51:49"><abbr title="2015-01-20T02:51:49+00:00">02:51:49</abbr></a>] <span>* ocamlman (~ocamlman@cpe-104-229-169-2.twcny.res.rr.com) has joined #beagle</span></li>
<li class="message">[<a href="#T02:52:04" id="T02:52:04"><abbr title="2015-01-20T02:52:04+00:00">02:52:04</abbr></a>] &lt;<cite>ocamlman</cite>&gt; <q>hello - how can I enable a timer (say, 1ms) as an interupt on the ARM processor?</q></li>
<li class="message">[<a href="#T02:54:42" id="T02:54:42"><abbr title="2015-01-20T02:54:42+00:00">02:54:42</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>what is it for?</q></li>
<li class="message">[<a href="#T02:54:52" id="T02:54:52"><abbr title="2015-01-20T02:54:52+00:00">02:54:52</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>a driver?</q></li>
<li class="message">[<a href="#T02:55:22" id="T02:55:22"><abbr title="2015-01-20T02:55:22+00:00">02:55:22</abbr></a>] &lt;<cite>ocamlman</cite>&gt; <q>a userspace irq handler to timestamp data with sub-ms accuracy</q></li>
<li class="message">[<a href="#T02:55:44" id="T02:55:44"><abbr title="2015-01-20T02:55:44+00:00">02:55:44</abbr></a>] &lt;<cite>ddrown</cite>&gt; <q>the kernel already has sub-ms timestamps available</q></li>
<li class="message">[<a href="#T02:55:55" id="T02:55:55"><abbr title="2015-01-20T02:55:55+00:00">02:55:55</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>you cannot guarantee that kind of timing in userspace</q></li>
<li class="message">[<a href="#T02:55:59" id="T02:55:59"><abbr title="2015-01-20T02:55:59+00:00">02:55:59</abbr></a>] &lt;<cite>ddrown</cite>&gt; <q>yup</q></li>
<li class="message">[<a href="#T02:56:02" id="T02:56:02"><abbr title="2015-01-20T02:56:02+00:00">02:56:02</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>move to the kernel</q></li>
<li class="message">[<a href="#T02:56:20" id="T02:56:20"><abbr title="2015-01-20T02:56:20+00:00">02:56:20</abbr></a>] &lt;<cite>ddrown</cite>&gt; <q>irq handler also has a few microseconds (~10us) delay</q></li>
<li class="message">[<a href="#T02:57:03" id="T02:57:03"><abbr title="2015-01-20T02:57:03+00:00">02:57:03</abbr></a>] &lt;<cite>ocamlman</cite>&gt; <q>the plan is to use an external clock to trigger an irq which, in userspace, will call clock_gettime and the value of the write pointer of a ring buffer then release. later, that pairing will be logged.</q></li>
<li class="message">[<a href="#T02:57:27" id="T02:57:27"><abbr title="2015-01-20T02:57:27+00:00">02:57:27</abbr></a>] &lt;<cite>ddrown</cite>&gt; <q>maybe you'd be interested in the pps framework</q></li>
<li class="message">[<a href="#T02:57:40" id="T02:57:40"><abbr title="2015-01-20T02:57:40+00:00">02:57:40</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>just write it in the kernel and be done with</q></li>
<li class="message">[<a href="#T02:57:48" id="T02:57:48"><abbr title="2015-01-20T02:57:48+00:00">02:57:48</abbr></a>] &lt;<cite>ddrown</cite>&gt; <q>it's designed for one pulse per second</q></li>
<li class="message">[<a href="#T02:57:51" id="T02:57:51"><abbr title="2015-01-20T02:57:51+00:00">02:57:51</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>these userland shannigans are a waste of time.</q></li>
<li class="message">[<a href="#T02:58:01" id="T02:58:01"><abbr title="2015-01-20T02:58:01+00:00">02:58:01</abbr></a>] &lt;<cite>ddrown</cite>&gt; <q>pps-gpio is the kernel module</q></li>
<li class="message">[<a href="#T02:58:24" id="T02:58:24"><abbr title="2015-01-20T02:58:24+00:00">02:58:24</abbr></a>] &lt;<cite>ocamlman</cite>&gt; <q>the goal is that every few samples, i get a timestamp associated with one of them. I am collecting data (with the PRU) at &gt;20MHz so I want to timestamp at every 10 ms or so</q></li>
<li class="message">[<a href="#T02:58:58" id="T02:58:58"><abbr title="2015-01-20T02:58:58+00:00">02:58:58</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>where is the data coming rom?</q></li>
<li class="message">[<a href="#T02:58:59" id="T02:58:59"><abbr title="2015-01-20T02:58:59+00:00">02:58:59</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>from</q></li>
<li class="message">[<a href="#T02:59:04" id="T02:59:04"><abbr title="2015-01-20T02:59:04+00:00">02:59:04</abbr></a>] &lt;<cite>ocamlman</cite>&gt; <q>adc</q></li>
<li class="message">[<a href="#T02:59:26" id="T02:59:26"><abbr title="2015-01-20T02:59:26+00:00">02:59:26</abbr></a>] &lt;<cite>ocamlman</cite>&gt; <q>adc-&gt;pru-&gt;12k shared memory-&gt;arm-&gt;file</q></li>
<li class="quit">[<a href="#T02:59:45" id="T02:59:45"><abbr title="2015-01-20T02:59:45+00:00">02:59:45</abbr></a>] <span>* djerome (~djerome@ip24-251-115-14.ph.ph.cox.net) Quit (Ping timeout: 245 seconds)</span></li>
<li class="message">[<a href="#T02:59:48" id="T02:59:48"><abbr title="2015-01-20T02:59:48+00:00">02:59:48</abbr></a>] &lt;<cite>ocamlman</cite>&gt; <q>*20KHz, sorry</q></li>
<li class="message">[<a href="#T03:00:26" id="T03:00:26"><abbr title="2015-01-20T03:00:26+00:00">03:00:26</abbr></a>] &lt;<cite>ddrown</cite>&gt; <q>you should be able to get ~1ms accuracy by just calling gettimeofday in userland</q></li>
<li class="message">[<a href="#T03:00:40" id="T03:00:40"><abbr title="2015-01-20T03:00:40+00:00">03:00:40</abbr></a>] &lt;<cite>ddrown</cite>&gt; <q>as long as there's no scheduling conflicts</q></li>
<li class="message">[<a href="#T03:01:09" id="T03:01:09"><abbr title="2015-01-20T03:01:09+00:00">03:01:09</abbr></a>] &lt;<cite>ddrown</cite>&gt; <q>getting the timestamp in the kernel would be more accurate</q></li>
<li class="message">[<a href="#T03:01:51" id="T03:01:51"><abbr title="2015-01-20T03:01:51+00:00">03:01:51</abbr></a>] &lt;<cite>ocamlman</cite>&gt; <q>I need microsecond at least, which clock_gettime can do, but in between getting the time and getting the write_pointer the kernel could move exection to a different thread and the time I get wouldn't actually correspond with the sample number</q></li>
<li class="message">[<a href="#T03:02:28" id="T03:02:28"><abbr title="2015-01-20T03:02:28+00:00">03:02:28</abbr></a>] &lt;<cite>ocamlman</cite>&gt; <q>I could do kernel-space i guess</q></li>
<li class="message">[<a href="#T03:02:41" id="T03:02:41"><abbr title="2015-01-20T03:02:41+00:00">03:02:41</abbr></a>] &lt;<cite>ocamlman</cite>&gt; <q>but I was exploring options and hoping that a simple irq handler would be easier</q></li>
<li class="quit">[<a href="#T03:03:23" id="T03:03:23"><abbr title="2015-01-20T03:03:23+00:00">03:03:23</abbr></a>] <span>* k-man (~jason@unaffiliated/k-man) Quit (Read error: Connection reset by peer)</span></li>
<li class="join">[<a href="#T03:04:25" id="T03:04:25"><abbr title="2015-01-20T03:04:25+00:00">03:04:25</abbr></a>] <span>* k-man (~jason@unaffiliated/k-man) has joined #beaglebone</span></li>
<li class="message">[<a href="#T03:05:17" id="T03:05:17"><abbr title="2015-01-20T03:05:17+00:00">03:05:17</abbr></a>] &lt;<cite>ddrown</cite>&gt; <q>oh, you need microsecond? that'll be harder</q></li>
<li class="message">[<a href="#T03:05:21" id="T03:05:21"><abbr title="2015-01-20T03:05:21+00:00">03:05:21</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>why are you reading adcs in the PRU?!</q></li>
<li class="message">[<a href="#T03:05:38" id="T03:05:38"><abbr title="2015-01-20T03:05:38+00:00">03:05:38</abbr></a>] &lt;<cite>ocamlman</cite>&gt; <q>as opposed to?</q></li>
<li class="message">[<a href="#T03:05:48" id="T03:05:48"><abbr title="2015-01-20T03:05:48+00:00">03:05:48</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>on the cortex</q></li>
<li class="message">[<a href="#T03:06:03" id="T03:06:03"><abbr title="2015-01-20T03:06:03+00:00">03:06:03</abbr></a>] &lt;<cite>ddrown</cite>&gt; <q>interrupt handler latency is between 12.5us-21us - <a href="http://dan.drown.org/bbb/run11/interrupt-latency.png">http://dan.drown.org/bbb/run11/interrupt-latency.png</a></q></li>
<li class="message">[<a href="#T03:06:25" id="T03:06:25"><abbr title="2015-01-20T03:06:25+00:00">03:06:25</abbr></a>] &lt;<cite>ocamlman</cite>&gt; <q>this is continuous capture, doing months at a time. in the PRU I can collect data without being interrupted</q></li>
<li class="message">[<a href="#T03:06:31" id="T03:06:31"><abbr title="2015-01-20T03:06:31+00:00">03:06:31</abbr></a>] &lt;<cite>ddrown</cite>&gt; <q>BBB, 3.8 kernel</q></li>
<li class="message">[<a href="#T03:06:47" id="T03:06:47"><abbr title="2015-01-20T03:06:47+00:00">03:06:47</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>if you need microsecond accuracy, you better check on the xtals</q></li>
<li class="message">[<a href="#T03:07:06" id="T03:07:06"><abbr title="2015-01-20T03:07:06+00:00">03:07:06</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>you can do the same on the cortex</q></li>
<li class="message">[<a href="#T03:07:15" id="T03:07:15"><abbr title="2015-01-20T03:07:15+00:00">03:07:15</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>i am sampling aduio from the adcs using just the cortex</q></li>
<li class="message">[<a href="#T03:07:56" id="T03:07:56"><abbr title="2015-01-20T03:07:56+00:00">03:07:56</abbr></a>] &lt;<cite>ocamlman</cite>&gt; <q>ddrown, thats fine - if I get an interrupt every 100 microseconds or even millisecond then the irq handler once it starts gets the time from the kernel and the current sample regardless of when it was called</q></li>
<li class="message">[<a href="#T03:08:07" id="T03:08:07"><abbr title="2015-01-20T03:08:07+00:00">03:08:07</abbr></a>] &lt;<cite>ocamlman</cite>&gt; <q>ds2, how? the examples I found online sampled using the PRU</q></li>
<li class="message">[<a href="#T03:08:22" id="T03:08:22"><abbr title="2015-01-20T03:08:22+00:00">03:08:22</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>you cannot get good timing reading from the PRU</q></li>
<li class="message">[<a href="#T03:08:30" id="T03:08:30"><abbr title="2015-01-20T03:08:30+00:00">03:08:30</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>just follow the TRM</q></li>
<li class="message">[<a href="#T03:08:42" id="T03:08:42"><abbr title="2015-01-20T03:08:42+00:00">03:08:42</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>there is no reason to use the PRU; it only makes things worse</q></li>
<li class="join">[<a href="#T03:08:55" id="T03:08:55"><abbr title="2015-01-20T03:08:55+00:00">03:08:55</abbr></a>] <span>* Nico44 (~Nico44@crb44-1-82-67-127-241.fbx.proxad.net) has joined #beagle</span></li>
<li class="quit">[<a href="#T03:09:36" id="T03:09:36"><abbr title="2015-01-20T03:09:36+00:00">03:09:36</abbr></a>] <span>* RagBal (~RagBal@54694E34.cm-12-2b.dynamic.ziggo.nl) Quit (Ping timeout: 252 seconds)</span></li>
<li class="message">[<a href="#T03:09:56" id="T03:09:56"><abbr title="2015-01-20T03:09:56+00:00">03:09:56</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>any accesses outside of the PRU is subject to potential bus traffic delays. it is no longer realtime</q></li>
<li class="message">[<a href="#T03:10:19" id="T03:10:19"><abbr title="2015-01-20T03:10:19+00:00">03:10:19</abbr></a>] &lt;<cite>ocamlman</cite>&gt; <q>ds2, if you are in userspace on the cortex and sampling the adcs continuously, your thread will frequently be paused for arbitrary amounts of time during which you aren't capturing. how do you get around that?</q></li>
<li class="message">[<a href="#T03:10:39" id="T03:10:39"><abbr title="2015-01-20T03:10:39+00:00">03:10:39</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>I do not work in userspace</q></li>
<li class="message">[<a href="#T03:10:55" id="T03:10:55"><abbr title="2015-01-20T03:10:55+00:00">03:10:55</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>1) DO NOT ACCESS HW IN USERSPACE. EVER.</q></li>
<li class="message">[<a href="#T03:11:12" id="T03:11:12"><abbr title="2015-01-20T03:11:12+00:00">03:11:12</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>2) You ask the HW to do all the timing for you. the HW knows best.</q></li>
<li class="message">[<a href="#T03:11:28" id="T03:11:28"><abbr title="2015-01-20T03:11:28+00:00">03:11:28</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>using the HW gets you close to within the jitter of the xtal</q></li>
<li class="message">[<a href="#T03:11:54" id="T03:11:54"><abbr title="2015-01-20T03:11:54+00:00">03:11:54</abbr></a>] &lt;<cite>ocamlman</cite>&gt; <q>ds2, do you have example code I can look at?</q></li>
<li class="quit">[<a href="#T03:12:13" id="T03:12:13"><abbr title="2015-01-20T03:12:13+00:00">03:12:13</abbr></a>] <span>* j0rd_ (~j0rd_@unaffiliated/j0rd-/x-9112651) Quit (Ping timeout: 272 seconds)</span></li>
<li class="message">[<a href="#T03:12:25" id="T03:12:25"><abbr title="2015-01-20T03:12:25+00:00">03:12:25</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>not really... all my code has 3248984329184094 #if's from experimenting with options</q></li>
<li class="message">[<a href="#T03:12:37" id="T03:12:37"><abbr title="2015-01-20T03:12:37+00:00">03:12:37</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>not helpful to anyone that doesn't know the history of the code</q></li>
<li class="message">[<a href="#T03:12:42" id="T03:12:42"><abbr title="2015-01-20T03:12:42+00:00">03:12:42</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>one day, I'll clean it up</q></li>
<li class="message">[<a href="#T03:12:49" id="T03:12:49"><abbr title="2015-01-20T03:12:49+00:00">03:12:49</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>and get the alsa interface to work :(</q></li>
<li class="quit">[<a href="#T03:13:08" id="T03:13:08"><abbr title="2015-01-20T03:13:08+00:00">03:13:08</abbr></a>] <span>* Nico44 (~Nico44@crb44-1-82-67-127-241.fbx.proxad.net) Quit (Ping timeout: 246 seconds)</span></li>
<li class="message">[<a href="#T03:13:16" id="T03:13:16"><abbr title="2015-01-20T03:13:16+00:00">03:13:16</abbr></a>] &lt;<cite>ocamlman</cite>&gt; <q>ds2, how severe is the downside of reading from the PRU into a ring buffer?</q></li>
<li class="message">[<a href="#T03:13:41" id="T03:13:41"><abbr title="2015-01-20T03:13:41+00:00">03:13:41</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>donno, there are no published numbers for delays on the bus</q></li>
<li class="join">[<a href="#T03:13:50" id="T03:13:50"><abbr title="2015-01-20T03:13:50+00:00">03:13:50</abbr></a>] <span>* j0rd_ (~j0rd_@unaffiliated/j0rd-/x-9112651) has joined #beagle</span></li>
<li class="message">[<a href="#T03:13:52" id="T03:13:52"><abbr title="2015-01-20T03:13:52+00:00">03:13:52</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>bbl, traffic is clear</q></li>
<li class="message">[<a href="#T03:14:11" id="T03:14:11"><abbr title="2015-01-20T03:14:11+00:00">03:14:11</abbr></a>] &lt;<cite>ocamlman</cite>&gt; <q>ds2, i found a source saying 5-8 cycles</q></li>
<li class="message">[<a href="#T03:14:29" id="T03:14:29"><abbr title="2015-01-20T03:14:29+00:00">03:14:29</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>for what?</q></li>
<li class="join">[<a href="#T03:14:37" id="T03:14:37"><abbr title="2015-01-20T03:14:37+00:00">03:14:37</abbr></a>] <span>* djerome (~djerome@ip24-251-115-14.ph.ph.cox.net) has joined #beaglebone</span></li>
<li class="join">[<a href="#T03:14:43" id="T03:14:43"><abbr title="2015-01-20T03:14:43+00:00">03:14:43</abbr></a>] <span>* RagBal (~RagBal@54694E34.cm-12-2b.dynamic.ziggo.nl) has joined #beagle</span></li>
<li class="message">[<a href="#T03:14:45" id="T03:14:45"><abbr title="2015-01-20T03:14:45+00:00">03:14:45</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>do you know the priority for the ADC module?</q></li>
<li class="message">[<a href="#T03:14:58" id="T03:14:58"><abbr title="2015-01-20T03:14:58+00:00">03:14:58</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>might be on later</q></li>
<li class="message">[<a href="#T03:15:13" id="T03:15:13"><abbr title="2015-01-20T03:15:13+00:00">03:15:13</abbr></a>] &lt;<cite>ocamlman</cite>&gt; <q>aight, thanks for the help. cya</q></li>
<li class="quit">[<a href="#T03:15:33" id="T03:15:33"><abbr title="2015-01-20T03:15:33+00:00">03:15:33</abbr></a>] <span>* ecdhe (~ecdhe@173-22-126-166.client.mchsi.com) Quit (Ping timeout: 264 seconds)</span></li>
<li class="join">[<a href="#T03:37:47" id="T03:37:47"><abbr title="2015-01-20T03:37:47+00:00">03:37:47</abbr></a>] <span>* yates (~user@71.51.248.203) has joined #beagle</span></li>
<li class="message">[<a href="#T03:39:21" id="T03:39:21"><abbr title="2015-01-20T03:39:21+00:00">03:39:21</abbr></a>] &lt;<cite>yates</cite>&gt; <q>is there a new debian 7.7 non-flash console image for the bbb that supports ndis?</q></li>
<li class="message">[<a href="#T03:40:10" id="T03:40:10"><abbr title="2015-01-20T03:40:10+00:00">03:40:10</abbr></a>] &lt;<cite>yates</cite>&gt; <q>i've tried bone-debian-7.7-console-armhf-2014-12-19-2gb.img but it doesn't work for me (won't even boot)</q></li>
<li class="join">[<a href="#T03:43:01" id="T03:43:01"><abbr title="2015-01-20T03:43:01+00:00">03:43:01</abbr></a>] <span>* manuel__ (~manuel@c-24-61-40-209.hsd1.ma.comcast.net) has joined #beagle</span></li>
<li class="nick-change">[<a href="#T03:53:36" id="T03:53:36"><abbr title="2015-01-20T03:53:36+00:00">03:53:36</abbr></a>] <span>* BitEvil is now known as SpeedEvil</span></li>
