<li class="quit">[<a href="#T00:04:23" id="T00:04:23"><abbr title="2008-10-12T00:04:23+00:00">00:04:23</abbr></a>] <span>* JimDonovan (n=jimd@c-66-30-223-191.hsd1.ma.comcast.net) Quit ("Leaving.")</span></li>
<li class="join">[<a href="#T00:30:48" id="T00:30:48"><abbr title="2008-10-12T00:30:48+00:00">00:30:48</abbr></a>] <span>* Beagle5 (n=Beagle5@92-234-76-49.cable.ubr15.haye.blueyonder.co.uk) has joined #beagle</span></li>
<li class="quit">[<a href="#T00:33:08" id="T00:33:08"><abbr title="2008-10-12T00:33:08+00:00">00:33:08</abbr></a>] <span>* Beagle5 (n=Beagle5@92-234-76-49.cable.ubr15.haye.blueyonder.co.uk) Quit (Client Quit)</span></li>
<li class="join">[<a href="#T00:33:34" id="T00:33:34"><abbr title="2008-10-12T00:33:34+00:00">00:33:34</abbr></a>] <span>* Beagle2 (n=Beagle2@92-234-76-49.cable.ubr15.haye.blueyonder.co.uk) has joined #beagle</span></li>
<li class="join">[<a href="#T00:47:25" id="T00:47:25"><abbr title="2008-10-12T00:47:25+00:00">00:47:25</abbr></a>] <span>* stud (n=stud@pool-71-96-223-186.dfw.dsl-w.verizon.net) has joined #beagle</span></li>
<li class="message">[<a href="#T00:50:45" id="T00:50:45"><abbr title="2008-10-12T00:50:45+00:00">00:50:45</abbr></a>] &lt;<cite>stud</cite>&gt; <q>Hello</q></li>
<li class="message">[<a href="#T00:50:58" id="T00:50:58"><abbr title="2008-10-12T00:50:58+00:00">00:50:58</abbr></a>] &lt;<cite>Beagle2</cite>&gt; <q>hello</q></li>
<li class="quit">[<a href="#T00:52:58" id="T00:52:58"><abbr title="2008-10-12T00:52:58+00:00">00:52:58</abbr></a>] <span>* Beagle2 (n=Beagle2@92-234-76-49.cable.ubr15.haye.blueyonder.co.uk) Quit ()</span></li>
<li class="message">[<a href="#T01:05:16" id="T01:05:16"><abbr title="2008-10-12T01:05:16+00:00">01:05:16</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>is the head of l-o fully working for USB on beagle?</q></li>
<li class="message">[<a href="#T01:12:42" id="T01:12:42"><abbr title="2008-10-12T01:12:42+00:00">01:12:42</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>oops evening lull between the continents </q></li>
<li class="quit">[<a href="#T01:14:24" id="T01:14:24"><abbr title="2008-10-12T01:14:24+00:00">01:14:24</abbr></a>] <span>* docelic (n=docelic@78.134.193.37) Quit ("<a href="http://www.spinlocksolutions.com/")">http://www.spinlocksolutions.com/")</a></span></li>
<li class="join">[<a href="#T01:32:32" id="T01:32:32"><abbr title="2008-10-12T01:32:32+00:00">01:32:32</abbr></a>] <span>* khasim (n=a0393720@192.163.20.231) has joined #beagle</span></li>
<li class="join">[<a href="#T01:55:49" id="T01:55:49"><abbr title="2008-10-12T01:55:49+00:00">01:55:49</abbr></a>] <span>* Wowbagger_ (n=wowbagge@d154-20-180-178.bchsia.telus.net) has joined #beagle</span></li>
<li class="message">[<a href="#T01:58:07" id="T01:58:07"><abbr title="2008-10-12T01:58:07+00:00">01:58:07</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>Can u-boot read a kernel image off of an ext2 file system on an SD card? </q></li>
<li class="message">[<a href="#T01:58:15" id="T01:58:15"><abbr title="2008-10-12T01:58:15+00:00">01:58:15</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>I see ext2 commands in u-boot... but I'm having no luck.</q></li>
<li class="message">[<a href="#T01:58:54" id="T01:58:54"><abbr title="2008-10-12T01:58:54+00:00">01:58:54</abbr></a>] &lt;<cite>geist</cite>&gt; <q>it definitely can off of fat. I use that</q></li>
<li class="message">[<a href="#T01:59:08" id="T01:59:08"><abbr title="2008-10-12T01:59:08+00:00">01:59:08</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>I guess I can make a small fat partition</q></li>
<li class="join">[<a href="#T02:23:02" id="T02:23:02"><abbr title="2008-10-12T02:23:02+00:00">02:23:02</abbr></a>] <span>* JuanG (n=Juan@nat/ti/x-e845b6d399224e85) has joined #beagle</span></li>
<li class="part">[<a href="#T02:23:11" id="T02:23:11"><abbr title="2008-10-12T02:23:11+00:00">02:23:11</abbr></a>] <span>* JuanG (n=Juan@nat/ti/x-e845b6d399224e85) has left #beagle</span></li>
<li class="quit">[<a href="#T02:42:28" id="T02:42:28"><abbr title="2008-10-12T02:42:28+00:00">02:42:28</abbr></a>] <span>* tulpe (n=ask@p54AF6376.dip.t-dialin.net) Quit (Read error: 110 (Connection timed out))</span></li>
<li class="join">[<a href="#T02:42:33" id="T02:42:33"><abbr title="2008-10-12T02:42:33+00:00">02:42:33</abbr></a>] <span>* tulpe (n=ask@p54AF6465.dip.t-dialin.net) has joined #beagle</span></li>
<li class="message">[<a href="#T02:53:03" id="T02:53:03"><abbr title="2008-10-12T02:53:03+00:00">02:53:03</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>I'm confused... is codesourcery selling gnu toolchains?</q></li>
<li class="message">[<a href="#T03:21:22" id="T03:21:22"><abbr title="2008-10-12T03:21:22+00:00">03:21:22</abbr></a>] &lt;<cite>swetland</cite>&gt; <q>ms</q></li>
<li class="message">[<a href="#T03:21:23" id="T03:21:23"><abbr title="2008-10-12T03:21:23+00:00">03:21:23</abbr></a>] &lt;<cite>swetland</cite>&gt; <q>oops</q></li>
<li class="quit">[<a href="#T03:42:19" id="T03:42:19"><abbr title="2008-10-12T03:42:19+00:00">03:42:19</abbr></a>] <span>* TangerineHexode (n=fluffy@duracef.shout.net) Quit ("BitchX-1.1-final -- just do it.")</span></li>
<li class="action">[<a href="#T04:05:25" id="T04:05:25"><abbr title="2008-10-12T04:05:25+00:00">04:05:25</abbr></a>] <span>* Wowbagger_ bitbakes</span></li>
<li class="join">[<a href="#T04:17:57" id="T04:17:57"><abbr title="2008-10-12T04:17:57+00:00">04:17:57</abbr></a>] <span>* JoeyBorn (n=jborn@h-68-166-253-24.chcgilgm.dynamic.covad.net) has joined #beagle</span></li>
<li class="quit">[<a href="#T04:18:05" id="T04:18:05"><abbr title="2008-10-12T04:18:05+00:00">04:18:05</abbr></a>] <span>* woski (n=dleme@65.182.51.67) Quit (Read error: 104 (Connection reset by peer))</span></li>
<li class="join">[<a href="#T04:18:36" id="T04:18:36"><abbr title="2008-10-12T04:18:36+00:00">04:18:36</abbr></a>] <span>* woski (n=dleme@65.182.51.67) has joined #beagle</span></li>
<li class="message">[<a href="#T04:38:32" id="T04:38:32"><abbr title="2008-10-12T04:38:32+00:00">04:38:32</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>If I follow the directions on <a href="http://elinux.org/BeagleBoardAndOpenEmbeddedGit">http://elinux.org/BeagleBoardAndOpenEmbeddedGit</a> to build myself a toolchain and base-image, is it straightforward to recompile the kernel? And also cross-compile a simple (minimal) custom C program?</q></li>
<li class="quit">[<a href="#T04:48:26" id="T04:48:26"><abbr title="2008-10-12T04:48:26+00:00">04:48:26</abbr></a>] <span>* JoeyBorn (n=jborn@h-68-166-253-24.chcgilgm.dynamic.covad.net) Quit (Read error: 104 (Connection reset by peer))</span></li>
<li class="join">[<a href="#T04:53:59" id="T04:53:59"><abbr title="2008-10-12T04:53:59+00:00">04:53:59</abbr></a>] <span>* slothlove (n=srussell@ip98-169-198-218.dc.dc.cox.net) has joined #beagle</span></li>
<li class="join">[<a href="#T04:55:25" id="T04:55:25"><abbr title="2008-10-12T04:55:25+00:00">04:55:25</abbr></a>] <span>* gduncan (n=spec@96.251.13.87) has joined #beagle</span></li>
<li class="join">[<a href="#T05:02:09" id="T05:02:09"><abbr title="2008-10-12T05:02:09+00:00">05:02:09</abbr></a>] <span>* JoeyBorn (n=jborn@h-68-166-253-24.chcgilgm.dynamic.covad.net) has joined #beagle</span></li>
<li class="join">[<a href="#T05:09:21" id="T05:09:21"><abbr title="2008-10-12T05:09:21+00:00">05:09:21</abbr></a>] <span>* Olipro_ (n=Olipro@uncyclopedia/Olipro) has joined #beagle</span></li>
<li class="quit">[<a href="#T05:09:31" id="T05:09:31"><abbr title="2008-10-12T05:09:31+00:00">05:09:31</abbr></a>] <span>* Olipro (n=Olipro@uncyclopedia/Olipro) Quit (Read error: 113 (No route to host))</span></li>
<li class="quit">[<a href="#T05:23:21" id="T05:23:21"><abbr title="2008-10-12T05:23:21+00:00">05:23:21</abbr></a>] <span>* Wowbagger_ (n=wowbagge@d154-20-180-178.bchsia.telus.net) Quit ("Leaving")</span></li>
<li class="quit">[<a href="#T05:32:03" id="T05:32:03"><abbr title="2008-10-12T05:32:03+00:00">05:32:03</abbr></a>] <span>* BThompson (n=BThompso@cpe-76-185-93-11.tx.res.rr.com) Quit ("Trillian (<a href="http://www.ceruleanstudios.com")">http://www.ceruleanstudios.com")</a></span></li>
<li class="quit">[<a href="#T05:52:41" id="T05:52:41"><abbr title="2008-10-12T05:52:41+00:00">05:52:41</abbr></a>] <span>* slothlove (n=srussell@ip98-169-198-218.dc.dc.cox.net) Quit (Read error: 110 (Connection timed out))</span></li>
<li class="join">[<a href="#T06:04:31" id="T06:04:31"><abbr title="2008-10-12T06:04:31+00:00">06:04:31</abbr></a>] <span>* Olipro__ (n=Olipro@uncyclopedia/Olipro) has joined #beagle</span></li>
<li class="quit">[<a href="#T06:09:15" id="T06:09:15"><abbr title="2008-10-12T06:09:15+00:00">06:09:15</abbr></a>] <span>* JoeyBorn (n=jborn@h-68-166-253-24.chcgilgm.dynamic.covad.net) Quit (Read error: 110 (Connection timed out))</span></li>
<li class="join">[<a href="#T06:17:45" id="T06:17:45"><abbr title="2008-10-12T06:17:45+00:00">06:17:45</abbr></a>] <span>* Olipro (i=Olipro@uncyclopedia/Olipro) has joined #beagle</span></li>
<li class="quit">[<a href="#T06:21:00" id="T06:21:00"><abbr title="2008-10-12T06:21:00+00:00">06:21:00</abbr></a>] <span>* Olipro_ (n=Olipro@uncyclopedia/Olipro) Quit (Read error: 110 (Connection timed out))</span></li>
<li class="quit">[<a href="#T06:27:03" id="T06:27:03"><abbr title="2008-10-12T06:27:03+00:00">06:27:03</abbr></a>] <span>* Olipro__ (n=Olipro@uncyclopedia/Olipro) Quit (Read error: 110 (Connection timed out))</span></li>
<li class="message">[<a href="#T06:40:21" id="T06:40:21"><abbr title="2008-10-12T06:40:21+00:00">06:40:21</abbr></a>] &lt;<cite>nathanm</cite>&gt; <q>ds2: Depends on your definition of "fully working".</q></li>
<li class="message">[<a href="#T06:40:52" id="T06:40:52"><abbr title="2008-10-12T06:40:52+00:00">06:40:52</abbr></a>] &lt;<cite>nathanm</cite>&gt; <q>ds2: You have to plug in your hub _after_ booting -- devices plugged in aren't detected on linux-omap git since about 2 weeks ago.</q></li>
<li class="message">[<a href="#T06:41:52" id="T06:41:52"><abbr title="2008-10-12T06:41:52+00:00">06:41:52</abbr></a>] &lt;<cite>nathanm</cite>&gt; <q>ds2: Also there are still limitations with running more than one BULK device (i.e., network + USB stick).  And of course problems with cameras and crashes when unplugging.  All of those bugs have been fixed in patches, but aren't in linux-omap git yet.</q></li>
<li class="message">[<a href="#T06:44:39" id="T06:44:39"><abbr title="2008-10-12T06:44:39+00:00">06:44:39</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>heh... well, default config + top of tree == hang on boot</q></li>
<li class="message">[<a href="#T06:46:48" id="T06:46:48"><abbr title="2008-10-12T06:46:48+00:00">06:46:48</abbr></a>] &lt;<cite>nathanm</cite>&gt; <q>Oh, that's EHCI.  Turn that off.</q></li>
<li class="message">[<a href="#T06:55:36" id="T06:55:36"><abbr title="2008-10-12T06:55:36+00:00">06:55:36</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>I'll try that later.. trying MRU's tree</q></li>
<li class="message">[<a href="#T06:55:57" id="T06:55:57"><abbr title="2008-10-12T06:55:57+00:00">06:55:57</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>I just need a tree with the ISO MUSB patches in place... no time to backported to my favorite kernel</q></li>
<li class="quit">[<a href="#T07:15:40" id="T07:15:40"><abbr title="2008-10-12T07:15:40+00:00">07:15:40</abbr></a>] <span>* khasim (n=a0393720@192.163.20.231) Quit (Remote closed the connection)</span></li>
<li class="quit">[<a href="#T07:20:05" id="T07:20:05"><abbr title="2008-10-12T07:20:05+00:00">07:20:05</abbr></a>] <span>* roxfan (n=dunno@189.197-201-80.adsl-dyn.isp.belgacom.be) Quit (Read error: 54 (Connection reset by peer))</span></li>
<li class="join">[<a href="#T07:26:25" id="T07:26:25"><abbr title="2008-10-12T07:26:25+00:00">07:26:25</abbr></a>] <span>* roxfan (n=dunno@109.53-240-81.adsl-dyn.isp.belgacom.be) has joined #beagle</span></li>
<li class="message">[<a href="#T07:28:25" id="T07:28:25"><abbr title="2008-10-12T07:28:25+00:00">07:28:25</abbr></a>] &lt;<cite>gduncan</cite>&gt; <q>Is there still a limitation on the pixel clock?</q></li>
<li class="message">[<a href="#T07:32:02" id="T07:32:02"><abbr title="2008-10-12T07:32:02+00:00">07:32:02</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>yes</q></li>
<li class="message">[<a href="#T07:48:42" id="T07:48:42"><abbr title="2008-10-12T07:48:42+00:00">07:48:42</abbr></a>] &lt;<cite>gduncan</cite>&gt; <q>I'm using the Angstrom distro. My monitor says the bootloader image is 1280x720 43KHz 58Hz, but regardless what I change in /etc/X11/xorg.conf I get garbage. Any suggestions?</q></li>
<li class="message">[<a href="#T07:49:25" id="T07:49:25"><abbr title="2008-10-12T07:49:25+00:00">07:49:25</abbr></a>] &lt;<cite>gduncan</cite>&gt; <q>My modeline uses a clock that is well under the limit.</q></li>
<li class="join">[<a href="#T08:01:14" id="T08:01:14"><abbr title="2008-10-12T08:01:14+00:00">08:01:14</abbr></a>] <span>* garren (n=garren@dsl-243-99-185.telkomadsl.co.za) has joined #beagle</span></li>
<li class="join">[<a href="#T08:58:04" id="T08:58:04"><abbr title="2008-10-12T08:58:04+00:00">08:58:04</abbr></a>] <span>* [X]Spoty (n=stancho@78.90.115.116) has joined #beagle</span></li>
<li class="quit">[<a href="#T09:09:13" id="T09:09:13"><abbr title="2008-10-12T09:09:13+00:00">09:09:13</abbr></a>] <span>* garren (n=garren@dsl-243-99-185.telkomadsl.co.za) Quit (Read error: 110 (Connection timed out))</span></li>
<li class="quit">[<a href="#T09:15:05" id="T09:15:05"><abbr title="2008-10-12T09:15:05+00:00">09:15:05</abbr></a>] <span>* [X]Spot (n=stancho@78.90.115.116) Quit (Read error: 110 (Connection timed out))</span></li>
<li class="join">[<a href="#T09:22:57" id="T09:22:57"><abbr title="2008-10-12T09:22:57+00:00">09:22:57</abbr></a>] <span>* garren (n=garren@dsl-243-99-185.telkomadsl.co.za) has joined #beagle</span></li>
<li class="quit">[<a href="#T09:44:02" id="T09:44:02"><abbr title="2008-10-12T09:44:02+00:00">09:44:02</abbr></a>] <span>* roxfan (n=dunno@109.53-240-81.adsl-dyn.isp.belgacom.be) Quit ()</span></li>
<li class="join">[<a href="#T10:02:51" id="T10:02:51"><abbr title="2008-10-12T10:02:51+00:00">10:02:51</abbr></a>] <span>* valhalla (n=valhalla@81-174-25-222.dynamic.ngi.it) has joined #beagle</span></li>
<li class="join">[<a href="#T10:03:07" id="T10:03:07"><abbr title="2008-10-12T10:03:07+00:00">10:03:07</abbr></a>] <span>* mpoullet1 (n=mpoullet@p4FC1994B.dip0.t-ipconnect.de) has joined #beagle</span></li>
<li class="message">[<a href="#T10:12:20" id="T10:12:20"><abbr title="2008-10-12T10:12:20+00:00">10:12:20</abbr></a>] &lt;<cite>garren</cite>&gt; <q>I've downloaded the official omap linux repository, how do I get make menuconfig to work wih it or dont I need it. How do I edit or change the beagleboard config file</q></li>
<li class="message">[<a href="#T10:14:27" id="T10:14:27"><abbr title="2008-10-12T10:14:27+00:00">10:14:27</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>make ARCH=arm CROSS_COMPILE=/path/to/gcc/bin/arm-none-linux-gnueabi- omap3_beagle_defconfig</q></li>
<li class="message">[<a href="#T10:14:31" id="T10:14:31"><abbr title="2008-10-12T10:14:31+00:00">10:14:31</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>make ARCH=arm CROSS_COMPILE=/path/to/gcc/bin/arm-none-linux-gnueabi- menuconfig</q></li>
<li class="message">[<a href="#T10:15:34" id="T10:15:34"><abbr title="2008-10-12T10:15:34+00:00">10:15:34</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>the CROSS_COMPILE might not be needed for the config stuff but I always give it. And ARCH=arm might not be needed for linux-omap tree but would be needed for the generic linux kernel tree.</q></li>
<li class="message">[<a href="#T10:15:54" id="T10:15:54"><abbr title="2008-10-12T10:15:54+00:00">10:15:54</abbr></a>] &lt;<cite>garren</cite>&gt; <q>awesome thankyou</q></li>
<li class="join">[<a href="#T10:16:35" id="T10:16:35"><abbr title="2008-10-12T10:16:35+00:00">10:16:35</abbr></a>] <span>* ssvb (n=ssvb___@a88-112-4-224.elisa-laajakaista.fi) has joined #beagle</span></li>
<li class="message">[<a href="#T10:17:13" id="T10:17:13"><abbr title="2008-10-12T10:17:13+00:00">10:17:13</abbr></a>] &lt;<cite>garren</cite>&gt; <q>I need the arm-gcc for the omap where do I get it from?</q></li>
<li class="message">[<a href="#T10:21:31" id="T10:21:31"><abbr title="2008-10-12T10:21:31+00:00">10:21:31</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>I have Scratchbox installed so I use toolchains from it</q></li>
<li class="message">[<a href="#T10:22:09" id="T10:22:09"><abbr title="2008-10-12T10:22:09+00:00">10:22:09</abbr></a>] &lt;<cite>kulve</cite>&gt; <q><a href="http://www.codesourcery.com/gnu_toolchains/arm/portal/release313">http://www.codesourcery.com/gnu_toolchains/arm/portal/release313</a></q></li>
<li class="message">[<a href="#T10:22:21" id="T10:22:21"><abbr title="2008-10-12T10:22:21+00:00">10:22:21</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>you should be able the download the 2007q3 from there</q></li>
<li class="message">[<a href="#T10:23:55" id="T10:23:55"><abbr title="2008-10-12T10:23:55+00:00">10:23:55</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>the toolchain is not omap specific but actually supports quite many arm cpu architectures.</q></li>
<li class="message">[<a href="#T10:25:38" id="T10:25:38"><abbr title="2008-10-12T10:25:38+00:00">10:25:38</abbr></a>] &lt;<cite>garren</cite>&gt; <q>great thanks, I've never heard of scratchbox, busy reading up on it. looks very cool</q></li>
<li class="message">[<a href="#T10:26:10" id="T10:26:10"><abbr title="2008-10-12T10:26:10+00:00">10:26:10</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>it's cool, but it's easier to compile kernel in the kernel way instead of using SB for it..</q></li>
<li class="message">[<a href="#T10:26:32" id="T10:26:32"><abbr title="2008-10-12T10:26:32+00:00">10:26:32</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>for compiling "normal" applications/libraries I use SB a lot</q></li>
<li class="message">[<a href="#T10:28:33" id="T10:28:33"><abbr title="2008-10-12T10:28:33+00:00">10:28:33</abbr></a>] &lt;<cite>garren</cite>&gt; <q>ok so for the kernel use KBuild (i think thats what its called) and then for applications use SB? For drivers and other modules not in user space which is recommended?</q></li>
<li class="message">[<a href="#T10:28:36" id="T10:28:36"><abbr title="2008-10-12T10:28:36+00:00">10:28:36</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>e.g. Maemo uses it for compiling packages for Nokia's internet tablets</q></li>
<li class="message">[<a href="#T10:29:08" id="T10:29:08"><abbr title="2008-10-12T10:29:08+00:00">10:29:08</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>for kernel and the kernel modules I just use the make in kernel</q></li>
<li class="message">[<a href="#T10:30:36" id="T10:30:36"><abbr title="2008-10-12T10:30:36+00:00">10:30:36</abbr></a>] &lt;<cite>garren</cite>&gt; <q>ok cool</q></li>
<li class="message">[<a href="#T10:30:42" id="T10:30:42"><abbr title="2008-10-12T10:30:42+00:00">10:30:42</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>for user space stuff there's SB just for compiling and there's Open Embedded based ?ngstrom. ?ngstrom has quite many applications already included. OE cross compiles all applications </q></li>
<li class="message">[<a href="#T10:31:05" id="T10:31:05"><abbr title="2008-10-12T10:31:05+00:00">10:31:05</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>inside the SB you can use linux.onarm.com but that's mainly the platform side, no applications</q></li>
<li class="message">[<a href="#T10:32:49" id="T10:32:49"><abbr title="2008-10-12T10:32:49+00:00">10:32:49</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>if you want about complete distribution with package management you probably should go with OE.</q></li>
<li class="message">[<a href="#T10:33:13" id="T10:33:13"><abbr title="2008-10-12T10:33:13+00:00">10:33:13</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>or ?ngstrom actually</q></li>
<li class="message">[<a href="#T10:33:53" id="T10:33:53"><abbr title="2008-10-12T10:33:53+00:00">10:33:53</abbr></a>] &lt;<cite>garren</cite>&gt; <q>well I'm trying to learn how to develop using embedded linux so I'm just trying hte basics first of compiling and editing the kernel before I start using angstrom etc</q></li>
<li class="message">[<a href="#T10:34:01" id="T10:34:01"><abbr title="2008-10-12T10:34:01+00:00">10:34:01</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>if you want to test out SB, then you should check linux.onarm.com</q></li>
<li class="message">[<a href="#T10:34:07" id="T10:34:07"><abbr title="2008-10-12T10:34:07+00:00">10:34:07</abbr></a>] &lt;<cite>garren</cite>&gt; <q>where do you get your kernel for the beagleboard from?</q></li>
<li class="message">[<a href="#T10:34:25" id="T10:34:25"><abbr title="2008-10-12T10:34:25+00:00">10:34:25</abbr></a>] &lt;<cite>kulve</cite>&gt; <q><a href="http://elinux.org/BeagleBoard#Linux_kernel">http://elinux.org/BeagleBoard#Linux_kernel</a></q></li>
<li class="message">[<a href="#T10:34:31" id="T10:34:31"><abbr title="2008-10-12T10:34:31+00:00">10:34:31</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>that's quite close to linux-omap</q></li>
<li class="message">[<a href="#T10:35:46" id="T10:35:46"><abbr title="2008-10-12T10:35:46+00:00">10:35:46</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>for the "make uImage" to work, you need to get u-boot built first because you need to have mkimage in the $PATH from u-boot/tools</q></li>
<li class="message">[<a href="#T10:36:42" id="T10:36:42"><abbr title="2008-10-12T10:36:42+00:00">10:36:42</abbr></a>] &lt;<cite>garren</cite>&gt; <q>ok cool thanks and which compiler for a noob would you recommend using?</q></li>
<li class="message">[<a href="#T10:36:49" id="T10:36:49"><abbr title="2008-10-12T10:36:49+00:00">10:36:49</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>2007q3</q></li>
<li class="message">[<a href="#T10:37:00" id="T10:37:00"><abbr title="2008-10-12T10:37:00+00:00">10:37:00</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>the later ones has (even more) broken NEON stuff</q></li>
<li class="message">[<a href="#T10:37:02" id="T10:37:02"><abbr title="2008-10-12T10:37:02+00:00">10:37:02</abbr></a>] &lt;<cite>garren</cite>&gt; <q>cool, thats the one without working sound?</q></li>
<li class="message">[<a href="#T10:37:09" id="T10:37:09"><abbr title="2008-10-12T10:37:09+00:00">10:37:09</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>yes, afaik</q></li>
<li class="message">[<a href="#T10:37:24" id="T10:37:24"><abbr title="2008-10-12T10:37:24+00:00">10:37:24</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>afaik, the sound doesn't work with any kernel 100% reliable yet</q></li>
<li class="message">[<a href="#T10:37:56" id="T10:37:56"><abbr title="2008-10-12T10:37:56+00:00">10:37:56</abbr></a>] &lt;<cite>garren</cite>&gt; <q>ok</q></li>
<li class="message">[<a href="#T10:38:31" id="T10:38:31"><abbr title="2008-10-12T10:38:31+00:00">10:38:31</abbr></a>] &lt;<cite>garren</cite>&gt; <q>the makemenu still doesn't work even after trying what you mentioned earlier.</q></li>
<li class="message">[<a href="#T10:39:01" id="T10:39:01"><abbr title="2008-10-12T10:39:01+00:00">10:39:01</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>what does "doesn't work" mean?</q></li>
<li class="message">[<a href="#T10:39:54" id="T10:39:54"><abbr title="2008-10-12T10:39:54+00:00">10:39:54</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>paste the errors to the pastebin if it's not simple to explain</q></li>
<li class="message">[<a href="#T10:41:50" id="T10:41:50"><abbr title="2008-10-12T10:41:50+00:00">10:41:50</abbr></a>] &lt;<cite>garren</cite>&gt; <q>it just crashes with a ton of errors.. I downloaded the source from the git repository anything else I should do before running make menuconfig</q></li>
<li class="message">[<a href="#T10:44:03" id="T10:44:03"><abbr title="2008-10-12T10:44:03+00:00">10:44:03</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>nope</q></li>
<li class="message">[<a href="#T10:44:12" id="T10:44:12"><abbr title="2008-10-12T10:44:12+00:00">10:44:12</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>paste the commands you write and the errors to pastebin</q></li>
<li class="message">[<a href="#T10:44:20" id="T10:44:20"><abbr title="2008-10-12T10:44:20+00:00">10:44:20</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>(pastebin.com)</q></li>
<li class="message">[<a href="#T10:44:21" id="T10:44:21"><abbr title="2008-10-12T10:44:21+00:00">10:44:21</abbr></a>] &lt;<cite>garren</cite>&gt; <q>ok, I'll get the compiler and u-boot compiled first then get back to this...</q></li>
<li class="message">[<a href="#T10:44:26" id="T10:44:26"><abbr title="2008-10-12T10:44:26+00:00">10:44:26</abbr></a>] &lt;<cite>garren</cite>&gt; <q>thanks for the help</q></li>
<li class="message">[<a href="#T10:46:26" id="T10:46:26"><abbr title="2008-10-12T10:46:26+00:00">10:46:26</abbr></a>] &lt;<cite>garren</cite>&gt; <q><a href="http://pastebin.com/d7200916a">http://pastebin.com/d7200916a</a></q></li>
<li class="message">[<a href="#T10:48:06" id="T10:48:06"><abbr title="2008-10-12T10:48:06+00:00">10:48:06</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>you should also add the commands you wrote</q></li>
<li class="message">[<a href="#T10:48:16" id="T10:48:16"><abbr title="2008-10-12T10:48:16+00:00">10:48:16</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>the beagle default config and then the menuconfig</q></li>
<li class="message">[<a href="#T10:48:48" id="T10:48:48"><abbr title="2008-10-12T10:48:48+00:00">10:48:48</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>but I guess there's not much point in running those before you have the cross compiler and can actually try to compile something for the arm..</q></li>
<li class="message">[<a href="#T10:49:53" id="T10:49:53"><abbr title="2008-10-12T10:49:53+00:00">10:49:53</abbr></a>] &lt;<cite>garren</cite>&gt; <q>yeah let me get the compiler... its still downloading and then I think it will work.</q></li>
<li class="join">[<a href="#T11:12:16" id="T11:12:16"><abbr title="2008-10-12T11:12:16+00:00">11:12:16</abbr></a>] <span>* Xenion (n=robert@p579FCE8C.dip.t-dialin.net) has joined #beagle</span></li>
<li class="join">[<a href="#T11:25:18" id="T11:25:18"><abbr title="2008-10-12T11:25:18+00:00">11:25:18</abbr></a>] <span>* RogerMonk (n=a0740758@nat/ti/x-04f6a8fb47964c11) has joined #beagle</span></li>
<li class="join">[<a href="#T11:38:37" id="T11:38:37"><abbr title="2008-10-12T11:38:37+00:00">11:38:37</abbr></a>] <span>* hli (i=chaton@vig91-2-82-232-97-149.fbx.proxad.net) has joined #beagle</span></li>
<li class="quit">[<a href="#T11:42:34" id="T11:42:34"><abbr title="2008-10-12T11:42:34+00:00">11:42:34</abbr></a>] <span>* DJWillis (n=djwillis@82-46-19-72.cable.ubr02.bath.blueyonder.co.uk) Quit (Read error: 110 (Connection timed out))</span></li>
<li class="message">[<a href="#T11:57:59" id="T11:57:59"><abbr title="2008-10-12T11:57:59+00:00">11:57:59</abbr></a>] &lt;<cite>gduncan</cite>&gt; <q>How do I create new resolutions for my monitor? I've tried adding new modelines to /etc/X11/xorg.conf, but no changes have made any effect. What am I missing?</q></li>
<li class="message">[<a href="#T11:58:36" id="T11:58:36"><abbr title="2008-10-12T11:58:36+00:00">11:58:36</abbr></a>] &lt;<cite>mru</cite>&gt; <q>the omapfb driver doesn't support on the fly changes</q></li>
<li class="message">[<a href="#T11:59:22" id="T11:59:22"><abbr title="2008-10-12T11:59:22+00:00">11:59:22</abbr></a>] &lt;<cite>gduncan</cite>&gt; <q>I've cut down to one modeline and start the system fresh after each change.</q></li>
<li class="quit">[<a href="#T11:59:42" id="T11:59:42"><abbr title="2008-10-12T11:59:42+00:00">11:59:42</abbr></a>] <span>* Crofton (n=balister@66-207-66-26.black.dmt.ntelos.net) Quit (Read error: 104 (Connection reset by peer))</span></li>
<li class="quit">[<a href="#T11:59:43" id="T11:59:43"><abbr title="2008-10-12T11:59:43+00:00">11:59:43</abbr></a>] <span>* Crofton|work (n=balister@66-207-66-26.black.dmt.ntelos.net) Quit (Read error: 104 (Connection reset by peer))</span></li>
<li class="message">[<a href="#T12:00:00" id="T12:00:00"><abbr title="2008-10-12T12:00:00+00:00">12:00:00</abbr></a>] &lt;<cite>gduncan</cite>&gt; <q>But it always seems to come up in the same mode, which is unreadable.</q></li>
<li class="join">[<a href="#T12:00:04" id="T12:00:04"><abbr title="2008-10-12T12:00:04+00:00">12:00:04</abbr></a>] <span>* Crofton|work (n=balister@66-207-66-26.black.dmt.ntelos.net) has joined #beagle</span></li>
<li class="message">[<a href="#T12:00:47" id="T12:00:47"><abbr title="2008-10-12T12:00:47+00:00">12:00:47</abbr></a>] &lt;<cite>mru</cite>&gt; <q>what kernel are you using?</q></li>
<li class="message">[<a href="#T12:00:53" id="T12:00:53"><abbr title="2008-10-12T12:00:53+00:00">12:00:53</abbr></a>] &lt;<cite>gduncan</cite>&gt; <q>I'm not even sure where X is launched in this distrubution.</q></li>
<li class="message">[<a href="#T12:01:40" id="T12:01:40"><abbr title="2008-10-12T12:01:40+00:00">12:01:40</abbr></a>] &lt;<cite>gduncan</cite>&gt; <q>Using the Angstrom files linked to from the beginners doc.</q></li>
<li class="message">[<a href="#T12:02:15" id="T12:02:15"><abbr title="2008-10-12T12:02:15+00:00">12:02:15</abbr></a>] &lt;<cite>gduncan</cite>&gt; <q>I have yet to set up a build environment.</q></li>
<li class="message">[<a href="#T12:03:20" id="T12:03:20"><abbr title="2008-10-12T12:03:20+00:00">12:03:20</abbr></a>] &lt;<cite>mru</cite>&gt; <q>on the beagle, run zgrep VIDEO_MODE /proc/config.gz</q></li>
<li class="message">[<a href="#T12:03:26" id="T12:03:26"><abbr title="2008-10-12T12:03:26+00:00">12:03:26</abbr></a>] &lt;<cite>mru</cite>&gt; <q>does that show anything?</q></li>
<li class="message">[<a href="#T12:05:51" id="T12:05:51"><abbr title="2008-10-12T12:05:51+00:00">12:05:51</abbr></a>] &lt;<cite>gduncan</cite>&gt; <q>Can't get to a console without video. No serial available at the moment.</q></li>
<li class="join">[<a href="#T12:05:59" id="T12:05:59"><abbr title="2008-10-12T12:05:59+00:00">12:05:59</abbr></a>] <span>* zedstar (n=john@fsf/member/zedstar) has joined #beagle</span></li>
<li class="message">[<a href="#T12:06:47" id="T12:06:47"><abbr title="2008-10-12T12:06:47+00:00">12:06:47</abbr></a>] &lt;<cite>mru</cite>&gt; <q>I recommend that you get serial working</q></li>
<li class="message">[<a href="#T12:07:11" id="T12:07:11"><abbr title="2008-10-12T12:07:11+00:00">12:07:11</abbr></a>] &lt;<cite>gduncan</cite>&gt; <q>The boot splash mode come up 1280x720</q></li>
<li class="message">[<a href="#T12:07:21" id="T12:07:21"><abbr title="2008-10-12T12:07:21+00:00">12:07:21</abbr></a>] &lt;<cite>mru</cite>&gt; <q>that's irrelevant</q></li>
<li class="message">[<a href="#T12:07:48" id="T12:07:48"><abbr title="2008-10-12T12:07:48+00:00">12:07:48</abbr></a>] &lt;<cite>mru</cite>&gt; <q>the kernel driver changes the mode later</q></li>
<li class="message">[<a href="#T12:08:06" id="T12:08:06"><abbr title="2008-10-12T12:08:06+00:00">12:08:06</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>serial is the first thing to get working with any embedded hw..</q></li>
<li class="message">[<a href="#T12:08:15" id="T12:08:15"><abbr title="2008-10-12T12:08:15+00:00">12:08:15</abbr></a>] &lt;<cite>gduncan</cite>&gt; <q>Prior to Xorg running?</q></li>
<li class="message">[<a href="#T12:08:23" id="T12:08:23"><abbr title="2008-10-12T12:08:23+00:00">12:08:23</abbr></a>] &lt;<cite>mru</cite>&gt; <q>prior to booting the kernel</q></li>
<li class="message">[<a href="#T12:08:45" id="T12:08:45"><abbr title="2008-10-12T12:08:45+00:00">12:08:45</abbr></a>] &lt;<cite>gduncan</cite>&gt; <q>Yes. I set it up at a friends. My serial dongle is in the mail somewhere.</q></li>
<li class="message">[<a href="#T12:08:50" id="T12:08:50"><abbr title="2008-10-12T12:08:50+00:00">12:08:50</abbr></a>] &lt;<cite>mru</cite>&gt; <q>how did you manage to boot it without serial anyway?</q></li>
<li class="message">[<a href="#T12:08:57" id="T12:08:57"><abbr title="2008-10-12T12:08:57+00:00">12:08:57</abbr></a>] &lt;<cite>mru</cite>&gt; <q>ah</q></li>
<li class="message">[<a href="#T12:09:19" id="T12:09:19"><abbr title="2008-10-12T12:09:19+00:00">12:09:19</abbr></a>] &lt;<cite>gduncan</cite>&gt; <q>And of course X looked great on his monitor.</q></li>
<li class="message">[<a href="#T12:09:59" id="T12:09:59"><abbr title="2008-10-12T12:09:59+00:00">12:09:59</abbr></a>] &lt;<cite>gduncan</cite>&gt; <q>I've been mounting the SD card on another machine here and making edits to xorg.conf</q></li>
<li class="quit">[<a href="#T12:10:50" id="T12:10:50"><abbr title="2008-10-12T12:10:50+00:00">12:10:50</abbr></a>] <span>* guillaum1 (n=gl@AMontsouris-153-1-38-79.w90-2.abo.wanadoo.fr) Quit (Read error: 110 (Connection timed out))</span></li>
<li class="join">[<a href="#T12:11:19" id="T12:11:19"><abbr title="2008-10-12T12:11:19+00:00">12:11:19</abbr></a>] <span>* guillaum1 (n=gl@AMontsouris-153-1-16-252.w86-212.abo.wanadoo.fr) has joined #beagle</span></li>
<li class="message">[<a href="#T12:11:24" id="T12:11:24"><abbr title="2008-10-12T12:11:24+00:00">12:11:24</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>serial console would speed up that process (among others) quite a bit :)</q></li>
<li class="message">[<a href="#T12:11:50" id="T12:11:50"><abbr title="2008-10-12T12:11:50+00:00">12:11:50</abbr></a>] &lt;<cite>mru</cite>&gt; <q>no amount of editing xorg.conf will change the video mode</q></li>
<li class="message">[<a href="#T12:12:02" id="T12:12:02"><abbr title="2008-10-12T12:12:02+00:00">12:12:02</abbr></a>] &lt;<cite>gduncan</cite>&gt; <q>Don't I know it!</q></li>
<li class="message">[<a href="#T12:12:08" id="T12:12:08"><abbr title="2008-10-12T12:12:08+00:00">12:12:08</abbr></a>] &lt;<cite>gduncan</cite>&gt; <q>No?</q></li>
<li class="message">[<a href="#T12:13:04" id="T12:13:04"><abbr title="2008-10-12T12:13:04+00:00">12:13:04</abbr></a>] &lt;<cite>mru</cite>&gt; <q>as I said, the kernel driver doesn't support changing resolution on the fly</q></li>
<li class="message">[<a href="#T12:13:55" id="T12:13:55"><abbr title="2008-10-12T12:13:55+00:00">12:13:55</abbr></a>] &lt;<cite>gduncan</cite>&gt; <q>So where does the needed change take place? Kernel option?</q></li>
<li class="message">[<a href="#T12:14:09" id="T12:14:09"><abbr title="2008-10-12T12:14:09+00:00">12:14:09</abbr></a>] &lt;<cite>mru</cite>&gt; <q>depends</q></li>
<li class="message">[<a href="#T12:14:25" id="T12:14:25"><abbr title="2008-10-12T12:14:25+00:00">12:14:25</abbr></a>] &lt;<cite>mru</cite>&gt; <q>iirc, the angstrom kernel has a boot argument for the video mode</q></li>
<li class="message">[<a href="#T12:14:43" id="T12:14:43"><abbr title="2008-10-12T12:14:43+00:00">12:14:43</abbr></a>] &lt;<cite>mru</cite>&gt; <q>that's why I asked you to run that grep command</q></li>
<li class="message">[<a href="#T12:15:13" id="T12:15:13"><abbr title="2008-10-12T12:15:13+00:00">12:15:13</abbr></a>] &lt;<cite>mru</cite>&gt; <q>but you can't change the kernel command line without serial</q></li>
<li class="message">[<a href="#T12:15:57" id="T12:15:57"><abbr title="2008-10-12T12:15:57+00:00">12:15:57</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>mtd2: 00020000 00020000 "U-Boot Env"</q></li>
<li class="message">[<a href="#T12:16:05" id="T12:16:05"><abbr title="2008-10-12T12:16:05+00:00">12:16:05</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>there should be a command line tool to edit that? :)</q></li>
<li class="message">[<a href="#T12:16:18" id="T12:16:18"><abbr title="2008-10-12T12:16:18+00:00">12:16:18</abbr></a>] &lt;<cite>mru</cite>&gt; <q>I've never heard of one</q></li>
<li class="join">[<a href="#T12:16:22" id="T12:16:22"><abbr title="2008-10-12T12:16:22+00:00">12:16:22</abbr></a>] <span>* Crofton (n=balister@66-207-66-26.black.dmt.ntelos.net) has joined #beagle</span></li>
<li class="message">[<abbr title="2008-10-12T12:16:22+00:00">12:16:22</abbr>] &lt;<cite>kulve</cite>&gt; <q>me neither</q></li>
<li class="message">[<a href="#T12:16:26" id="T12:16:26"><abbr title="2008-10-12T12:16:26+00:00">12:16:26</abbr></a>] &lt;<cite>gduncan</cite>&gt; <q>I'll write a script to do it at boot.</q></li>
<li class="message">[<a href="#T12:16:33" id="T12:16:33"><abbr title="2008-10-12T12:16:33+00:00">12:16:33</abbr></a>] &lt;<cite>mru</cite>&gt; <q>and he'd still need some kind of command prompt on the board</q></li>
<li class="join">[<a href="#T12:22:17" id="T12:22:17"><abbr title="2008-10-12T12:22:17+00:00">12:22:17</abbr></a>] <span>* dirk2 (n=dirk@F324b.f.strato-dslnet.de) has joined #beagle</span></li>
<li class="message">[<a href="#T12:27:15" id="T12:27:15"><abbr title="2008-10-12T12:27:15+00:00">12:27:15</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>mru, in the NEON example you posted on the ml on Jul28</q></li>
<li class="message">[<a href="#T12:27:29" id="T12:27:29"><abbr title="2008-10-12T12:27:29+00:00">12:27:29</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>what happens if the vectors are not multiples of 8 in length?</q></li>
<li class="message">[<a href="#T12:27:33" id="T12:27:33"><abbr title="2008-10-12T12:27:33+00:00">12:27:33</abbr></a>] &lt;<cite>mru</cite>&gt; <q>what was that about?</q></li>
<li class="message">[<a href="#T12:27:41" id="T12:27:41"><abbr title="2008-10-12T12:27:41+00:00">12:27:41</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q><a href="http://groups.google.com/group/beagleboard/browse_thread/thread/2ca91dbe2d2ac335?fwc=1">http://groups.google.com/group/beagleboard/browse_thread/thread/2ca91dbe2d2ac335?fwc=1</a></q></li>
<li class="message">[<a href="#T12:27:56" id="T12:27:56"><abbr title="2008-10-12T12:27:56+00:00">12:27:56</abbr></a>] &lt;<cite>mru</cite>&gt; <q>ah, that</q></li>
<li class="message">[<a href="#T12:28:03" id="T12:28:03"><abbr title="2008-10-12T12:28:03+00:00">12:28:03</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>I think you load garbage into the tail end of the vectors ...</q></li>
<li class="message">[<a href="#T12:28:04" id="T12:28:04"><abbr title="2008-10-12T12:28:04+00:00">12:28:04</abbr></a>] &lt;<cite>mru</cite>&gt; <q>if it's not a multiple of 8, it doesn't work</q></li>
<li class="message">[<a href="#T12:28:08" id="T12:28:08"><abbr title="2008-10-12T12:28:08+00:00">12:28:08</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>ok</q></li>
<li class="message">[<a href="#T12:28:13" id="T12:28:13"><abbr title="2008-10-12T12:28:13+00:00">12:28:13</abbr></a>] &lt;<cite>mru</cite>&gt; <q>it was a quick example</q></li>
<li class="message">[<a href="#T12:28:16" id="T12:28:16"><abbr title="2008-10-12T12:28:16+00:00">12:28:16</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>right</q></li>
<li class="message">[<a href="#T12:28:26" id="T12:28:26"><abbr title="2008-10-12T12:28:26+00:00">12:28:26</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>I just wanted to make sure you weren't being clever</q></li>
<li class="message">[<a href="#T12:28:45" id="T12:28:45"><abbr title="2008-10-12T12:28:45+00:00">12:28:45</abbr></a>] &lt;<cite>mru</cite>&gt; <q>should be easy enough to add handling for a non-mod-8 tail</q></li>
<li class="message">[<a href="#T12:29:06" id="T12:29:06"><abbr title="2008-10-12T12:29:06+00:00">12:29:06</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>I suspect it is faster to pad everything to 8 ....</q></li>
<li class="message">[<a href="#T12:29:19" id="T12:29:19"><abbr title="2008-10-12T12:29:19+00:00">12:29:19</abbr></a>] &lt;<cite>mru</cite>&gt; <q>if that's an option...</q></li>
<li class="message">[<a href="#T12:29:44" id="T12:29:44"><abbr title="2008-10-12T12:29:44+00:00">12:29:44</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>I'll see what the sse code does for a stasrt</q></li>
<li class="message">[<a href="#T12:30:01" id="T12:30:01"><abbr title="2008-10-12T12:30:01+00:00">12:30:01</abbr></a>] &lt;<cite>mru</cite>&gt; <q>neon and sse are similar in some ways</q></li>
<li class="message">[<a href="#T12:30:11" id="T12:30:11"><abbr title="2008-10-12T12:30:11+00:00">12:30:11</abbr></a>] &lt;<cite>mru</cite>&gt; <q>but neither is a subset of the other</q></li>
<li class="message">[<a href="#T12:30:25" id="T12:30:25"><abbr title="2008-10-12T12:30:25+00:00">12:30:25</abbr></a>] &lt;<cite>mru</cite>&gt; <q>and the cycle timings sometimes differ significantly</q></li>
<li class="message">[<a href="#T12:31:12" id="T12:31:12"><abbr title="2008-10-12T12:31:12+00:00">12:31:12</abbr></a>] &lt;<cite>mru</cite>&gt; <q>well-optimised sse code often uses strange tricks to avoid using slow instructions</q></li>
<li class="message">[<a href="#T12:32:00" id="T12:32:00"><abbr title="2008-10-12T12:32:00+00:00">12:32:00</abbr></a>] &lt;<cite>mru</cite>&gt; <q>most neon instructions have one issue cycle, some have two, and a few rare ones more</q></li>
<li class="message">[<a href="#T12:32:36" id="T12:32:36"><abbr title="2008-10-12T12:32:36+00:00">12:32:36</abbr></a>] &lt;<cite>mru</cite>&gt; <q>the tricky part with neon is to pipeline things efficiently</q></li>
<li class="message">[<a href="#T12:32:43" id="T12:32:43"><abbr title="2008-10-12T12:32:43+00:00">12:32:43</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q><a href="http://gnuradio.org/trac/browser/gnuradio/trunk/gnuradio-core/src/lib/filter/float_dotprod_sse.S">http://gnuradio.org/trac/browser/gnuradio/trunk/gnuradio-core/src/lib/filter/float_dotprod_sse.S</a></q></li>
<li class="message">[<a href="#T12:34:01" id="T12:34:01"><abbr title="2008-10-12T12:34:01+00:00">12:34:01</abbr></a>] &lt;<cite>mru</cite>&gt; <q>urgh, I can't read sse code</q></li>
<li class="message">[<a href="#T12:36:16" id="T12:36:16"><abbr title="2008-10-12T12:36:16+00:00">12:36:16</abbr></a>] &lt;<cite>mru</cite>&gt; <q>I have the feeling my little example could be optimised further</q></li>
<li class="message">[<a href="#T12:38:54" id="T12:38:54"><abbr title="2008-10-12T12:38:54+00:00">12:38:54</abbr></a>] &lt;<cite>dirk2</cite>&gt; <q>A little off topic, but maybe someone knows this here. I have to link (x86, not at target) against a precompiled shared library (OpenOCD stuff: libftd2xx.so) and linker fails with</q></li>
<li class="message">[<a href="#T12:39:01" id="T12:39:01"><abbr title="2008-10-12T12:39:01+00:00">12:39:01</abbr></a>] &lt;<cite>dirk2</cite>&gt; <q>libftd2xx.so: undefined reference to __stack_chk_fail@GLIBC_2.4</q></li>
<li class="message">[<a href="#T12:39:23" id="T12:39:23"><abbr title="2008-10-12T12:39:23+00:00">12:39:23</abbr></a>] &lt;<cite>dirk2</cite>&gt; <q>Seems that my systems glibc is too old for stack check stuff. Now, for tests, I simply want to make linker happy with a stub function. How do I create a dummy .o file containing a "__stack_chk_fail@GLIBC_2.4" function. Esp, where does this "@GLIBC_2.4" come from/can be created?</q></li>
<li class="message">[<a href="#T12:39:24" id="T12:39:24"><abbr title="2008-10-12T12:39:24+00:00">12:39:24</abbr></a>] &lt;<cite>mru</cite>&gt; <q>dirk2: libftd2xx.so was built against a newer glibc than you're using</q></li>
<li class="message">[<a href="#T12:40:13" id="T12:40:13"><abbr title="2008-10-12T12:40:13+00:00">12:40:13</abbr></a>] &lt;<cite>mru</cite>&gt; <q>what is that function supposed to do?</q></li>
<li class="message">[<a href="#T12:40:36" id="T12:40:36"><abbr title="2008-10-12T12:40:36+00:00">12:40:36</abbr></a>] &lt;<cite>dirk2</cite>&gt; <q>Google says it is called if some stack checks fail</q></li>
<li class="message">[<a href="#T12:40:54" id="T12:40:54"><abbr title="2008-10-12T12:40:54+00:00">12:40:54</abbr></a>] &lt;<cite>mru</cite>&gt; <q>so it should be safe to stub it...</q></li>
<li class="message">[<a href="#T12:41:18" id="T12:41:18"><abbr title="2008-10-12T12:41:18+00:00">12:41:18</abbr></a>] &lt;<cite>dirk2</cite>&gt; <q>Yes, this is my idea. At least for tests ;)</q></li>
<li class="message">[<a href="#T12:42:20" id="T12:42:20"><abbr title="2008-10-12T12:42:20+00:00">12:42:20</abbr></a>] &lt;<cite>dirk2</cite>&gt; <q>Creating a __stack_chk_fail dummy is easy, but this "@GLIBC_2.4" confuses me. "@" can't be used in function names?</q></li>
<li class="message">[<a href="#T12:42:52" id="T12:42:52"><abbr title="2008-10-12T12:42:52+00:00">12:42:52</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>can't you rebuilt the libftd2xx.so?</q></li>
<li class="message">[<a href="#T12:42:56" id="T12:42:56"><abbr title="2008-10-12T12:42:56+00:00">12:42:56</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>rebuild</q></li>
<li class="message">[<a href="#T12:43:09" id="T12:43:09"><abbr title="2008-10-12T12:43:09+00:00">12:43:09</abbr></a>] &lt;<cite>dirk2</cite>&gt; <q>As far as I saw no source :(</q></li>
<li class="message">[<a href="#T12:43:21" id="T12:43:21"><abbr title="2008-10-12T12:43:21+00:00">12:43:21</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>binary releases are always fun..</q></li>
<li class="message">[<a href="#T12:43:45" id="T12:43:45"><abbr title="2008-10-12T12:43:45+00:00">12:43:45</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>setup a chroot with newer glibc (and everything)</q></li>
<li class="message">[<a href="#T12:44:29" id="T12:44:29"><abbr title="2008-10-12T12:44:29+00:00">12:44:29</abbr></a>] &lt;<cite>dirk2</cite>&gt; <q>Stub sounds easier if I only could figure out this "@GLIBC_2.4" ;)</q></li>
<li class="message">[<a href="#T12:44:53" id="T12:44:53"><abbr title="2008-10-12T12:44:53+00:00">12:44:53</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>yep, "if only" ;)</q></li>
<li class="message">[<a href="#T12:45:03" id="T12:45:03"><abbr title="2008-10-12T12:45:03+00:00">12:45:03</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>and the problems probably doesn't stop there..</q></li>
<li class="message">[<a href="#T12:45:33" id="T12:45:33"><abbr title="2008-10-12T12:45:33+00:00">12:45:33</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>e.g. debian provides debootstrap that creates functional chroot with one command..</q></li>
<li class="message">[<a href="#T12:45:47" id="T12:45:47"><abbr title="2008-10-12T12:45:47+00:00">12:45:47</abbr></a>] &lt;<cite>dirk2</cite>&gt; <q>No idea where it might come from? Is it part of the original function or appended by library creation?</q></li>
<li class="message">[<a href="#T12:46:08" id="T12:46:08"><abbr title="2008-10-12T12:46:08+00:00">12:46:08</abbr></a>] &lt;<cite>mru</cite>&gt; <q>dirk2: <a href="http://pastebin.com/m2bf7efd6">http://pastebin.com/m2bf7efd6</a></q></li>
<li class="message">[<a href="#T12:46:22" id="T12:46:22"><abbr title="2008-10-12T12:46:22+00:00">12:46:22</abbr></a>] &lt;<cite>mru</cite>&gt; <q>that should do it</q></li>
<li class="message">[<a href="#T12:46:26" id="T12:46:26"><abbr title="2008-10-12T12:46:26+00:00">12:46:26</abbr></a>] &lt;<cite>garren</cite>&gt; <q>anyone know where I can find the install log for Codesourcery binary install?</q></li>
<li class="message">[<a href="#T12:47:37" id="T12:47:37"><abbr title="2008-10-12T12:47:37+00:00">12:47:37</abbr></a>] &lt;<cite>dirk2</cite>&gt; <q>mru: Ah, great! It's assembly. I only thought about C ;) Thanks!</q></li>
<li class="quit">[<a href="#T12:52:19" id="T12:52:19"><abbr title="2008-10-12T12:52:19+00:00">12:52:19</abbr></a>] <span>* garren (n=garren@dsl-243-99-185.telkomadsl.co.za) Quit ("Ex-Chat")</span></li>
<li class="join">[<a href="#T12:55:41" id="T12:55:41"><abbr title="2008-10-12T12:55:41+00:00">12:55:41</abbr></a>] <span>* garren (n=garren@dsl-243-99-185.telkomadsl.co.za) has joined #beagle</span></li>
<li class="message">[<a href="#T12:57:10" id="T12:57:10"><abbr title="2008-10-12T12:57:10+00:00">12:57:10</abbr></a>] &lt;<cite>gduncan</cite>&gt; <q>@mru: I captured the contents of /proc/config.gz. There is no string 'VIDEO_MODE', but many other video related entries.</q></li>
<li class="message">[<a href="#T13:01:04" id="T13:01:04"><abbr title="2008-10-12T13:01:04+00:00">13:01:04</abbr></a>] &lt;<cite>garren</cite>&gt; <q>what is the recommended way of installing the codesourcery compiler? I installed it using the .bin file and it doesn't seem to work.</q></li>
<li class="message">[<a href="#T13:01:51" id="T13:01:51"><abbr title="2008-10-12T13:01:51+00:00">13:01:51</abbr></a>] &lt;<cite>dirk2</cite>&gt; <q>garren: tar version</q></li>
<li class="quit">[<abbr title="2008-10-12T13:01:51+00:00">13:01:51</abbr>] <span>* dcramer (n=davec@dcdsl.ebox.com) Quit (Read error: 104 (Connection reset by peer))</span></li>
<li class="message">[<a href="#T13:02:10" id="T13:02:10"><abbr title="2008-10-12T13:02:10+00:00">13:02:10</abbr></a>] &lt;<cite>garren</cite>&gt; <q>why the tar version?</q></li>
<li class="join">[<a href="#T13:03:03" id="T13:03:03"><abbr title="2008-10-12T13:03:03+00:00">13:03:03</abbr></a>] <span>* dcramer (n=davec@dcdsl.ebox.com) has joined #beagle</span></li>
<li class="message">[<a href="#T13:03:08" id="T13:03:08"><abbr title="2008-10-12T13:03:08+00:00">13:03:08</abbr></a>] &lt;<cite>dirk2</cite>&gt; <q>because the .bin file doesn't seem to work for you</q></li>
<li class="message">[<a href="#T13:04:10" id="T13:04:10"><abbr title="2008-10-12T13:04:10+00:00">13:04:10</abbr></a>] &lt;<cite>garren</cite>&gt; <q>lol makes sense...</q></li>
<li class="message">[<a href="#T13:04:21" id="T13:04:21"><abbr title="2008-10-12T13:04:21+00:00">13:04:21</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>garren: again, what does "it doesn't seem to work" mean?</q></li>
<li class="quit">[<a href="#T13:05:27" id="T13:05:27"><abbr title="2008-10-12T13:05:27+00:00">13:05:27</abbr></a>] <span>* tulpe (n=ask@p54AF6465.dip.t-dialin.net) Quit ()</span></li>
<li class="join">[<a href="#T13:05:31" id="T13:05:31"><abbr title="2008-10-12T13:05:31+00:00">13:05:31</abbr></a>] <span>* tulpe (n=ask@p54AF6465.dip.t-dialin.net) has joined #beagle</span></li>
<li class="message">[<a href="#T13:06:07" id="T13:06:07"><abbr title="2008-10-12T13:06:07+00:00">13:06:07</abbr></a>] &lt;<cite>dirk2</cite>&gt; <q>garren: untar, move it to e.g. /opt/codesourcery/arm-none-linux-gnueabi/arm-2007q3 (or something like this), set path to e.g. /opt/codesourcery/arm-none-linux-gnueabi/arm-2007q3/bin and that's it</q></li>
<li class="message">[<a href="#T13:06:22" id="T13:06:22"><abbr title="2008-10-12T13:06:22+00:00">13:06:22</abbr></a>] &lt;<cite>garren</cite>&gt; <q>kulve: <a href="http://pastebin.com/m4ffc900c">http://pastebin.com/m4ffc900c</a></q></li>
<li class="message">[<a href="#T13:06:24" id="T13:06:24"><abbr title="2008-10-12T13:06:24+00:00">13:06:24</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>no need to set path, when compiling kernel with CROSS_COMPILE</q></li>
<li class="message">[<a href="#T13:06:44" id="T13:06:44"><abbr title="2008-10-12T13:06:44+00:00">13:06:44</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>garren: the first line looks odd</q></li>
<li class="message">[<a href="#T13:06:49" id="T13:06:49"><abbr title="2008-10-12T13:06:49+00:00">13:06:49</abbr></a>] &lt;<cite>mru</cite>&gt; <q>I always build the compiler from source</q></li>
<li class="action">[<a href="#T13:06:57" id="T13:06:57"><abbr title="2008-10-12T13:06:57+00:00">13:06:57</abbr></a>] <span>* mru doesn't trust binary distributions</span></li>
<li class="join">[<a href="#T13:07:03" id="T13:07:03"><abbr title="2008-10-12T13:07:03+00:00">13:07:03</abbr></a>] <span>* felipec (n=felipec@a88-113-6-167.elisa-laajakaista.fi) has joined #beagle</span></li>
<li class="join">[<a href="#T13:07:25" id="T13:07:25"><abbr title="2008-10-12T13:07:25+00:00">13:07:25</abbr></a>] <span>* igor321 (n=igor@178-56.dsl.iskon.hr) has joined #beagle</span></li>
<li class="message">[<a href="#T13:07:28" id="T13:07:28"><abbr title="2008-10-12T13:07:28+00:00">13:07:28</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>mru: I use SB toolchains since I trust the SB people more that myself in compiler things :)</q></li>
<li class="message">[<a href="#T13:07:34" id="T13:07:34"><abbr title="2008-10-12T13:07:34+00:00">13:07:34</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>garren: what did you run?</q></li>
<li class="message">[<a href="#T13:07:59" id="T13:07:59"><abbr title="2008-10-12T13:07:59+00:00">13:07:59</abbr></a>] &lt;<cite>garren</cite>&gt; <q>I tried to build u-boot</q></li>
<li class="message">[<a href="#T13:08:31" id="T13:08:31"><abbr title="2008-10-12T13:08:31+00:00">13:08:31</abbr></a>] &lt;<cite>mru</cite>&gt; <q>if I build it myself, I can make it work nicely with gentoo's compiler selection stuff</q></li>
<li class="message">[<a href="#T13:08:37" id="T13:08:37"><abbr title="2008-10-12T13:08:37+00:00">13:08:37</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>try: export PATH=$PATH:/path/to/compiler/bin</q></li>
<li class="message">[<a href="#T13:08:46" id="T13:08:46"><abbr title="2008-10-12T13:08:46+00:00">13:08:46</abbr></a>] &lt;<cite>garren</cite>&gt; <q>ok</q></li>
<li class="message">[<a href="#T13:10:19" id="T13:10:19"><abbr title="2008-10-12T13:10:19+00:00">13:10:19</abbr></a>] &lt;<cite>tulpe</cite>&gt; <q>can someone recommend a wifi stick that works with angstrom?</q></li>
<li class="message">[<a href="#T13:11:46" id="T13:11:46"><abbr title="2008-10-12T13:11:46+00:00">13:11:46</abbr></a>] &lt;<cite>jkridner</cite>&gt; <q>tulpe: <a href="http://code.google.com/p/beagleboard/wiki/BeagleBoardShoppingList">http://code.google.com/p/beagleboard/wiki/BeagleBoardShoppingList</a></q></li>
<li class="message">[<a href="#T13:13:02" id="T13:13:02"><abbr title="2008-10-12T13:13:02+00:00">13:13:02</abbr></a>] &lt;<cite>tulpe</cite>&gt; <q>thanks :)</q></li>
<li class="part">[<a href="#T13:16:01" id="T13:16:01"><abbr title="2008-10-12T13:16:01+00:00">13:16:01</abbr></a>] <span>* dirk2 (n=dirk@F324b.f.strato-dslnet.de) has left #beagle</span></li>
<li class="message">[<a href="#T13:16:07" id="T13:16:07"><abbr title="2008-10-12T13:16:07+00:00">13:16:07</abbr></a>] &lt;<cite>tulpe</cite>&gt; <q>is it possible to disable the serial console so the rs232 can be used for something other?  pyserial in my case</q></li>
<li class="message">[<a href="#T13:17:00" id="T13:17:00"><abbr title="2008-10-12T13:17:00+00:00">13:17:00</abbr></a>] &lt;<cite>mru</cite>&gt; <q>there's a second rs232 interface on the expansion port</q></li>
<li class="message">[<a href="#T13:17:20" id="T13:17:20"><abbr title="2008-10-12T13:17:20+00:00">13:17:20</abbr></a>] &lt;<cite>mru</cite>&gt; <q>but yes, you can disable the serial console in the kernel</q></li>
<li class="message">[<a href="#T13:17:53" id="T13:17:53"><abbr title="2008-10-12T13:17:53+00:00">13:17:53</abbr></a>] &lt;<cite>mru</cite>&gt; <q>you'll need to remove the console= boot argument, and edit /etc/inittab</q></li>
<li class="join">[<a href="#T13:17:57" id="T13:17:57"><abbr title="2008-10-12T13:17:57+00:00">13:17:57</abbr></a>] <span>* docelic (n=docelic@78.134.207.111) has joined #beagle</span></li>
<li class="message">[<a href="#T13:18:10" id="T13:18:10"><abbr title="2008-10-12T13:18:10+00:00">13:18:10</abbr></a>] &lt;<cite>mru</cite>&gt; <q>the hope and pray that nothing goes wrong</q></li>
<li class="message">[<a href="#T13:18:17" id="T13:18:17"><abbr title="2008-10-12T13:18:17+00:00">13:18:17</abbr></a>] &lt;<cite>tulpe</cite>&gt; <q>hehe :)</q></li>
<li class="message">[<a href="#T13:18:40" id="T13:18:40"><abbr title="2008-10-12T13:18:40+00:00">13:18:40</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>I guess soldering the pins for the second port wouldn't be a big thing either?</q></li>
<li class="quit">[<a href="#T13:19:50" id="T13:19:50"><abbr title="2008-10-12T13:19:50+00:00">13:19:50</abbr></a>] <span>* garren (n=garren@dsl-243-99-185.telkomadsl.co.za) Quit ("Ex-Chat")</span></li>
<li class="action">[<a href="#T13:21:11" id="T13:21:11"><abbr title="2008-10-12T13:21:11+00:00">13:21:11</abbr></a>] <span>* tulpe heats up his soldering iron</span></li>
<li class="join">[<a href="#T13:24:17" id="T13:24:17"><abbr title="2008-10-12T13:24:17+00:00">13:24:17</abbr></a>] <span>* garren (n=garren@dsl-243-99-185.telkomadsl.co.za) has joined #beagle</span></li>
<li class="quit">[<a href="#T13:25:10" id="T13:25:10"><abbr title="2008-10-12T13:25:10+00:00">13:25:10</abbr></a>] <span>* garren (n=garren@dsl-243-99-185.telkomadsl.co.za) Quit (Client Quit)</span></li>
<li class="join">[<a href="#T13:38:13" id="T13:38:13"><abbr title="2008-10-12T13:38:13+00:00">13:38:13</abbr></a>] <span>* garren (n=garren@dsl-243-99-185.telkomadsl.co.za) has joined #beagle</span></li>
<li class="message">[<a href="#T13:40:54" id="T13:40:54"><abbr title="2008-10-12T13:40:54+00:00">13:40:54</abbr></a>] &lt;<cite>jkridner</cite>&gt; <q>I believe you'd need to add a level translator.</q></li>
<li class="message">[<a href="#T13:41:08" id="T13:41:08"><abbr title="2008-10-12T13:41:08+00:00">13:41:08</abbr></a>] &lt;<cite>jkridner</cite>&gt; <q>(not just the pins)</q></li>
<li class="message">[<a href="#T13:43:42" id="T13:43:42"><abbr title="2008-10-12T13:43:42+00:00">13:43:42</abbr></a>] &lt;<cite>gduncan</cite>&gt; <q>Are there tools to write the bootloader environment variables from linux?</q></li>
<li class="message">[<a href="#T13:43:53" id="T13:43:53"><abbr title="2008-10-12T13:43:53+00:00">13:43:53</abbr></a>] &lt;<cite>adj__</cite>&gt; <q>a level translator is a must, otherwise you'll end up frying something...</q></li>
<li class="quit">[<a href="#T13:46:21" id="T13:46:21"><abbr title="2008-10-12T13:46:21+00:00">13:46:21</abbr></a>] <span>* felipec (n=felipec@a88-113-6-167.elisa-laajakaista.fi) Quit ("Leaving")</span></li>
<li class="message">[<a href="#T13:47:17" id="T13:47:17"><abbr title="2008-10-12T13:47:17+00:00">13:47:17</abbr></a>] &lt;<cite>tulpe</cite>&gt; <q><a href="http://www.pololu.com/catalog/product/207/resources">http://www.pololu.com/catalog/product/207/resources</a> &lt;- has logic level serial input :)</q></li>
<li class="message">[<a href="#T13:47:22" id="T13:47:22"><abbr title="2008-10-12T13:47:22+00:00">13:47:22</abbr></a>] &lt;<cite>mru</cite>&gt; <q>unless the other end also uses the lower levels...</q></li>
<li class="message">[<a href="#T13:47:39" id="T13:47:39"><abbr title="2008-10-12T13:47:39+00:00">13:47:39</abbr></a>] &lt;<cite>mru</cite>&gt; <q>but then it isn't, strictly speaking, rs232</q></li>
<li class="message">[<a href="#T13:50:21" id="T13:50:21"><abbr title="2008-10-12T13:50:21+00:00">13:50:21</abbr></a>] &lt;<cite>adj__</cite>&gt; <q>tulpe: for that you need a non-inverting buffer which rises the voltage level from 1.8 to 5 volts</q></li>
<li class="message">[<a href="#T13:50:26" id="T13:50:26"><abbr title="2008-10-12T13:50:26+00:00">13:50:26</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>tulpe, the expansion connector is 1.8 volt logic</q></li>
<li class="message">[<a href="#T13:52:33" id="T13:52:33"><abbr title="2008-10-12T13:52:33+00:00">13:52:33</abbr></a>] &lt;<cite>stud</cite>&gt; <q>Typically the un level shifted RS232 signals are inverted</q></li>
<li class="join">[<a href="#T13:56:22" id="T13:56:22"><abbr title="2008-10-12T13:56:22+00:00">13:56:22</abbr></a>] <span>* roberto (n=robert@p579FCE8C.dip.t-dialin.net) has joined #beagle</span></li>
<li class="quit">[<a href="#T14:05:54" id="T14:05:54"><abbr title="2008-10-12T14:05:54+00:00">14:05:54</abbr></a>] <span>* Xenion (n=robert@p579FCE8C.dip.t-dialin.net) Quit (Read error: 110 (Connection timed out))</span></li>
<li class="join">[<a href="#T14:09:47" id="T14:09:47"><abbr title="2008-10-12T14:09:47+00:00">14:09:47</abbr></a>] <span>* felipec (n=felipec@a88-113-6-167.elisa-laajakaista.fi) has joined #beagle</span></li>
<li class="message">[<a href="#T14:31:31" id="T14:31:31"><abbr title="2008-10-12T14:31:31+00:00">14:31:31</abbr></a>] &lt;<cite>garren</cite>&gt; <q>anyone use ubuntu? how did you get the CodeSourcery compiler working. Did you download the tar or the bin file?</q></li>
<li class="message">[<a href="#T14:39:17" id="T14:39:17"><abbr title="2008-10-12T14:39:17+00:00">14:39:17</abbr></a>] &lt;<cite>garren</cite>&gt; <q>I downloaded the tar file of the code sourcery compiler and extracted it to /opt/ how do I configure the path to it.</q></li>
<li class="message">[<a href="#T14:42:45" id="T14:42:45"><abbr title="2008-10-12T14:42:45+00:00">14:42:45</abbr></a>] &lt;<cite>jkridner</cite>&gt; <q>garren: you just add it to the path.</q></li>
<li class="message">[<a href="#T14:43:00" id="T14:43:00"><abbr title="2008-10-12T14:43:00+00:00">14:43:00</abbr></a>] &lt;<cite>jkridner</cite>&gt; <q>export PATH=/opt/&lt;directory&gt;:$PATH</q></li>
<li class="message">[<a href="#T14:43:19" id="T14:43:19"><abbr title="2008-10-12T14:43:19+00:00">14:43:19</abbr></a>] &lt;<cite>jkridner</cite>&gt; <q>where &lt;directory&gt; is the bin directory of where you installed the compiler.</q></li>
<li class="message">[<a href="#T14:43:45" id="T14:43:45"><abbr title="2008-10-12T14:43:45+00:00">14:43:45</abbr></a>] &lt;<cite>garren</cite>&gt; <q>jkridner: thats what I thought but how if I use export it fails, and if I use the bin installer it also fails to add to the path. I'm using Ubuntu any ideas?</q></li>
<li class="message">[<a href="#T14:43:49" id="T14:43:49"><abbr title="2008-10-12T14:43:49+00:00">14:43:49</abbr></a>] &lt;<cite>jkridner</cite>&gt; <q>you can add that line to your ~/.profile file to avoid typing it in each time.</q></li>
<li class="message">[<a href="#T14:44:19" id="T14:44:19"><abbr title="2008-10-12T14:44:19+00:00">14:44:19</abbr></a>] &lt;<cite>jkridner</cite>&gt; <q>I've used Ubuntu with export without problems.</q></li>
<li class="message">[<a href="#T14:44:33" id="T14:44:33"><abbr title="2008-10-12T14:44:33+00:00">14:44:33</abbr></a>] &lt;<cite>jkridner</cite>&gt; <q>which shell are you using?  bash?  dash?</q></li>
<li class="message">[<a href="#T14:45:03" id="T14:45:03"><abbr title="2008-10-12T14:45:03+00:00">14:45:03</abbr></a>] &lt;<cite>jkridner</cite>&gt; <q>there are reasons to switch from dash to bash, but that shouldn't affect your ability to run the compiler, as far as I know.</q></li>
<li class="message">[<a href="#T14:45:06" id="T14:45:06"><abbr title="2008-10-12T14:45:06+00:00">14:45:06</abbr></a>] &lt;<cite>garren</cite>&gt; <q>its standard ubuntu so I assume bash</q></li>
<li class="message">[<a href="#T14:45:16" id="T14:45:16"><abbr title="2008-10-12T14:45:16+00:00">14:45:16</abbr></a>] &lt;<cite>garren</cite>&gt; <q>how do I switch to bash?</q></li>
<li class="message">[<a href="#T14:45:57" id="T14:45:57"><abbr title="2008-10-12T14:45:57+00:00">14:45:57</abbr></a>] &lt;<cite>jkridner</cite>&gt; <q><a href="https://wiki.ubuntu.com/DashAsBinSh">https://wiki.ubuntu.com/DashAsBinSh</a></q></li>
<li class="join">[<a href="#T14:46:31" id="T14:46:31"><abbr title="2008-10-12T14:46:31+00:00">14:46:31</abbr></a>] <span>* slothlove (n=srussell@ip98-169-198-218.dc.dc.cox.net) has joined #beagle</span></li>
<li class="message">[<a href="#T14:47:18" id="T14:47:18"><abbr title="2008-10-12T14:47:18+00:00">14:47:18</abbr></a>] &lt;<cite>jkridner</cite>&gt; <q>I don't think this should be your problem though.</q></li>
<li class="message">[<a href="#T14:47:36" id="T14:47:36"><abbr title="2008-10-12T14:47:36+00:00">14:47:36</abbr></a>] &lt;<cite>jkridner</cite>&gt; <q>can you use pastebin.com to share your environment?</q></li>
<li class="message">[<a href="#T14:48:07" id="T14:48:07"><abbr title="2008-10-12T14:48:07+00:00">14:48:07</abbr></a>] &lt;<cite>jkridner</cite>&gt; <q>what is the name of the tar file you downloaded?</q></li>
<li class="quit">[<a href="#T14:48:30" id="T14:48:30"><abbr title="2008-10-12T14:48:30+00:00">14:48:30</abbr></a>] <span>* Crofton|work (n=balister@66-207-66-26.black.dmt.ntelos.net) Quit (Read error: 110 (Connection timed out))</span></li>
<li class="quit">[<a href="#T14:48:39" id="T14:48:39"><abbr title="2008-10-12T14:48:39+00:00">14:48:39</abbr></a>] <span>* Crofton (n=balister@66-207-66-26.black.dmt.ntelos.net) Quit (Read error: 110 (Connection timed out))</span></li>
<li class="message">[<a href="#T14:49:38" id="T14:49:38"><abbr title="2008-10-12T14:49:38+00:00">14:49:38</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>garren: what did you add to the path? What directory?</q></li>
<li class="message">[<a href="#T14:49:43" id="T14:49:43"><abbr title="2008-10-12T14:49:43+00:00">14:49:43</abbr></a>] &lt;<cite>garren</cite>&gt; <q>the problem is, the tar is extracted fine, but I need to create a path to it so that I can run arm-none-linux-gnueabi in the directories where uboot is </q></li>
<li class="message">[<a href="#T14:50:23" id="T14:50:23"><abbr title="2008-10-12T14:50:23+00:00">14:50:23</abbr></a>] &lt;<cite>garren</cite>&gt; <q>this is what I did for the path: PATH=$opt/arm-2007q3/bin:$PATH</q></li>
<li class="message">[<a href="#T14:50:37" id="T14:50:37"><abbr title="2008-10-12T14:50:37+00:00">14:50:37</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>$opt?</q></li>
<li class="message">[<a href="#T14:50:51" id="T14:50:51"><abbr title="2008-10-12T14:50:51+00:00">14:50:51</abbr></a>] &lt;<cite>garren</cite>&gt; <q>sorry I mean  PATH=opt/arm-2007q3/bin:$PATH</q></li>
<li class="message">[<a href="#T14:51:01" id="T14:51:01"><abbr title="2008-10-12T14:51:01+00:00">14:51:01</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>that should be /opt/..</q></li>
<li class="message">[<a href="#T14:51:32" id="T14:51:32"><abbr title="2008-10-12T14:51:32+00:00">14:51:32</abbr></a>] &lt;<cite>jkridner</cite>&gt; <q>the 'export' word is also important.</q></li>
<li class="message">[<a href="#T14:51:37" id="T14:51:37"><abbr title="2008-10-12T14:51:37+00:00">14:51:37</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>yes</q></li>
<li class="message">[<a href="#T14:52:05" id="T14:52:05"><abbr title="2008-10-12T14:52:05+00:00">14:52:05</abbr></a>] &lt;<cite>garren</cite>&gt; <q>'export'?</q></li>
<li class="message">[<a href="#T14:52:15" id="T14:52:15"><abbr title="2008-10-12T14:52:15+00:00">14:52:15</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>if you write "arm-none-linux-gnueabi-gcc" and press enter, you should get "arm-none-linux-gnueabi-gcc: no input files"</q></li>
<li class="message">[<a href="#T14:52:26" id="T14:52:26"><abbr title="2008-10-12T14:52:26+00:00">14:52:26</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>export PATH=/opt/arm-2007q3/bin:$PATH</q></li>
<li class="message">[<a href="#T14:53:03" id="T14:53:03"><abbr title="2008-10-12T14:53:03+00:00">14:53:03</abbr></a>] &lt;<cite>garren</cite>&gt; <q>woohoo it worked thanks guys</q></li>
<li class="message">[<a href="#T14:53:10" id="T14:53:10"><abbr title="2008-10-12T14:53:10+00:00">14:53:10</abbr></a>] &lt;<cite>garren</cite>&gt; <q>rookie error</q></li>
<li class="quit">[<a href="#T14:53:28" id="T14:53:28"><abbr title="2008-10-12T14:53:28+00:00">14:53:28</abbr></a>] <span>* stud (n=stud@pool-71-96-223-186.dfw.dsl-w.verizon.net) Quit (Remote closed the connection)</span></li>
<li class="message">[<a href="#T14:53:50" id="T14:53:50"><abbr title="2008-10-12T14:53:50+00:00">14:53:50</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>without the export, the PATH is only set for the current shell but nothing it starts. With export, it's set as an environmet variable that is passed to child prosesses as well</q></li>
<li class="message">[<a href="#T14:57:47" id="T14:57:47"><abbr title="2008-10-12T14:57:47+00:00">14:57:47</abbr></a>] &lt;<cite>garren</cite>&gt; <q>ok great thanks.. now to get the u-boot to compile</q></li>
<li class="message">[<a href="#T14:58:45" id="T14:58:45"><abbr title="2008-10-12T14:58:45+00:00">14:58:45</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>I've built the u-boot only for the mkimage, I've not used the u-boot binary actually. A bit overkill maybe..</q></li>
<li class="message">[<a href="#T14:59:15" id="T14:59:15"><abbr title="2008-10-12T14:59:15+00:00">14:59:15</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>I've used the u-boot that came flashed on the beagleboard. Not sure if there's a reason to use something newer..</q></li>
<li class="message">[<a href="#T15:02:15" id="T15:02:15"><abbr title="2008-10-12T15:02:15+00:00">15:02:15</abbr></a>] &lt;<cite>garren</cite>&gt; <q>ok just to test that the compiler works really</q></li>
<li class="message">[<a href="#T15:04:18" id="T15:04:18"><abbr title="2008-10-12T15:04:18+00:00">15:04:18</abbr></a>] &lt;<cite>garren</cite>&gt; <q>if I try compile the kernel I get this: <a href="http://pastebin.com/d687c6603">http://pastebin.com/d687c6603</a></q></li>
<li class="message">[<a href="#T15:05:09" id="T15:05:09"><abbr title="2008-10-12T15:05:09+00:00">15:05:09</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>add the full path to CROSS_COMPILE. Not sure if that affects anything thouhg..</q></li>
<li class="message">[<a href="#T15:05:27" id="T15:05:27"><abbr title="2008-10-12T15:05:27+00:00">15:05:27</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>I set the full path there and don't export PATH..</q></li>
<li class="message">[<a href="#T15:05:35" id="T15:05:35"><abbr title="2008-10-12T15:05:35+00:00">15:05:35</abbr></a>] &lt;<cite>garren</cite>&gt; <q>oh ok let me try</q></li>
<li class="message">[<a href="#T15:05:43" id="T15:05:43"><abbr title="2008-10-12T15:05:43+00:00">15:05:43</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>exported PATH should affect that either..</q></li>
<li class="message">[<a href="#T15:06:27" id="T15:06:27"><abbr title="2008-10-12T15:06:27+00:00">15:06:27</abbr></a>] &lt;<cite>garren</cite>&gt; <q>no same error</q></li>
<li class="message">[<a href="#T15:06:47" id="T15:06:47"><abbr title="2008-10-12T15:06:47+00:00">15:06:47</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>does kernel build depend on libc headers?</q></li>
<li class="message">[<a href="#T15:06:54" id="T15:06:54"><abbr title="2008-10-12T15:06:54+00:00">15:06:54</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>stdio.h etc..</q></li>
<li class="message">[<a href="#T15:07:51" id="T15:07:51"><abbr title="2008-10-12T15:07:51+00:00">15:07:51</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>garren: what distro are you running? Do you have libc6-dev installed?</q></li>
<li class="message">[<a href="#T15:08:07" id="T15:08:07"><abbr title="2008-10-12T15:08:07+00:00">15:08:07</abbr></a>] &lt;<cite>garren</cite>&gt; <q>its ubuntu 8.04</q></li>
<li class="message">[<a href="#T15:08:52" id="T15:08:52"><abbr title="2008-10-12T15:08:52+00:00">15:08:52</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>stdio.h comes in libc6-dev in debian..</q></li>
<li class="message">[<abbr title="2008-10-12T15:08:52+00:00">15:08:52</abbr>] &lt;<cite>garren</cite>&gt; <q>installing that now</q></li>
<li class="message">[<a href="#T15:10:08" id="T15:10:08"><abbr title="2008-10-12T15:10:08+00:00">15:10:08</abbr></a>] &lt;<cite>garren</cite>&gt; <q>awesome now its working</q></li>
<li class="action">[<a href="#T15:11:40" id="T15:11:40"><abbr title="2008-10-12T15:11:40+00:00">15:11:40</abbr></a>] <span>* garren thinks I'm gonna write a blog on how to do this stuff so other idiots dont need to spam the chat room like I did.</span></li>
<li class="message">[<a href="#T15:11:48" id="T15:11:48"><abbr title="2008-10-12T15:11:48+00:00">15:11:48</abbr></a>] &lt;<cite>jbenedetto</cite>&gt; <q>lol</q></li>
<li class="message">[<a href="#T15:12:30" id="T15:12:30"><abbr title="2008-10-12T15:12:30+00:00">15:12:30</abbr></a>] &lt;<cite>garren</cite>&gt; <q>:-)</q></li>
<li class="message">[<a href="#T15:12:31" id="T15:12:31"><abbr title="2008-10-12T15:12:31+00:00">15:12:31</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>garren: that's one of the reasons the #beagle exists :)</q></li>
<li class="message">[<a href="#T15:13:13" id="T15:13:13"><abbr title="2008-10-12T15:13:13+00:00">15:13:13</abbr></a>] &lt;<cite>garren</cite>&gt; <q>but it must be annoying repeating the same answers for standard stumbling blocks for noobs</q></li>
<li class="message">[<a href="#T15:13:58" id="T15:13:58"><abbr title="2008-10-12T15:13:58+00:00">15:13:58</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>well, those that get annoyed doesn't bother to answer :)</q></li>
<li class="message">[<a href="#T15:14:08" id="T15:14:08"><abbr title="2008-10-12T15:14:08+00:00">15:14:08</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>don't</q></li>
<li class="message">[<a href="#T15:15:48" id="T15:15:48"><abbr title="2008-10-12T15:15:48+00:00">15:15:48</abbr></a>] &lt;<cite>garren</cite>&gt; <q>true</q></li>
<li class="message">[<a href="#T15:16:09" id="T15:16:09"><abbr title="2008-10-12T15:16:09+00:00">15:16:09</abbr></a>] &lt;<cite>garren</cite>&gt; <q>what IDE is recommended to write applications?</q></li>
<li class="message">[<a href="#T15:16:47" id="T15:16:47"><abbr title="2008-10-12T15:16:47+00:00">15:16:47</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>vi</q></li>
<li class="message">[<a href="#T15:16:54" id="T15:16:54"><abbr title="2008-10-12T15:16:54+00:00">15:16:54</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>or maybe emacs</q></li>
<li class="message">[<a href="#T15:17:00" id="T15:17:00"><abbr title="2008-10-12T15:17:00+00:00">15:17:00</abbr></a>] &lt;<cite>kulve</cite>&gt; <q>those are the ones I use</q></li>
<li class="join">[<a href="#T15:17:59" id="T15:17:59"><abbr title="2008-10-12T15:17:59+00:00">15:17:59</abbr></a>] <span>* Crofton|work (n=balister@66-207-66-26.black.dmt.ntelos.net) has joined #beagle</span></li>
<li class="message">[<a href="#T15:18:43" id="T15:18:43"><abbr title="2008-10-12T15:18:43+00:00">15:18:43</abbr></a>] &lt;<cite>adj__</cite>&gt; <q>damn those i2c bus buffers come in small IC cases</q></li>
<li class="message">[<a href="#T15:19:18" id="T15:19:18"><abbr title="2008-10-12T15:19:18+00:00">15:19:18</abbr></a>] &lt;<cite>adj__</cite>&gt; <q>luckily we have decent soldering equipment at our lab</q></li>
<li class="message">[<a href="#T15:19:31" id="T15:19:31"><abbr title="2008-10-12T15:19:31+00:00">15:19:31</abbr></a>] &lt;<cite>garren</cite>&gt; <q>cool, thanks for the help. I'm gonna idle for a while</q></li>
<li class="quit">[<a href="#T15:19:42" id="T15:19:42"><abbr title="2008-10-12T15:19:42+00:00">15:19:42</abbr></a>] <span>* guillaum1 (n=gl@AMontsouris-153-1-16-252.w86-212.abo.wanadoo.fr) Quit (Read error: 110 (Connection timed out))</span></li>
<li class="join">[<a href="#T15:19:55" id="T15:19:55"><abbr title="2008-10-12T15:19:55+00:00">15:19:55</abbr></a>] <span>* dirk2 (n=dirk@F319b.f.strato-dslnet.de) has joined #beagle</span></li>
<li class="join">[<a href="#T15:20:18" id="T15:20:18"><abbr title="2008-10-12T15:20:18+00:00">15:20:18</abbr></a>] <span>* guillaum1 (n=gl@AMontsouris-153-1-89-54.w90-2.abo.wanadoo.fr) has joined #beagle</span></li>
<li class="quit">[<a href="#T15:23:41" id="T15:23:41"><abbr title="2008-10-12T15:23:41+00:00">15:23:41</abbr></a>] <span>* gerrynjr (n=gerrynjr@gentoo/user/gerrynjr) Quit ()</span></li>
<li class="message">[<a href="#T15:23:45" id="T15:23:45"><abbr title="2008-10-12T15:23:45+00:00">15:23:45</abbr></a>] &lt;<cite>jkridner</cite>&gt; <q>garren, creating a blog entry would be good.  consider how it would fit in with the material on <a href="http://elinux.org/BeagleBoard.">http://elinux.org/BeagleBoard.</a></q></li>
<li class="join">[<a href="#T15:34:19" id="T15:34:19"><abbr title="2008-10-12T15:34:19+00:00">15:34:19</abbr></a>] <span>* BThompson (n=BThompso@cpe-76-185-93-11.tx.res.rr.com) has joined #beagle</span></li>
<li class="message">[<a href="#T15:49:29" id="T15:49:29"><abbr title="2008-10-12T15:49:29+00:00">15:49:29</abbr></a>] &lt;<cite>jkridner</cite>&gt; <q>I really want to see this on Beagle: <a href="http://www.speaknspell.co.uk/speaknspell.html">http://www.speaknspell.co.uk/speaknspell.html</a>  :)</q></li>
<li class="quit">[<a href="#T15:52:17" id="T15:52:17"><abbr title="2008-10-12T15:52:17+00:00">15:52:17</abbr></a>] <span>* dcordes (n=dcordes@unaffiliated/dcordes) Quit (Remote closed the connection)</span></li>
<li class="quit">[<a href="#T15:53:37" id="T15:53:37"><abbr title="2008-10-12T15:53:37+00:00">15:53:37</abbr></a>] <span>* igor321 (n=igor@178-56.dsl.iskon.hr) Quit ("leavin'")</span></li>
<li class="join">[<a href="#T15:54:41" id="T15:54:41"><abbr title="2008-10-12T15:54:41+00:00">15:54:41</abbr></a>] <span>* dcordes (n=dcordes@unaffiliated/dcordes) has joined #beagle</span></li>
<li class="join">[<a href="#T16:10:49" id="T16:10:49"><abbr title="2008-10-12T16:10:49+00:00">16:10:49</abbr></a>] <span>* JoeyBorn (n=jborn@h-68-165-188-80.chcgilgm.dynamic.covad.net) has joined #beagle</span></li>
<li class="message">[<a href="#T16:11:22" id="T16:11:22"><abbr title="2008-10-12T16:11:22+00:00">16:11:22</abbr></a>] &lt;<cite>keesj</cite>&gt; <q>jkridner: what do you mean?</q></li>
<li class="message">[<a href="#T16:11:35" id="T16:11:35"><abbr title="2008-10-12T16:11:35+00:00">16:11:35</abbr></a>] &lt;<cite>keesj</cite>&gt; <q>speach stuff or the emulator itself?</q></li>
<li class="join">[<a href="#T16:15:56" id="T16:15:56"><abbr title="2008-10-12T16:15:56+00:00">16:15:56</abbr></a>] <span>* Crofton (n=balister@66-207-66-26.black.dmt.ntelos.net) has joined #beagle</span></li>
<li class="quit">[<a href="#T16:20:40" id="T16:20:40"><abbr title="2008-10-12T16:20:40+00:00">16:20:40</abbr></a>] <span>* slothlove (n=srussell@ip98-169-198-218.dc.dc.cox.net) Quit (Read error: 110 (Connection timed out))</span></li>
<li class="message">[<a href="#T16:31:39" id="T16:31:39"><abbr title="2008-10-12T16:31:39+00:00">16:31:39</abbr></a>] &lt;<cite>jkridner</cite>&gt; <q>keesj: emulator.  better speech stuff is available.</q></li>
<li class="join">[<a href="#T16:33:25" id="T16:33:25"><abbr title="2008-10-12T16:33:25+00:00">16:33:25</abbr></a>] <span>* igor321 (n=igor@178-56.dsl.iskon.hr) has joined #beagle</span></li>
<li class="join">[<a href="#T16:33:43" id="T16:33:43"><abbr title="2008-10-12T16:33:43+00:00">16:33:43</abbr></a>] <span>* Beagle1 (n=Beagle1@79.36.12.64) has joined #beagle</span></li>
<li class="quit">[<a href="#T16:34:04" id="T16:34:04"><abbr title="2008-10-12T16:34:04+00:00">16:34:04</abbr></a>] <span>* Beagle1 (n=Beagle1@79.36.12.64) Quit (Client Quit)</span></li>
<li class="message">[<a href="#T16:44:57" id="T16:44:57"><abbr title="2008-10-12T16:44:57+00:00">16:44:57</abbr></a>] &lt;<cite>keesj</cite>&gt; <q>I see :p</q></li>
<li class="join">[<a href="#T16:51:08" id="T16:51:08"><abbr title="2008-10-12T16:51:08+00:00">16:51:08</abbr></a>] <span>* TangerineTriode (n=fluffy@duracef.shout.net) has joined #beagle</span></li>
<li class="join">[<a href="#T17:10:34" id="T17:10:34"><abbr title="2008-10-12T17:10:34+00:00">17:10:34</abbr></a>] <span>* _apkII (n=kows@85-18-136-98.fastres.net) has joined #beagle</span></li>
<li class="quit">[<a href="#T17:20:42" id="T17:20:42"><abbr title="2008-10-12T17:20:42+00:00">17:20:42</abbr></a>] <span>* igor321 (n=igor@178-56.dsl.iskon.hr) Quit ("leavin'")</span></li>
<li class="quit">[<a href="#T17:23:47" id="T17:23:47"><abbr title="2008-10-12T17:23:47+00:00">17:23:47</abbr></a>] <span>* _apkII (n=kows@85-18-136-98.fastres.net) Quit ("Leaving")</span></li>
<li class="quit">[<a href="#T17:58:05" id="T17:58:05"><abbr title="2008-10-12T17:58:05+00:00">17:58:05</abbr></a>] <span>* Openfree (n=df@222.65.132.11) Quit (Remote closed the connection)</span></li>
<li class="join">[<a href="#T18:28:18" id="T18:28:18"><abbr title="2008-10-12T18:28:18+00:00">18:28:18</abbr></a>] <span>* Swaps (n=fcauwe@64.22.103.171) has joined #beagle</span></li>
<li class="part">[<a href="#T18:40:31" id="T18:40:31"><abbr title="2008-10-12T18:40:31+00:00">18:40:31</abbr></a>] <span>* dirk2 (n=dirk@F319b.f.strato-dslnet.de) has left #beagle</span></li>
<li class="quit">[<a href="#T18:44:21" id="T18:44:21"><abbr title="2008-10-12T18:44:21+00:00">18:44:21</abbr></a>] <span>* thomasg (n=thomasg@85.131.189.115) Quit (Read error: 110 (Connection timed out))</span></li>
<li class="join">[<a href="#T19:04:45" id="T19:04:45"><abbr title="2008-10-12T19:04:45+00:00">19:04:45</abbr></a>] <span>* VR-Bug (n=aullmann@port-92-202-17-91.dynamic.qsc.de) has joined #beagle</span></li>
<li class="quit">[<a href="#T19:09:14" id="T19:09:14"><abbr title="2008-10-12T19:09:14+00:00">19:09:14</abbr></a>] <span>* VR-Bug (n=aullmann@port-92-202-17-91.dynamic.qsc.de) Quit (Client Quit)</span></li>
<li class="join">[<a href="#T19:16:59" id="T19:16:59"><abbr title="2008-10-12T19:16:59+00:00">19:16:59</abbr></a>] <span>* Wowbagger_ (n=wowbagge@d154-20-180-178.bchsia.telus.net) has joined #beagle</span></li>
<li class="quit">[<a href="#T19:28:22" id="T19:28:22"><abbr title="2008-10-12T19:28:22+00:00">19:28:22</abbr></a>] <span>* felipec (n=felipec@a88-113-6-167.elisa-laajakaista.fi) Quit (Read error: 110 (Connection timed out))</span></li>
<li class="join">[<a href="#T19:46:14" id="T19:46:14"><abbr title="2008-10-12T19:46:14+00:00">19:46:14</abbr></a>] <span>* dcordes_ (n=dcordes@unaffiliated/dcordes) has joined #beagle</span></li>
<li class="quit">[<a href="#T19:49:08" id="T19:49:08"><abbr title="2008-10-12T19:49:08+00:00">19:49:08</abbr></a>] <span>* docelic (n=docelic@78.134.207.111) Quit ("<a href="http://www.spinlocksolutions.com/")">http://www.spinlocksolutions.com/")</a></span></li>
<li class="join">[<a href="#T19:49:24" id="T19:49:24"><abbr title="2008-10-12T19:49:24+00:00">19:49:24</abbr></a>] <span>* methril|laptop (n=methril@224.72.220.87.dynamic.jazztel.es) has joined #beagle</span></li>
<li class="message">[<a href="#T19:54:41" id="T19:54:41"><abbr title="2008-10-12T19:54:41+00:00">19:54:41</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>I have a working OE/bitbake setup (successfully created a base-image). How do I go about recompiling the kernel? (I've done kernel compiling before... but not inside of OE). Should I copy the kernel out of oe/tmp/work... and built it separately?</q></li>
<li class="message">[<a href="#T19:55:00" id="T19:55:00"><abbr title="2008-10-12T19:55:00+00:00">19:55:00</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>what do you want to change?</q></li>
<li class="message">[<a href="#T19:55:32" id="T19:55:32"><abbr title="2008-10-12T19:55:32+00:00">19:55:32</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>I need to enable I2C2</q></li>
<li class="message">[<a href="#T19:55:40" id="T19:55:40"><abbr title="2008-10-12T19:55:40+00:00">19:55:40</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>and I'll probably have to hack a gpio driver</q></li>
<li class="message">[<a href="#T19:56:26" id="T19:56:26"><abbr title="2008-10-12T19:56:26+00:00">19:56:26</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>The goal is to get GPIO and I2C2 working on the expansion connector (to drive some custom hardware)</q></li>
<li class="message">[<a href="#T19:56:38" id="T19:56:38"><abbr title="2008-10-12T19:56:38+00:00">19:56:38</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>from userland hopefully</q></li>
<li class="message">[<a href="#T19:56:46" id="T19:56:46"><abbr title="2008-10-12T19:56:46+00:00">19:56:46</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>cool</q></li>
<li class="message">[<a href="#T19:56:56" id="T19:56:56"><abbr title="2008-10-12T19:56:56+00:00">19:56:56</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>we already enabled the GPIO SYSFS</q></li>
<li class="message">[<a href="#T19:57:10" id="T19:57:10"><abbr title="2008-10-12T19:57:10+00:00">19:57:10</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>you can make ARCH=arm xconfig in the build dir</q></li>
<li class="message">[<a href="#T19:57:25" id="T19:57:25"><abbr title="2008-10-12T19:57:25+00:00">19:57:25</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>and copy the noe config back into he metadata and rebuild the kernel</q></li>
<li class="message">[<a href="#T19:57:47" id="T19:57:47"><abbr title="2008-10-12T19:57:47+00:00">19:57:47</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>That's .config?</q></li>
<li class="message">[<a href="#T19:58:06" id="T19:58:06"><abbr title="2008-10-12T19:58:06+00:00">19:58:06</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>where does the metadata live?</q></li>
<li class="message">[<a href="#T19:58:31" id="T19:58:31"><abbr title="2008-10-12T19:58:31+00:00">19:58:31</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>org.openembedded.dev</q></li>
<li class="message">[<a href="#T19:59:28" id="T19:59:28"><abbr title="2008-10-12T19:59:28+00:00">19:59:28</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>Taking a look... is it inside a .bb file?</q></li>
<li class="message">[<a href="#T19:59:44" id="T19:59:44"><abbr title="2008-10-12T19:59:44+00:00">19:59:44</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>no</q></li>
<li class="message">[<a href="#T19:59:58" id="T19:59:58"><abbr title="2008-10-12T19:59:58+00:00">19:59:58</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>you are linux the linux-omap2 kernel</q></li>
<li class="message">[<a href="#T20:00:17" id="T20:00:17"><abbr title="2008-10-12T20:00:17+00:00">20:00:17</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>look in packages/linux/linux-omap2 directory</q></li>
<li class="message">[<a href="#T20:01:06" id="T20:01:06"><abbr title="2008-10-12T20:01:06+00:00">20:01:06</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>ok</q></li>
<li class="quit">[<a href="#T20:01:37" id="T20:01:37"><abbr title="2008-10-12T20:01:37+00:00">20:01:37</abbr></a>] <span>* dcordes (n=dcordes@unaffiliated/dcordes) Quit (Read error: 110 (Connection timed out))</span></li>
<li class="message">[<a href="#T20:01:59" id="T20:01:59"><abbr title="2008-10-12T20:01:59+00:00">20:01:59</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>So I'd replace defconfig?</q></li>
<li class="message">[<a href="#T20:02:03" id="T20:02:03"><abbr title="2008-10-12T20:02:03+00:00">20:02:03</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>with the generated .config?</q></li>
<li class="message">[<a href="#T20:02:08" id="T20:02:08"><abbr title="2008-10-12T20:02:08+00:00">20:02:08</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>right</q></li>
<li class="action">[<a href="#T20:02:15" id="T20:02:15"><abbr title="2008-10-12T20:02:15+00:00">20:02:15</abbr></a>] <span>* Wowbagger_ runs to get a pen</span></li>
<li class="message">[<a href="#T20:02:17" id="T20:02:17"><abbr title="2008-10-12T20:02:17+00:00">20:02:17</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>then bitbake -c rebuild linux-omap2</q></li>
<li class="message">[<a href="#T20:02:35" id="T20:02:35"><abbr title="2008-10-12T20:02:35+00:00">20:02:35</abbr></a>] &lt;<cite>dcordes_</cite>&gt; <q>does the tv-out work with the OE 2.6.27 kernel?</q></li>
<li class="message">[<a href="#T20:05:12" id="T20:05:12"><abbr title="2008-10-12T20:05:12+00:00">20:05:12</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>The build dir you mentioned... is that "work"</q></li>
<li class="message">[<a href="#T20:06:02" id="T20:06:02"><abbr title="2008-10-12T20:06:02+00:00">20:06:02</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>Crofton: If I want to modify the kernel... (hack a driver) where should I do that?</q></li>
<li class="message">[<a href="#T20:06:19" id="T20:06:19"><abbr title="2008-10-12T20:06:19+00:00">20:06:19</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>tmp/work ....</q></li>
<li class="message">[<a href="#T20:06:29" id="T20:06:29"><abbr title="2008-10-12T20:06:29+00:00">20:06:29</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>I would do that outside oe</q></li>
<li class="message">[<a href="#T20:06:34" id="T20:06:34"><abbr title="2008-10-12T20:06:34+00:00">20:06:34</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>right</q></li>
<li class="message">[<a href="#T20:06:37" id="T20:06:37"><abbr title="2008-10-12T20:06:37+00:00">20:06:37</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>get kernel from git</q></li>
<li class="message">[<a href="#T20:06:42" id="T20:06:42"><abbr title="2008-10-12T20:06:42+00:00">20:06:42</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>ok</q></li>
<li class="quit">[<a href="#T20:06:45" id="T20:06:45"><abbr title="2008-10-12T20:06:45+00:00">20:06:45</abbr></a>] <span>* pbrook (n=paul@78-105-115-80.zone3.bethere.co.uk) Quit (Read error: 60 (Operation timed out))</span></li>
<li class="message">[<a href="#T20:06:55" id="T20:06:55"><abbr title="2008-10-12T20:06:55+00:00">20:06:55</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>andf then you can create a patch to add drier into oe when it is stable</q></li>
<li class="message">[<a href="#T20:06:58" id="T20:06:58"><abbr title="2008-10-12T20:06:58+00:00">20:06:58</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>something like that</q></li>
<li class="message">[<a href="#T20:07:05" id="T20:07:05"><abbr title="2008-10-12T20:07:05+00:00">20:07:05</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>ok</q></li>
<li class="message">[<a href="#T20:07:27" id="T20:07:27"><abbr title="2008-10-12T20:07:27+00:00">20:07:27</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>Can I just copy the kernel out of tmp/work somewhere else to work on?</q></li>
<li class="join">[<a href="#T20:07:39" id="T20:07:39"><abbr title="2008-10-12T20:07:39+00:00">20:07:39</abbr></a>] <span>* pbrook (n=paul@78-105-115-80.zone3.bethere.co.uk) has joined #beagle</span></li>
<li class="message">[<a href="#T20:07:45" id="T20:07:45"><abbr title="2008-10-12T20:07:45+00:00">20:07:45</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>probably easier just to make a copy from git</q></li>
<li class="message">[<a href="#T20:07:59" id="T20:07:59"><abbr title="2008-10-12T20:07:59+00:00">20:07:59</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>really? the OE one looks like it's patched...</q></li>
<li class="message">[<a href="#T20:08:26" id="T20:08:26"><abbr title="2008-10-12T20:08:26+00:00">20:08:26</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>you can find the patches</q></li>
<li class="message">[<a href="#T20:08:51" id="T20:08:51"><abbr title="2008-10-12T20:08:51+00:00">20:08:51</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>anyway, once I get a working copy... to start building is there something I need to do to get the cross-compiler working?</q></li>
<li class="message">[<a href="#T20:09:41" id="T20:09:41"><abbr title="2008-10-12T20:09:41+00:00">20:09:41</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>I use a patch into tmp/cross ....</q></li>
<li class="message">[<a href="#T20:10:00" id="T20:10:00"><abbr title="2008-10-12T20:10:00+00:00">20:10:00</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>and you will need to set the var CROSS_COMPILE to the correct prefix</q></li>
<li class="message">[<a href="#T20:10:10" id="T20:10:10"><abbr title="2008-10-12T20:10:10+00:00">20:10:10</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>patch into tmp/cross... what do you mean?</q></li>
<li class="message">[<a href="#T20:11:06" id="T20:11:06"><abbr title="2008-10-12T20:11:06+00:00">20:11:06</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>re: CROSS_COMPILE, yeah... arm-angstrom-linux-gnuabi or something</q></li>
<li class="quit">[<a href="#T20:11:29" id="T20:11:29"><abbr title="2008-10-12T20:11:29+00:00">20:11:29</abbr></a>] <span>* gduncan (n=spec@96.251.13.87) Quit (Remote closed the connection)</span></li>
<li class="join">[<a href="#T20:12:14" id="T20:12:14"><abbr title="2008-10-12T20:12:14+00:00">20:12:14</abbr></a>] <span>* gduncan (n=spec@96.251.13.87) has joined #beagle</span></li>
<li class="message">[<a href="#T20:12:38" id="T20:12:38"><abbr title="2008-10-12T20:12:38+00:00">20:12:38</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>oops path</q></li>
<li class="message">[<a href="#T20:12:42" id="T20:12:42"><abbr title="2008-10-12T20:12:42+00:00">20:12:42</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>ah</q></li>
<li class="message">[<a href="#T20:12:51" id="T20:12:51"><abbr title="2008-10-12T20:12:51+00:00">20:12:51</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>ok.. I think I'm clear on that.</q></li>
<li class="message">[<a href="#T20:13:00" id="T20:13:00"><abbr title="2008-10-12T20:13:00+00:00">20:13:00</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>is the uImage the same as a bzimage?</q></li>
<li class="message">[<a href="#T20:13:05" id="T20:13:05"><abbr title="2008-10-12T20:13:05+00:00">20:13:05</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>or is that a special target?</q></li>
<li class="message">[<a href="#T20:13:23" id="T20:13:23"><abbr title="2008-10-12T20:13:23+00:00">20:13:23</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>special target</q></li>
<li class="message">[<a href="#T20:13:31" id="T20:13:31"><abbr title="2008-10-12T20:13:31+00:00">20:13:31</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>packages it with mkimage</q></li>
<li class="join">[<a href="#T20:13:58" id="T20:13:58"><abbr title="2008-10-12T20:13:58+00:00">20:13:58</abbr></a>] <span>* Olipro_ (n=Olipro@uncyclopedia/Olipro) has joined #beagle</span></li>
<li class="quit">[<a href="#T20:14:18" id="T20:14:18"><abbr title="2008-10-12T20:14:18+00:00">20:14:18</abbr></a>] <span>* Olipro (i=Olipro@uncyclopedia/Olipro) Quit (Nick collision from services.)</span></li>
<li class="nick-change">[<a href="#T20:14:22" id="T20:14:22"><abbr title="2008-10-12T20:14:22+00:00">20:14:22</abbr></a>] <span>* Olipro_ is now known as Olipro</span></li>
<li class="message">[<a href="#T20:19:38" id="T20:19:38"><abbr title="2008-10-12T20:19:38+00:00">20:19:38</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>any hints on using mkimage?</q></li>
<li class="message">[<a href="#T20:20:13" id="T20:20:13"><abbr title="2008-10-12T20:20:13+00:00">20:20:13</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>it just needs to exist</q></li>
<li class="message">[<a href="#T20:20:31" id="T20:20:31"><abbr title="2008-10-12T20:20:31+00:00">20:20:31</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>there is a copy in tmp</q></li>
<li class="message">[<a href="#T20:20:39" id="T20:20:39"><abbr title="2008-10-12T20:20:39+00:00">20:20:39</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>find . -name mkimage</q></li>
<li class="message">[<a href="#T20:20:44" id="T20:20:44"><abbr title="2008-10-12T20:20:44+00:00">20:20:44</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>oh.. so when running the kernel make what target do I make?</q></li>
<li class="message">[<a href="#T20:20:46" id="T20:20:46"><abbr title="2008-10-12T20:20:46+00:00">20:20:46</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>and make sure it is in your path</q></li>
<li class="message">[<a href="#T20:20:52" id="T20:20:52"><abbr title="2008-10-12T20:20:52+00:00">20:20:52</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>make uImage</q></li>
<li class="message">[<a href="#T20:20:54" id="T20:20:54"><abbr title="2008-10-12T20:20:54+00:00">20:20:54</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>ah</q></li>
<li class="message">[<a href="#T20:20:56" id="T20:20:56"><abbr title="2008-10-12T20:20:56+00:00">20:20:56</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>something like that</q></li>
<li class="message">[<a href="#T20:20:57" id="T20:20:57"><abbr title="2008-10-12T20:20:57+00:00">20:20:57</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>fantastic</q></li>
<li class="message">[<a href="#T20:21:01" id="T20:21:01"><abbr title="2008-10-12T20:21:01+00:00">20:21:01</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>I'll look for it</q></li>
<li class="message">[<a href="#T20:21:03" id="T20:21:03"><abbr title="2008-10-12T20:21:03+00:00">20:21:03</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>thanks a bunch</q></li>
<li class="message">[<a href="#T20:21:21" id="T20:21:21"><abbr title="2008-10-12T20:21:21+00:00">20:21:21</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>well... maybe I should hold off until I'm managed to spit out a custom kernel... ;)</q></li>
<li class="message">[<a href="#T20:21:27" id="T20:21:27"><abbr title="2008-10-12T20:21:27+00:00">20:21:27</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>I've*</q></li>
<li class="message">[<a href="#T20:23:00" id="T20:23:00"><abbr title="2008-10-12T20:23:00+00:00">20:23:00</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>:)</q></li>
<li class="message">[<a href="#T20:24:43" id="T20:24:43"><abbr title="2008-10-12T20:24:43+00:00">20:24:43</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>do you have any experience working with gpio?</q></li>
<li class="message">[<a href="#T20:25:17" id="T20:25:17"><abbr title="2008-10-12T20:25:17+00:00">20:25:17</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>i've been googling and I can't quite tell if there's supposed to be a gpio driver or not (for user space access to gpio)</q></li>
<li class="message">[<a href="#T20:27:44" id="T20:27:44"><abbr title="2008-10-12T20:27:44+00:00">20:27:44</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>in the .27 kernel there is a user space gpio driver</q></li>
<li class="message">[<a href="#T20:28:02" id="T20:28:02"><abbr title="2008-10-12T20:28:02+00:00">20:28:02</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>change the linux linux-omap2 to linux-omap in conf/machine/beagleboard</q></li>
<li class="message">[<a href="#T20:28:10" id="T20:28:10"><abbr title="2008-10-12T20:28:10+00:00">20:28:10</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>and you will get a later kernel</q></li>
<li class="message">[<a href="#T20:31:49" id="T20:31:49"><abbr title="2008-10-12T20:31:49+00:00">20:31:49</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>Does omap2 mean something in particular?</q></li>
<li class="message">[<a href="#T20:32:07" id="T20:32:07"><abbr title="2008-10-12T20:32:07+00:00">20:32:07</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>Sounds like I'm losing something by changing to "omap"... </q></li>
<li class="message">[<a href="#T20:34:28" id="T20:34:28"><abbr title="2008-10-12T20:34:28+00:00">20:34:28</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>building the kernel seems to have spat out a uImage (despite your guidance I just copied the kernel out of tmp/work... I will probably try a fresh git kernel another time)</q></li>
<li class="message">[<a href="#T20:37:46" id="T20:37:46"><abbr title="2008-10-12T20:37:46+00:00">20:37:46</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>not really</q></li>
<li class="message">[<a href="#T20:37:56" id="T20:37:56"><abbr title="2008-10-12T20:37:56+00:00">20:37:56</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>we ahve to many kernel recipes</q></li>
<li class="message">[<a href="#T20:38:02" id="T20:38:02"><abbr title="2008-10-12T20:38:02+00:00">20:38:02</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>hmf.. well, my kernel no worky</q></li>
<li class="message">[<a href="#T20:38:13" id="T20:38:13"><abbr title="2008-10-12T20:38:13+00:00">20:38:13</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>all the omap git recipes start from the same git repo</q></li>
<li class="message">[<a href="#T20:38:17" id="T20:38:17"><abbr title="2008-10-12T20:38:17+00:00">20:38:17</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>hmmm</q></li>
<li class="message">[<a href="#T20:38:21" id="T20:38:21"><abbr title="2008-10-12T20:38:21+00:00">20:38:21</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>beagle?</q></li>
<li class="message">[<a href="#T20:38:28" id="T20:38:28"><abbr title="2008-10-12T20:38:28+00:00">20:38:28</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>I guess I'll try disabling the i2c2 thing (so that it's back to as it was)</q></li>
<li class="message">[<a href="#T20:38:53" id="T20:38:53"><abbr title="2008-10-12T20:38:53+00:00">20:38:53</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>yeah, make sure you can make something that boots</q></li>
<li class="message">[<a href="#T20:39:42" id="T20:39:42"><abbr title="2008-10-12T20:39:42+00:00">20:39:42</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>you asked "beagle?"... how do I tell?</q></li>
<li class="message">[<a href="#T20:40:28" id="T20:40:28"><abbr title="2008-10-12T20:40:28+00:00">20:40:28</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>yeah... system type is beagle</q></li>
<li class="message">[<a href="#T20:40:40" id="T20:40:40"><abbr title="2008-10-12T20:40:40+00:00">20:40:40</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>(in menuconfig)</q></li>
<li class="join">[<a href="#T20:45:38" id="T20:45:38"><abbr title="2008-10-12T20:45:38+00:00">20:45:38</abbr></a>] <span>* felipec (n=felipec@a88-113-6-167.elisa-laajakaista.fi) has joined #beagle</span></li>
<li class="message">[<abbr title="2008-10-12T20:45:38+00:00">20:45:38</abbr>] &lt;<cite>Wowbagger_</cite>&gt; <q>are the usr0 and usr1 led's supposed to mean something?</q></li>
<li class="quit">[<a href="#T20:46:38" id="T20:46:38"><abbr title="2008-10-12T20:46:38+00:00">20:46:38</abbr></a>] <span>* garren (n=garren@dsl-243-99-185.telkomadsl.co.za) Quit ("Ex-Chat")</span></li>
<li class="message">[<a href="#T20:46:45" id="T20:46:45"><abbr title="2008-10-12T20:46:45+00:00">20:46:45</abbr></a>] &lt;<cite>roberto</cite>&gt; <q>gute Nacht - penn jut / Good night - sleep well :-) </q></li>
<li class="quit">[<a href="#T20:47:29" id="T20:47:29"><abbr title="2008-10-12T20:47:29+00:00">20:47:29</abbr></a>] <span>* roberto (n=robert@p579FCE8C.dip.t-dialin.net) Quit ("Verlassend")</span></li>
<li class="message">[<a href="#T20:51:50" id="T20:51:50"><abbr title="2008-10-12T20:51:50+00:00">20:51:50</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>they do, but I forget</q></li>
<li class="message">[<a href="#T20:52:25" id="T20:52:25"><abbr title="2008-10-12T20:52:25+00:00">20:52:25</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>well I tried recompiling the kernel without doing a clean first and it still hangs (well seems to) after decompressing... rebuilding after a clean to see if that helps.</q></li>
<li class="message">[<a href="#T20:53:36" id="T20:53:36"><abbr title="2008-10-12T20:53:36+00:00">20:53:36</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>maybe what I copied out of tmp/work isn't actually patched...</q></li>
<li class="message">[<a href="#T20:56:35" id="T20:56:35"><abbr title="2008-10-12T20:56:35+00:00">20:56:35</abbr></a>] &lt;<cite>adj__</cite>&gt; <q>hmmpff... I just also grabbed current l-o head and noticed it also hangs on beagle just after decompressing... greit..</q></li>
<li class="message">[<a href="#T20:57:34" id="T20:57:34"><abbr title="2008-10-12T20:57:34+00:00">20:57:34</abbr></a>] &lt;<cite>mru</cite>&gt; <q>enable CONFIG_DEBUG_LL</q></li>
<li class="message">[<a href="#T20:57:47" id="T20:57:47"><abbr title="2008-10-12T20:57:47+00:00">20:57:47</abbr></a>] &lt;<cite>mru</cite>&gt; <q>that should usually give you something</q></li>
<li class="message">[<a href="#T20:58:51" id="T20:58:51"><abbr title="2008-10-12T20:58:51+00:00">20:58:51</abbr></a>] &lt;<cite>mru</cite>&gt; <q>when it appears hang just after decompressing, it's usually because something went horribly wrong before the normal console was initialised</q></li>
<li class="message">[<a href="#T20:59:37" id="T20:59:37"><abbr title="2008-10-12T20:59:37+00:00">20:59:37</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>I wish I understood why the code made the idle routines run up time</q></li>
<li class="message">[<a href="#T20:59:38" id="T20:59:38"><abbr title="2008-10-12T20:59:38+00:00">20:59:38</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q><a href="http://rafb.net/p/6j22U110.html">http://rafb.net/p/6j22U110.html</a></q></li>
<li class="message">[<a href="#T21:00:07" id="T21:00:07"><abbr title="2008-10-12T21:00:07+00:00">21:00:07</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>I usspect oprofile is counting cycles that should be attributed to the filter code in the idle code</q></li>
<li class="message">[<abbr title="2008-10-12T21:00:07+00:00">21:00:07</abbr>] &lt;<cite>mru</cite>&gt; <q>are you seriously using c++ for performance-critical code?</q></li>
<li class="message">[<a href="#T21:00:16" id="T21:00:16"><abbr title="2008-10-12T21:00:16+00:00">21:00:16</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>yes</q></li>
<li class="message">[<a href="#T21:00:25" id="T21:00:25"><abbr title="2008-10-12T21:00:25+00:00">21:00:25</abbr></a>] &lt;<cite>mru</cite>&gt; <q>are you mad?</q></li>
<li class="message">[<a href="#T21:00:30" id="T21:00:30"><abbr title="2008-10-12T21:00:30+00:00">21:00:30</abbr></a>] &lt;<cite>mru</cite>&gt; <q>assembler is the only choice</q></li>
<li class="message">[<a href="#T21:00:31" id="T21:00:31"><abbr title="2008-10-12T21:00:31+00:00">21:00:31</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>I didn't write it</q></li>
<li class="message">[<a href="#T21:00:35" id="T21:00:35"><abbr title="2008-10-12T21:00:35+00:00">21:00:35</abbr></a>] &lt;<cite>mru</cite>&gt; <q>ok</q></li>
<li class="message">[<a href="#T21:00:53" id="T21:00:53"><abbr title="2008-10-12T21:00:53+00:00">21:00:53</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>the performance critical bits will get wwritten in assembler</q></li>
<li class="message">[<a href="#T21:01:00" id="T21:01:00"><abbr title="2008-10-12T21:01:00+00:00">21:01:00</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>the x86 stuff is already</q></li>
<li class="message">[<a href="#T21:01:17" id="T21:01:17"><abbr title="2008-10-12T21:01:17+00:00">21:01:17</abbr></a>] &lt;<cite>mru</cite>&gt; <q>it's usually easy to outperform the compiler by a factor 2 for generic code</q></li>
<li class="message">[<a href="#T21:01:44" id="T21:01:44"><abbr title="2008-10-12T21:01:44+00:00">21:01:44</abbr></a>] &lt;<cite>mru</cite>&gt; <q>much more for vectorisable code</q></li>
<li class="message">[<a href="#T21:02:00" id="T21:02:00"><abbr title="2008-10-12T21:02:00+00:00">21:02:00</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>I need to not let it auto create the filter</q></li>
<li class="message">[<a href="#T21:02:14" id="T21:02:14"><abbr title="2008-10-12T21:02:14+00:00">21:02:14</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>I ithink it is using abobut 800 taps</q></li>
<li class="message">[<a href="#T21:02:24" id="T21:02:24"><abbr title="2008-10-12T21:02:24+00:00">21:02:24</abbr></a>] &lt;<cite>mru</cite>&gt; <q>800!?!?!?</q></li>
<li class="message">[<a href="#T21:02:38" id="T21:02:38"><abbr title="2008-10-12T21:02:38+00:00">21:02:38</abbr></a>] &lt;<cite>mru</cite>&gt; <q>surely 8 would be more sensible</q></li>
<li class="message">[<a href="#T21:03:02" id="T21:03:02"><abbr title="2008-10-12T21:03:02+00:00">21:03:02</abbr></a>] &lt;<cite>mru</cite>&gt; <q>what kind of filter is this?</q></li>
<li class="message">[<a href="#T21:03:06" id="T21:03:06"><abbr title="2008-10-12T21:03:06+00:00">21:03:06</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>fir</q></li>
<li class="message">[<a href="#T21:03:12" id="T21:03:12"><abbr title="2008-10-12T21:03:12+00:00">21:03:12</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>for a decimaot</q></li>
<li class="message">[<a href="#T21:03:17" id="T21:03:17"><abbr title="2008-10-12T21:03:17+00:00">21:03:17</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>low pass</q></li>
<li class="message">[<a href="#T21:03:28" id="T21:03:28"><abbr title="2008-10-12T21:03:28+00:00">21:03:28</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>I suspect it is trying for a sharp cutoff</q></li>
<li class="message">[<abbr title="2008-10-12T21:03:28+00:00">21:03:28</abbr>] &lt;<cite>mru</cite>&gt; <q>800 taps for a lowpass filter seems a bit excessive</q></li>
<li class="message">[<a href="#T21:03:31" id="T21:03:31"><abbr title="2008-10-12T21:03:31+00:00">21:03:31</abbr></a>] &lt;<cite>geist</cite>&gt; <q>C++ is fine for performance critical stuff, if you know what you're doing</q></li>
<li class="message">[<a href="#T21:03:41" id="T21:03:41"><abbr title="2008-10-12T21:03:41+00:00">21:03:41</abbr></a>] &lt;<cite>geist</cite>&gt; <q>in some ways it works better than pure C, since you can more finely control what gets inlined</q></li>
<li class="message">[<a href="#T21:03:47" id="T21:03:47"><abbr title="2008-10-12T21:03:47+00:00">21:03:47</abbr></a>] &lt;<cite>mru</cite>&gt; <q>geist: yeah, if you write everything except main() in assembler</q></li>
<li class="message">[<a href="#T21:04:01" id="T21:04:01"><abbr title="2008-10-12T21:04:01+00:00">21:04:01</abbr></a>] &lt;<cite>geist</cite>&gt; <q>and if you're clever, you can get it to generate some really efficient stuff</q></li>
<li class="message">[<a href="#T21:04:21" id="T21:04:21"><abbr title="2008-10-12T21:04:21+00:00">21:04:21</abbr></a>] &lt;<cite>mru</cite>&gt; <q>if you're that clever, you can write the code in assembler more quickly</q></li>
<li class="message">[<a href="#T21:04:29" id="T21:04:29"><abbr title="2008-10-12T21:04:29+00:00">21:04:29</abbr></a>] &lt;<cite>geist</cite>&gt; <q>not really</q></li>
<li class="quit">[<a href="#T21:04:35" id="T21:04:35"><abbr title="2008-10-12T21:04:35+00:00">21:04:35</abbr></a>] <span>* valhalla (n=valhalla@81-174-25-222.dynamic.ngi.it) Quit ("Leaving")</span></li>
<li class="message">[<a href="#T21:04:45" id="T21:04:45"><abbr title="2008-10-12T21:04:45+00:00">21:04:45</abbr></a>] &lt;<cite>geist</cite>&gt; <q>if you're that clever, you pick the right tool for the right job</q></li>
<li class="message">[<a href="#T21:04:47" id="T21:04:47"><abbr title="2008-10-12T21:04:47+00:00">21:04:47</abbr></a>] &lt;<cite>mru</cite>&gt; <q>rule #1 for performance: don't trust the compiler</q></li>
<li class="message">[<a href="#T21:05:01" id="T21:05:01"><abbr title="2008-10-12T21:05:01+00:00">21:05:01</abbr></a>] &lt;<cite>geist</cite>&gt; <q>which is why you should always check the output</q></li>
<li class="message">[<a href="#T21:05:16" id="T21:05:16"><abbr title="2008-10-12T21:05:16+00:00">21:05:16</abbr></a>] &lt;<cite>mru</cite>&gt; <q>I've seen enough gcc-generated crap to not let it near anything important</q></li>
<li class="message">[<a href="#T21:05:17" id="T21:05:17"><abbr title="2008-10-12T21:05:17+00:00">21:05:17</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>I need to doble check</q></li>
<li class="message">[<a href="#T21:05:22" id="T21:05:22"><abbr title="2008-10-12T21:05:22+00:00">21:05:22</abbr></a>] &lt;<cite>geist</cite>&gt; <q>hey, i'm all for writing assembly, it's fun.</q></li>
<li class="message">[<a href="#T21:05:27" id="T21:05:27"><abbr title="2008-10-12T21:05:27+00:00">21:05:27</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>that was my attempt at generating by hand</q></li>
<li class="message">[<a href="#T21:05:43" id="T21:05:43"><abbr title="2008-10-12T21:05:43+00:00">21:05:43</abbr></a>] &lt;<cite>geist</cite>&gt; <q>but it's really a bad idea for all but the tightest code</q></li>
<li class="join">[<a href="#T21:05:50" id="T21:05:50"><abbr title="2008-10-12T21:05:50+00:00">21:05:50</abbr></a>] <span>* docelic (n=docelic@78.134.207.111) has joined #beagle</span></li>
<li class="message">[<a href="#T21:06:07" id="T21:06:07"><abbr title="2008-10-12T21:06:07+00:00">21:06:07</abbr></a>] &lt;<cite>geist</cite>&gt; <q>at the minimum you need to have the C/C++ equivalent to test against, and deal with architectures you arne't tuning for</q></li>
<li class="action">[<a href="#T21:06:11" id="T21:06:11"><abbr title="2008-10-12T21:06:11+00:00">21:06:11</abbr></a>] <span>* Crofton|work replaces mru's compiler with bined :)</span></li>
<li class="message">[<a href="#T21:06:21" id="T21:06:21"><abbr title="2008-10-12T21:06:21+00:00">21:06:21</abbr></a>] &lt;<cite>geist</cite>&gt; <q>which means by definition you are already spending much mroe time to do it</q></li>
<li class="message">[<a href="#T21:06:54" id="T21:06:54"><abbr title="2008-10-12T21:06:54+00:00">21:06:54</abbr></a>] &lt;<cite>mru</cite>&gt; <q>anyone considering using c++ should first be required to reverse engineer a major c++ app</q></li>
<li class="message">[<a href="#T21:07:03" id="T21:07:03"><abbr title="2008-10-12T21:07:03+00:00">21:07:03</abbr></a>] &lt;<cite>mru</cite>&gt; <q>if they still think it's a good idea, lock them up</q></li>
<li class="message">[<a href="#T21:07:12" id="T21:07:12"><abbr title="2008-10-12T21:07:12+00:00">21:07:12</abbr></a>] &lt;<cite>geist</cite>&gt; <q>*shrug* not gonna argue with this one</q></li>
<li class="message">[<a href="#T21:07:51" id="T21:07:51"><abbr title="2008-10-12T21:07:51+00:00">21:07:51</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>geist, what are you using the beagle for?</q></li>
<li class="message">[<a href="#T21:08:30" id="T21:08:30"><abbr title="2008-10-12T21:08:30+00:00">21:08:30</abbr></a>] &lt;<cite>geist</cite>&gt; <q>not much, mostly hacking my own stuff onto it</q></li>
<li class="message">[<a href="#T21:08:37" id="T21:08:37"><abbr title="2008-10-12T21:08:37+00:00">21:08:37</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>there are some cases where c++ makes sense for optimization, but not many</q></li>
<li class="message">[<a href="#T21:08:38" id="T21:08:38"><abbr title="2008-10-12T21:08:38+00:00">21:08:38</abbr></a>] &lt;<cite>geist</cite>&gt; <q>i use omap3s at work, so i mostly get my fill of it</q></li>
<li class="message">[<a href="#T21:10:09" id="T21:10:09"><abbr title="2008-10-12T21:10:09+00:00">21:10:09</abbr></a>] &lt;<cite>mru</cite>&gt; <q>c++ only makes sense if you have too much RAM</q></li>
<li class="message">[<a href="#T21:10:36" id="T21:10:36"><abbr title="2008-10-12T21:10:36+00:00">21:10:36</abbr></a>] &lt;<cite>geist</cite>&gt; <q>asm only makes sense if you have too much time</q></li>
<li class="message">[<a href="#T21:11:01" id="T21:11:01"><abbr title="2008-10-12T21:11:01+00:00">21:11:01</abbr></a>] &lt;<cite>swetland</cite>&gt; <q>moderation in all things is worthwhile</q></li>
<li class="message">[<a href="#T21:12:02" id="T21:12:02"><abbr title="2008-10-12T21:12:02+00:00">21:12:02</abbr></a>] &lt;<cite>Crofton|work</cite>&gt; <q>can we all agree java is evil?</q></li>
<li class="action">[<a href="#T21:12:10" id="T21:12:10"><abbr title="2008-10-12T21:12:10+00:00">21:12:10</abbr></a>] <span>* Crofton|work ducks</span></li>
<li class="message">[<a href="#T21:12:11" id="T21:12:11"><abbr title="2008-10-12T21:12:11+00:00">21:12:11</abbr></a>] &lt;<cite>adj__</cite>&gt; <q>definitely.</q></li>
<li class="message">[<a href="#T21:12:17" id="T21:12:17"><abbr title="2008-10-12T21:12:17+00:00">21:12:17</abbr></a>] &lt;<cite>mru</cite>&gt; <q>no disagreement here</q></li>
<li class="message">[<a href="#T21:12:53" id="T21:12:53"><abbr title="2008-10-12T21:12:53+00:00">21:12:53</abbr></a>] &lt;<cite>mru</cite>&gt; <q>java is like c++ with all the sensible parts removed</q></li>
<li class="message">[<a href="#T21:16:14" id="T21:16:14"><abbr title="2008-10-12T21:16:14+00:00">21:16:14</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>one advantage of c++ is that the templating system pretty much act as macros, and in that sense the resulting code can be more optimal than C code... but c++ projects usually get insanely abstract</q></li>
<li class="message">[<a href="#T21:16:43" id="T21:16:43"><abbr title="2008-10-12T21:16:43+00:00">21:16:43</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>so I would prefer if c++ didn't exist at all</q></li>
<li class="message">[<a href="#T21:16:52" id="T21:16:52"><abbr title="2008-10-12T21:16:52+00:00">21:16:52</abbr></a>] &lt;<cite>mru</cite>&gt; <q>whenever I've had to look at any c++ code, I've struggled to find the parts that actually do any real work</q></li>
<li class="message">[<a href="#T21:17:09" id="T21:17:09"><abbr title="2008-10-12T21:17:09+00:00">21:17:09</abbr></a>] &lt;<cite>mru</cite>&gt; <q>same for python</q></li>
<li class="message">[<a href="#T21:17:41" id="T21:17:41"><abbr title="2008-10-12T21:17:41+00:00">21:17:41</abbr></a>] &lt;<cite>mru</cite>&gt; <q>and of course java</q></li>
<li class="quit">[<a href="#T21:19:21" id="T21:19:21"><abbr title="2008-10-12T21:19:21+00:00">21:19:21</abbr></a>] <span>* zedstar (n=john@fsf/member/zedstar) Quit (Remote closed the connection)</span></li>
<li class="message">[<a href="#T21:19:59" id="T21:19:59"><abbr title="2008-10-12T21:19:59+00:00">21:19:59</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>true, I liked the old days when I had the time to experiment in a kernel done in 100% asm, it was easy to see exactly what was happening and how to optimize it</q></li>
<li class="message">[<a href="#T21:20:34" id="T21:20:34"><abbr title="2008-10-12T21:20:34+00:00">21:20:34</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>but eventually I had less time, so I moved to C, and now I like Ruby :)</q></li>
<li class="message">[<a href="#T21:20:51" id="T21:20:51"><abbr title="2008-10-12T21:20:51+00:00">21:20:51</abbr></a>] &lt;<cite>mru</cite>&gt; <q>there are certainly cases where a higher level language than C are useful</q></li>
<li class="message">[<a href="#T21:21:13" id="T21:21:13"><abbr title="2008-10-12T21:21:13+00:00">21:21:13</abbr></a>] &lt;<cite>mru</cite>&gt; <q>but there things like Perl tend to be a better choice than c++</q></li>
<li class="message">[<a href="#T21:21:25" id="T21:21:25"><abbr title="2008-10-12T21:21:25+00:00">21:21:25</abbr></a>] &lt;<cite>swetland</cite>&gt; <q>ahahahahahhahah</q></li>
<li class="message">[<a href="#T21:21:33" id="T21:21:33"><abbr title="2008-10-12T21:21:33+00:00">21:21:33</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>mru: and a good thing about Ruby is that it's very easy to interact with C</q></li>
<li class="join">[<a href="#T21:21:42" id="T21:21:42"><abbr title="2008-10-12T21:21:42+00:00">21:21:42</abbr></a>] <span>* florian (n=fuchs@f048035040.adsl.alicedsl.de) has joined #beagle</span></li>
<li class="message">[<a href="#T21:21:44" id="T21:21:44"><abbr title="2008-10-12T21:21:44+00:00">21:21:44</abbr></a>] &lt;<cite>mru</cite>&gt; <q>the bad thing about ruby is that there is no language spec</q></li>
<li class="message">[<a href="#T21:21:50" id="T21:21:50"><abbr title="2008-10-12T21:21:50+00:00">21:21:50</abbr></a>] &lt;<cite>mru</cite>&gt; <q>and peformance sucks</q></li>
<li class="message">[<a href="#T21:22:00" id="T21:22:00"><abbr title="2008-10-12T21:22:00+00:00">21:22:00</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>How do I get "bitbake virtual/kernel" to rebuild the kernel?</q></li>
<li class="message">[<a href="#T21:22:08" id="T21:22:08"><abbr title="2008-10-12T21:22:08+00:00">21:22:08</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>mru: true, but hopefully it will get better</q></li>
<li class="message">[<a href="#T21:22:41" id="T21:22:41"><abbr title="2008-10-12T21:22:41+00:00">21:22:41</abbr></a>] &lt;<cite>mru</cite>&gt; <q>I only looked at it briefly, decided I didn't like it much</q></li>
<li class="message">[<a href="#T21:22:55" id="T21:22:55"><abbr title="2008-10-12T21:22:55+00:00">21:22:55</abbr></a>] &lt;<cite>mru</cite>&gt; <q>and there isn't (as of now) any compelling reason to use it over the alternatives</q></li>
<li class="message">[<a href="#T21:23:05" id="T21:23:05"><abbr title="2008-10-12T21:23:05+00:00">21:23:05</abbr></a>] &lt;<cite>mru</cite>&gt; <q>it's not faster etc...</q></li>
<li class="message">[<a href="#T21:23:55" id="T21:23:55"><abbr title="2008-10-12T21:23:55+00:00">21:23:55</abbr></a>] &lt;<cite>mru</cite>&gt; <q>then again, I feel best when I'm writing device drivers or boot loaders</q></li>
<li class="message">[<a href="#T21:24:02" id="T21:24:02"><abbr title="2008-10-12T21:24:02+00:00">21:24:02</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>mru: there aren't really any alternatives, the closest would be Python, which is ugly and unintuitive</q></li>
<li class="message">[<a href="#T21:24:51" id="T21:24:51"><abbr title="2008-10-12T21:24:51+00:00">21:24:51</abbr></a>] &lt;<cite>mru</cite>&gt; <q>if it can't be done in Perl, C or assembler, it's usually not worth doing</q></li>
<li class="message">[<a href="#T21:26:39" id="T21:26:39"><abbr title="2008-10-12T21:26:39+00:00">21:26:39</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>mru: not worth publishing maybe, there's nothing wrong with little tools in a high level language</q></li>
<li class="message">[<a href="#T21:26:54" id="T21:26:54"><abbr title="2008-10-12T21:26:54+00:00">21:26:54</abbr></a>] &lt;<cite>mru</cite>&gt; <q>add emacs-lisp to the list ;-)</q></li>
<li class="message">[<a href="#T21:27:03" id="T21:27:03"><abbr title="2008-10-12T21:27:03+00:00">21:27:03</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>mru: but lua is another language I would add to the list</q></li>
<li class="message">[<a href="#T21:27:15" id="T21:27:15"><abbr title="2008-10-12T21:27:15+00:00">21:27:15</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>pretty nice for configuration stuff</q></li>
<li class="message">[<a href="#T21:27:33" id="T21:27:33"><abbr title="2008-10-12T21:27:33+00:00">21:27:33</abbr></a>] &lt;<cite>mru</cite>&gt; <q>that's another language I looked at and thought "WTF"</q></li>
<li class="message">[<a href="#T21:28:05" id="T21:28:05"><abbr title="2008-10-12T21:28:05+00:00">21:28:05</abbr></a>] &lt;<cite>swetland</cite>&gt; <q>nice embedded language with very little baggage</q></li>
<li class="message">[<a href="#T21:28:20" id="T21:28:20"><abbr title="2008-10-12T21:28:20+00:00">21:28:20</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>it's great as a companion of a C application</q></li>
<li class="action">[<abbr title="2008-10-12T21:28:20+00:00">21:28:20</abbr>] <span>* mru made his own little script language when he wanted customisable key binding in his video player</span></li>
<li class="message">[<a href="#T21:28:31" id="T21:28:31"><abbr title="2008-10-12T21:28:31+00:00">21:28:31</abbr></a>] &lt;<cite>swetland</cite>&gt; <q>has a couple annoying quirks syntax-wise</q></li>
<li class="message">[<a href="#T21:28:56" id="T21:28:56"><abbr title="2008-10-12T21:28:56+00:00">21:28:56</abbr></a>] &lt;<cite>swetland</cite>&gt; <q>the whole . vs : thing can cause no end of headaches</q></li>
<li class="join">[<a href="#T21:29:03" id="T21:29:03"><abbr title="2008-10-12T21:29:03+00:00">21:29:03</abbr></a>] <span>* gcohler (n=gcohler@pool-72-93-217-203.bstnma.fios.verizon.net) has joined #beagle</span></li>
<li class="message">[<a href="#T21:29:17" id="T21:29:17"><abbr title="2008-10-12T21:29:17+00:00">21:29:17</abbr></a>] &lt;<cite>mru</cite>&gt; <q>I never got into any details with it</q></li>
<li class="message">[<a href="#T21:29:19" id="T21:29:19"><abbr title="2008-10-12T21:29:19+00:00">21:29:19</abbr></a>] &lt;<cite>ssvb</cite>&gt; <q>felipec: lua is a very nice lightweight scripting language, this one is also quite interesting, though less mature: <a href="http://squirrel-lang.org/">http://squirrel-lang.org/</a></q></li>
<li class="join">[<a href="#T21:29:52" id="T21:29:52"><abbr title="2008-10-12T21:29:52+00:00">21:29:52</abbr></a>] <span>* RogerMon1 (n=a0740758@nat/ti/x-44b6f1dd560ac044) has joined #beagle</span></li>
<li class="message">[<a href="#T21:30:33" id="T21:30:33"><abbr title="2008-10-12T21:30:33+00:00">21:30:33</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>mru: check some wm configuration: <a href="http://awesome.naquadah.org/wiki/index.php?title=Awesome_3_configuration">http://awesome.naquadah.org/wiki/index.php?title=Awesome_3_configuration</a></q></li>
<li class="message">[<a href="#T21:31:15" id="T21:31:15"><abbr title="2008-10-12T21:31:15+00:00">21:31:15</abbr></a>] &lt;<cite>mru</cite>&gt; <q>the WTF feeling has returned</q></li>
<li class="message">[<a href="#T21:32:16" id="T21:32:16"><abbr title="2008-10-12T21:32:16+00:00">21:32:16</abbr></a>] &lt;<cite>ssvb</cite>&gt; <q>mru: there is no need reinventing wheels sometimes, lua is very good for configuration stuff</q></li>
<li class="message">[<a href="#T21:32:31" id="T21:32:31"><abbr title="2008-10-12T21:32:31+00:00">21:32:31</abbr></a>] &lt;<cite>mru</cite>&gt; <q>well, I don't like it</q></li>
<li class="message">[<a href="#T21:32:46" id="T21:32:46"><abbr title="2008-10-12T21:32:46+00:00">21:32:46</abbr></a>] &lt;<cite>mru</cite>&gt; <q>and my little language is much smaller and does the job</q></li>
<li class="message">[<a href="#T21:33:05" id="T21:33:05"><abbr title="2008-10-12T21:33:05+00:00">21:33:05</abbr></a>] &lt;<cite>mru</cite>&gt; <q>a few hundred lines of c code for the implementation</q></li>
<li class="message">[<a href="#T21:33:19" id="T21:33:19"><abbr title="2008-10-12T21:33:19+00:00">21:33:19</abbr></a>] &lt;<cite>mru</cite>&gt; <q>and a little lex and yacc</q></li>
<li class="message">[<a href="#T21:33:40" id="T21:33:40"><abbr title="2008-10-12T21:33:40+00:00">21:33:40</abbr></a>] &lt;<cite>ssvb</cite>&gt; <q>I don't like lex and yacc :)</q></li>
<li class="message">[<a href="#T21:33:45" id="T21:33:45"><abbr title="2008-10-12T21:33:45+00:00">21:33:45</abbr></a>] &lt;<cite>mru</cite>&gt; <q>I do</q></li>
<li class="message">[<a href="#T21:33:47" id="T21:33:47"><abbr title="2008-10-12T21:33:47+00:00">21:33:47</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>me neither</q></li>
<li class="message">[<a href="#T21:33:54" id="T21:33:54"><abbr title="2008-10-12T21:33:54+00:00">21:33:54</abbr></a>] &lt;<cite>mru</cite>&gt; <q>terrific stuff</q></li>
<li class="message">[<a href="#T21:33:59" id="T21:33:59"><abbr title="2008-10-12T21:33:59+00:00">21:33:59</abbr></a>] &lt;<cite>mru</cite>&gt; <q>they could be made better, sure</q></li>
<li class="message">[<a href="#T21:34:05" id="T21:34:05"><abbr title="2008-10-12T21:34:05+00:00">21:34:05</abbr></a>] &lt;<cite>mru</cite>&gt; <q>reentrancy is an issue</q></li>
<li class="quit">[<abbr title="2008-10-12T21:34:05+00:00">21:34:05</abbr>] <span>* RogerMonk (n=a0740758@nat/ti/x-04f6a8fb47964c11) Quit (Remote closed the connection)</span></li>
<li class="message">[<a href="#T21:34:15" id="T21:34:15"><abbr title="2008-10-12T21:34:15+00:00">21:34:15</abbr></a>] &lt;<cite>mru</cite>&gt; <q>but on the whole they make life easy</q></li>
<li class="message">[<a href="#T21:34:33" id="T21:34:33"><abbr title="2008-10-12T21:34:33+00:00">21:34:33</abbr></a>] &lt;<cite>ssvb</cite>&gt; <q>I prefer re2c</q></li>
<li class="message">[<a href="#T21:34:59" id="T21:34:59"><abbr title="2008-10-12T21:34:59+00:00">21:34:59</abbr></a>] &lt;<cite>ssvb</cite>&gt; <q>it's a lot more flexible and faster than (f)lex</q></li>
<li class="message">[<a href="#T21:35:02" id="T21:35:02"><abbr title="2008-10-12T21:35:02+00:00">21:35:02</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>I prefer to write my parsing stuff by hand</q></li>
<li class="message">[<a href="#T21:35:31" id="T21:35:31"><abbr title="2008-10-12T21:35:31+00:00">21:35:31</abbr></a>] &lt;<cite>mru</cite>&gt; <q>writing parsers by hand in c is painful</q></li>
<li class="quit">[<abbr title="2008-10-12T21:35:31+00:00">21:35:31</abbr>] <span>* methril|laptop (n=methril@224.72.220.87.dynamic.jazztel.es) Quit (Read error: 104 (Connection reset by peer))</span></li>
<li class="message">[<a href="#T21:35:39" id="T21:35:39"><abbr title="2008-10-12T21:35:39+00:00">21:35:39</abbr></a>] &lt;<cite>mru</cite>&gt; <q>never used re2c</q></li>
<li class="join">[<a href="#T21:36:02" id="T21:36:02"><abbr title="2008-10-12T21:36:02+00:00">21:36:02</abbr></a>] <span>* methril|laptop (n=methril@224.72.220.87.dynamic.jazztel.es) has joined #beagle</span></li>
<li class="message">[<a href="#T21:36:22" id="T21:36:22"><abbr title="2008-10-12T21:36:22+00:00">21:36:22</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>mru: it is, but lex/yacc is more painful to me</q></li>
<li class="message">[<a href="#T21:36:54" id="T21:36:54"><abbr title="2008-10-12T21:36:54+00:00">21:36:54</abbr></a>] &lt;<cite>mru</cite>&gt; <q>I guess I have a different sense of pain than you</q></li>
<li class="message">[<a href="#T21:38:00" id="T21:38:00"><abbr title="2008-10-12T21:38:00+00:00">21:38:00</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>mru: besides, good luck optimizing the parsing code in lex/yacc</q></li>
<li class="message">[<a href="#T21:38:44" id="T21:38:44"><abbr title="2008-10-12T21:38:44+00:00">21:38:44</abbr></a>] &lt;<cite>mru</cite>&gt; <q>it only needs optimising once</q></li>
<li class="message">[<a href="#T21:38:53" id="T21:38:53"><abbr title="2008-10-12T21:38:53+00:00">21:38:53</abbr></a>] &lt;<cite>mru</cite>&gt; <q>then everybody who uses them benefits</q></li>
<li class="message">[<a href="#T21:39:14" id="T21:39:14"><abbr title="2008-10-12T21:39:14+00:00">21:39:14</abbr></a>] &lt;<cite>mru</cite>&gt; <q>besides, parsing shouldn't be something that's that performance-critical</q></li>
<li class="message">[<a href="#T21:39:32" id="T21:39:32"><abbr title="2008-10-12T21:39:32+00:00">21:39:32</abbr></a>] &lt;<cite>mru</cite>&gt; <q>if you spend a significant amount of time parsing code, you're doing something wrong</q></li>
<li class="message">[<a href="#T21:39:48" id="T21:39:48"><abbr title="2008-10-12T21:39:48+00:00">21:39:48</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>mru: when you use network protocols it is</q></li>
<li class="message">[<a href="#T21:40:15" id="T21:40:15"><abbr title="2008-10-12T21:40:15+00:00">21:40:15</abbr></a>] &lt;<cite>mru</cite>&gt; <q>all the good network protocols are easy to parse</q></li>
<li class="message">[<a href="#T21:40:28" id="T21:40:28"><abbr title="2008-10-12T21:40:28+00:00">21:40:28</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>exactly</q></li>
<li class="message">[<a href="#T21:40:41" id="T21:40:41"><abbr title="2008-10-12T21:40:41+00:00">21:40:41</abbr></a>] &lt;<cite>mru</cite>&gt; <q>they're either efficient binary formats or line-based text</q></li>
<li class="message">[<a href="#T21:41:21" id="T21:41:21"><abbr title="2008-10-12T21:41:21+00:00">21:41:21</abbr></a>] &lt;<cite>mru</cite>&gt; <q>if a network protocol starts resembling a programming language in complexity, something is also wrong</q></li>
<li class="join">[<a href="#T21:41:31" id="T21:41:31"><abbr title="2008-10-12T21:41:31+00:00">21:41:31</abbr></a>] <span>* igor321 (n=igor@178-56.dsl.iskon.hr) has joined #beagle</span></li>
<li class="message">[<a href="#T21:45:18" id="T21:45:18"><abbr title="2008-10-12T21:45:18+00:00">21:45:18</abbr></a>] &lt;<cite>ssvb</cite>&gt; <q>felipec: I agree that lex generated code is quite slow, but it is hard to beat re2c performance even with hand written code</q></li>
<li class="message">[<a href="#T21:46:46" id="T21:46:46"><abbr title="2008-10-12T21:46:46+00:00">21:46:46</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>ssvb: it looks promising... I'm interested in an http parser</q></li>
<li class="message">[<a href="#T21:47:03" id="T21:47:03"><abbr title="2008-10-12T21:47:03+00:00">21:47:03</abbr></a>] &lt;<cite>mru</cite>&gt; <q>http is pretty simple</q></li>
<li class="message">[<a href="#T21:47:19" id="T21:47:19"><abbr title="2008-10-12T21:47:19+00:00">21:47:19</abbr></a>] &lt;<cite>mru</cite>&gt; <q>the complicated parts come after the parsing</q></li>
<li class="message">[<a href="#T21:49:37" id="T21:49:37"><abbr title="2008-10-12T21:49:37+00:00">21:49:37</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>mru: yes, but the problem is that you never have complete buffers, if you want to do it efficiently you need to save the state and wait for more data to come, and so on</q></li>
<li class="quit">[<a href="#T21:49:51" id="T21:49:51"><abbr title="2008-10-12T21:49:51+00:00">21:49:51</abbr></a>] <span>* docelic (n=docelic@78.134.207.111) Quit ("<a href="http://www.spinlocksolutions.com/")">http://www.spinlocksolutions.com/")</a></span></li>
<li class="message">[<a href="#T21:50:09" id="T21:50:09"><abbr title="2008-10-12T21:50:09+00:00">21:50:09</abbr></a>] &lt;<cite>mru</cite>&gt; <q>can't you do it a line at a time?</q></li>
<li class="message">[<a href="#T21:50:33" id="T21:50:33"><abbr title="2008-10-12T21:50:33+00:00">21:50:33</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>mru: no, but even lines can be split</q></li>
<li class="message">[<a href="#T21:50:44" id="T21:50:44"><abbr title="2008-10-12T21:50:44+00:00">21:50:44</abbr></a>] &lt;<cite>mru</cite>&gt; <q>wouldn't the entire http header fit in a single network packet most of the time?</q></li>
<li class="message">[<a href="#T21:51:21" id="T21:51:21"><abbr title="2008-10-12T21:51:21+00:00">21:51:21</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>mru: that's the key: 'most of the time', but not always</q></li>
<li class="message">[<a href="#T21:51:32" id="T21:51:32"><abbr title="2008-10-12T21:51:32+00:00">21:51:32</abbr></a>] &lt;<cite>mru</cite>&gt; <q>well, two then</q></li>
<li class="message">[<a href="#T21:52:04" id="T21:52:04"><abbr title="2008-10-12T21:52:04+00:00">21:52:04</abbr></a>] &lt;<cite>mru</cite>&gt; <q>if the first packet ends mid-line, how much do you lose by waiting for the next packet before processing that line?</q></li>
<li class="message">[<a href="#T21:53:22" id="T21:53:22"><abbr title="2008-10-12T21:53:22+00:00">21:53:22</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>mru: you need to save the whole state, something I haven't seen any parse generators do</q></li>
<li class="message">[<a href="#T21:53:56" id="T21:53:56"><abbr title="2008-10-12T21:53:56+00:00">21:53:56</abbr></a>] &lt;<cite>mru</cite>&gt; <q>I said http is simple enough that you don't need a special parser generator</q></li>
<li class="message">[<a href="#T21:54:59" id="T21:54:59"><abbr title="2008-10-12T21:54:59+00:00">21:54:59</abbr></a>] &lt;<cite>ssvb</cite>&gt; <q>mru: there are many corner cases, I developed MIME parser for an antivirus scanner and there are much more cases to handle even if they violate RFC (basically everything than can be processed by popular e-mail clients needs to be handled)</q></li>
<li class="message">[<a href="#T21:56:06" id="T21:56:06"><abbr title="2008-10-12T21:56:06+00:00">21:56:06</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>mru: right, it is, but I'm saying the complicated part is not something a parse generator can help with</q></li>
<li class="message">[<a href="#T21:56:27" id="T21:56:27"><abbr title="2008-10-12T21:56:27+00:00">21:56:27</abbr></a>] &lt;<cite>mru</cite>&gt; <q>hey, look at that, I think we actually agree</q></li>
<li class="message">[<a href="#T21:56:52" id="T21:56:52"><abbr title="2008-10-12T21:56:52+00:00">21:56:52</abbr></a>] &lt;<cite>mru</cite>&gt; <q>if you agree that the complicated part of http is what you do *after* parsing the header fields</q></li>
<li class="message">[<a href="#T21:57:03" id="T21:57:03"><abbr title="2008-10-12T21:57:03+00:00">21:57:03</abbr></a>] &lt;<cite>mru</cite>&gt; <q>simple syntax, complicated semantics</q></li>
<li class="message">[<a href="#T21:58:48" id="T21:58:48"><abbr title="2008-10-12T21:58:48+00:00">21:58:48</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>mru: no, I'm saying the complicated part of the parsing is due to the asynchronous nature of network IO, the complicated part *after* parsing depends on what you want to do</q></li>
<li class="message">[<a href="#T21:59:32" id="T21:59:32"><abbr title="2008-10-12T21:59:32+00:00">21:59:32</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>if you just want to grab some data it's certainly no that complicated, but implementing a web server is entirely different</q></li>
<li class="message">[<abbr title="2008-10-12T21:59:32+00:00">21:59:32</abbr>] &lt;<cite>mru</cite>&gt; <q>are you suggesting it's complicated to save a partial line in a buffer while waiting for the next packet?</q></li>
<li class="quit">[<a href="#T22:00:10" id="T22:00:10"><abbr title="2008-10-12T22:00:10+00:00">22:00:10</abbr></a>] <span>* methril|laptop (n=methril@224.72.220.87.dynamic.jazztel.es) Quit ("Ex-Chat")</span></li>
<li class="message">[<a href="#T22:03:01" id="T22:03:01"><abbr title="2008-10-12T22:03:01+00:00">22:03:01</abbr></a>] &lt;<cite>ssvb</cite>&gt; <q>mru: everything is solvable, just performance sometimes does matter</q></li>
<li class="message">[<a href="#T22:03:38" id="T22:03:38"><abbr title="2008-10-12T22:03:38+00:00">22:03:38</abbr></a>] &lt;<cite>nathanm</cite>&gt; <q>There should be an FAQ for people trying to build linux-omap kernels that the hanging on boot is caused by EHCI being turned on (as it is in Angstrom and Beagleboard defaults).</q></li>
<li class="message">[<a href="#T22:04:00" id="T22:04:00"><abbr title="2008-10-12T22:04:00+00:00">22:04:00</abbr></a>] &lt;<cite>mru</cite>&gt; <q>there are two cases to consider: 1) the server is cpu-limited, and 2) the server is network-limited</q></li>
<li class="message">[<a href="#T22:04:18" id="T22:04:18"><abbr title="2008-10-12T22:04:18+00:00">22:04:18</abbr></a>] &lt;<cite>mru</cite>&gt; <q>in case 2, it doesn't matter if the code isn't optimal</q></li>
<li class="message">[<a href="#T22:04:55" id="T22:04:55"><abbr title="2008-10-12T22:04:55+00:00">22:04:55</abbr></a>] &lt;<cite>mru</cite>&gt; <q>in case 1, it doesn't matter if one connection has to wait a few microseconds extra, since the server will be doing useful work in the meantime</q></li>
<li class="join">[<a href="#T22:05:58" id="T22:05:58"><abbr title="2008-10-12T22:05:58+00:00">22:05:58</abbr></a>] <span>* thomasg (n=thomasg@85.131.189.115) has joined #beagle</span></li>
<li class="message">[<a href="#T22:06:15" id="T22:06:15"><abbr title="2008-10-12T22:06:15+00:00">22:06:15</abbr></a>] &lt;<cite>ssvb</cite>&gt; <q>mru: I'm not talking only about http now, but some tasks really require fast parsing, for example processing your mail directory</q></li>
<li class="message">[<a href="#T22:06:31" id="T22:06:31"><abbr title="2008-10-12T22:06:31+00:00">22:06:31</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>mru: well, you need to keep the whole state, content length, weather or not you have received... it's not that complicated, but neither is taking the content of the server response</q></li>
<li class="message">[<a href="#T22:06:38" id="T22:06:38"><abbr title="2008-10-12T22:06:38+00:00">22:06:38</abbr></a>] &lt;<cite>mru</cite>&gt; <q>ssvb: how fast do you read your mail?</q></li>
<li class="message">[<a href="#T22:07:06" id="T22:07:06"><abbr title="2008-10-12T22:07:06+00:00">22:07:06</abbr></a>] &lt;<cite>mru</cite>&gt; <q>felipec: you need to store the parsed data somewhere, no matter what your parser looks like</q></li>
<li class="message">[<a href="#T22:07:31" id="T22:07:31"><abbr title="2008-10-12T22:07:31+00:00">22:07:31</abbr></a>] &lt;<cite>mru</cite>&gt; <q>no need to keep a separate copy while parsing fragmented headers</q></li>
<li class="message">[<a href="#T22:07:43" id="T22:07:43"><abbr title="2008-10-12T22:07:43+00:00">22:07:43</abbr></a>] &lt;<cite>ssvb</cite>&gt; <q>mru: it's not reading, but searching for something in huge mail archives</q></li>
<li class="message">[<a href="#T22:08:00" id="T22:08:00"><abbr title="2008-10-12T22:08:00+00:00">22:08:00</abbr></a>] &lt;<cite>mru</cite>&gt; <q>ssvb: then you should be building an index</q></li>
<li class="message">[<a href="#T22:08:36" id="T22:08:36"><abbr title="2008-10-12T22:08:36+00:00">22:08:36</abbr></a>] &lt;<cite>mru</cite>&gt; <q>otherwise you'll end up IO-limited anyway</q></li>
<li class="message">[<a href="#T22:09:07" id="T22:09:07"><abbr title="2008-10-12T22:09:07+00:00">22:09:07</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>mru: cpu optimization leads to less battery usage</q></li>
<li class="message">[<a href="#T22:09:37" id="T22:09:37"><abbr title="2008-10-12T22:09:37+00:00">22:09:37</abbr></a>] &lt;<cite>mru</cite>&gt; <q>so now you're searching a multi-terabyte mail archive with a battery powered device?</q></li>
<li class="message">[<a href="#T22:10:09" id="T22:10:09"><abbr title="2008-10-12T22:10:09+00:00">22:10:09</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>mru: I'm talking about http</q></li>
<li class="message">[<a href="#T22:10:14" id="T22:10:14"><abbr title="2008-10-12T22:10:14+00:00">22:10:14</abbr></a>] &lt;<cite>mru</cite>&gt; <q>right</q></li>
<li class="join">[<a href="#T22:10:38" id="T22:10:38"><abbr title="2008-10-12T22:10:38+00:00">22:10:38</abbr></a>] <span>* john280z (n=johnm@user-0c2h5av.cable.mindspring.com) has joined #beagle</span></li>
<li class="message">[<a href="#T22:10:45" id="T22:10:45"><abbr title="2008-10-12T22:10:45+00:00">22:10:45</abbr></a>] &lt;<cite>mru</cite>&gt; <q>well, your super-complex parsing-partial-lines http parser probably uses more cpu time than one that waits for complete lines</q></li>
<li class="part">[<a href="#T22:12:44" id="T22:12:44"><abbr title="2008-10-12T22:12:44+00:00">22:12:44</abbr></a>] <span>* mpoullet1 (n=mpoullet@p4FC1994B.dip0.t-ipconnect.de) has left #beagle</span></li>
<li class="message">[<a href="#T22:13:26" id="T22:13:26"><abbr title="2008-10-12T22:13:26+00:00">22:13:26</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>nobody mentioned parsing partial lines</q></li>
<li class="message">[<a href="#T22:13:46" id="T22:13:46"><abbr title="2008-10-12T22:13:46+00:00">22:13:46</abbr></a>] &lt;<cite>mru</cite>&gt; <q>then what are you talking about?</q></li>
<li class="message">[<a href="#T22:14:22" id="T22:14:22"><abbr title="2008-10-12T22:14:22+00:00">22:14:22</abbr></a>] &lt;<cite>mru</cite>&gt; <q>an http header has a request line, followed by lines with a "Name: value" format</q></li>
<li class="message">[<a href="#T22:15:20" id="T22:15:20"><abbr title="2008-10-12T22:15:20+00:00">22:15:20</abbr></a>] &lt;<cite>mru</cite>&gt; <q>some of them have defined meanings, and these will of course have to be acted upon</q></li>
<li class="message">[<a href="#T22:15:37" id="T22:15:37"><abbr title="2008-10-12T22:15:37+00:00">22:15:37</abbr></a>] &lt;<cite>mru</cite>&gt; <q>but you can't really start doing anything before you've received the entire header</q></li>
<li class="message">[<a href="#T22:16:10" id="T22:16:10"><abbr title="2008-10-12T22:16:10+00:00">22:16:10</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>followed by the content</q></li>
<li class="message">[<a href="#T22:16:37" id="T22:16:37"><abbr title="2008-10-12T22:16:37+00:00">22:16:37</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>and the most common thing to do is to just take the content and do something with it... which is semantically simple</q></li>
<li class="message">[<a href="#T22:17:05" id="T22:17:05"><abbr title="2008-10-12T22:17:05+00:00">22:17:05</abbr></a>] &lt;<cite>mru</cite>&gt; <q>absent any if-modified-since and similar header lines</q></li>
<li class="message">[<a href="#T22:17:30" id="T22:17:30"><abbr title="2008-10-12T22:17:30+00:00">22:17:30</abbr></a>] &lt;<cite>mru</cite>&gt; <q>and the "something" is either discard or send to an external handler</q></li>
<li class="message">[<a href="#T22:18:04" id="T22:18:04"><abbr title="2008-10-12T22:18:04+00:00">22:18:04</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>yes, it depends completely on what you want to do</q></li>
<li class="message">[<a href="#T22:19:29" id="T22:19:29"><abbr title="2008-10-12T22:19:29+00:00">22:19:29</abbr></a>] &lt;<cite>pbrook</cite>&gt; <q>felipec: So you're not actually writing a http parser. You're writing some random parser, and the data stream happens to be transferred over http?</q></li>
<li class="message">[<a href="#T22:20:58" id="T22:20:58"><abbr title="2008-10-12T22:20:58+00:00">22:20:58</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>pbrook: you can see it that way, yes, but the http parsing needs to be done</q></li>
<li class="message">[<a href="#T22:21:01" id="T22:21:01"><abbr title="2008-10-12T22:21:01+00:00">22:21:01</abbr></a>] &lt;<cite>Wowbagger_</cite>&gt; <q>Is there an ioctl associated with gpio sysfs? To make things cleaner (maybe) in c code.</q></li>
<li class="message">[<a href="#T22:21:28" id="T22:21:28"><abbr title="2008-10-12T22:21:28+00:00">22:21:28</abbr></a>] &lt;<cite>mru</cite>&gt; <q>wow, someone's on topic</q></li>
<li class="action">[<a href="#T22:21:48" id="T22:21:48"><abbr title="2008-10-12T22:21:48+00:00">22:21:48</abbr></a>] <span>* Wowbagger_ looks around</span></li>
<li class="message">[<a href="#T22:22:06" id="T22:22:06"><abbr title="2008-10-12T22:22:06+00:00">22:22:06</abbr></a>] &lt;<cite>mru</cite>&gt; <q>more or less</q></li>
<li class="message">[<abbr title="2008-10-12T22:22:06+00:00">22:22:06</abbr>] &lt;<cite>felipec</cite>&gt; <q>ideally all the semantic http handling should be handled, but that's usually not required</q></li>
<li class="message">[<a href="#T22:23:29" id="T22:23:29"><abbr title="2008-10-12T22:23:29+00:00">22:23:29</abbr></a>] &lt;<cite>pbrook</cite>&gt; <q>felipec: I find it hard to believe that trying to write an incremental http parser is easier, simpler, faster or more efficient that just buffering the whole header.</q></li>
<li class="message">[<a href="#T22:23:31" id="T22:23:31"><abbr title="2008-10-12T22:23:31+00:00">22:23:31</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>heh, trying to go back on the topic: there's no good parsing generators for many common tasks, if efficiency is required</q></li>
<li class="message">[<a href="#T22:24:23" id="T22:24:23"><abbr title="2008-10-12T22:24:23+00:00">22:24:23</abbr></a>] &lt;<cite>mru</cite>&gt; <q>and I repeat: if a complicated parser is needed, it shouldn't be used often enough that performance matters much</q></li>
<li class="message">[<a href="#T22:24:25" id="T22:24:25"><abbr title="2008-10-12T22:24:25+00:00">22:24:25</abbr></a>] &lt;<cite>pbrook</cite>&gt; <q>If your fancy incremental parser is required fr the content, that should be a separate pipe, and talking about http is just confusing things.</q></li>
<li class="action">[<a href="#T22:24:56" id="T22:24:56"><abbr title="2008-10-12T22:24:56+00:00">22:24:56</abbr></a>] <span>* mru is waiting for someone to mention xml</span></li>
<li class="message">[<a href="#T22:26:54" id="T22:26:54"><abbr title="2008-10-12T22:26:54+00:00">22:26:54</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>pbrook: what's the point of buffering the whole header if you are going to parse it line by line? buffering the line makes sense, not the header</q></li>
<li class="message">[<a href="#T22:27:22" id="T22:27:22"><abbr title="2008-10-12T22:27:22+00:00">22:27:22</abbr></a>] &lt;<cite>mru</cite>&gt; <q>how often is the header more than one network packet?</q></li>
<li class="message">[<a href="#T22:28:10" id="T22:28:10"><abbr title="2008-10-12T22:28:10+00:00">22:28:10</abbr></a>] &lt;<cite>pbrook</cite>&gt; <q>If you need sufficiently little information that youcan get away with a line by line scan, then sure, buffer a line at a time. Same principle applies though.</q></li>
<li class="message">[<a href="#T22:29:03" id="T22:29:03"><abbr title="2008-10-12T22:29:03+00:00">22:29:03</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>mru: I'm not entirely sure, but I think you don't get packets, you get whatever the os gives you, sometimes the stream is split, somethings the io is buffered by the os, etc.</q></li>
<li class="message">[<a href="#T22:29:48" id="T22:29:48"><abbr title="2008-10-12T22:29:48+00:00">22:29:48</abbr></a>] &lt;<cite>mru</cite>&gt; <q>there are no guarantees with tcp, but usually if you do a read from a socket into a large buffer, you'll get packets as they arrive</q></li>
<li class="message">[<a href="#T22:29:58" id="T22:29:58"><abbr title="2008-10-12T22:29:58+00:00">22:29:58</abbr></a>] &lt;<cite>mru</cite>&gt; <q>if you read faster than packets arrive</q></li>
<li class="message">[<a href="#T22:30:06" id="T22:30:06"><abbr title="2008-10-12T22:30:06+00:00">22:30:06</abbr></a>] &lt;<cite>mru</cite>&gt; <q>if you're slower, packets get merged</q></li>
<li class="message">[<a href="#T22:30:43" id="T22:30:43"><abbr title="2008-10-12T22:30:43+00:00">22:30:43</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>mru: I think it also depends on the speed of the channel, and the quality</q></li>
<li class="message">[<a href="#T22:31:06" id="T22:31:06"><abbr title="2008-10-12T22:31:06+00:00">22:31:06</abbr></a>] &lt;<cite>mru</cite>&gt; <q>that will affect the arrival rate of packets, not what happens to them further up the stack</q></li>
<li class="message">[<a href="#T22:31:40" id="T22:31:40"><abbr title="2008-10-12T22:31:40+00:00">22:31:40</abbr></a>] &lt;<cite>pbrook</cite>&gt; <q>IIRC with http it's dead easy to tell whether you've got the whole header or not.</q></li>
<li class="message">[<a href="#T22:31:44" id="T22:31:44"><abbr title="2008-10-12T22:31:44+00:00">22:31:44</abbr></a>] &lt;<cite>mru</cite>&gt; <q>if you request a good chunk upfront, chances are you'll get the full header in the first packet</q></li>
<li class="message">[<a href="#T22:31:58" id="T22:31:58"><abbr title="2008-10-12T22:31:58+00:00">22:31:58</abbr></a>] &lt;<cite>mru</cite>&gt; <q>the header ends with an empty line</q></li>
<li class="message">[<a href="#T22:32:38" id="T22:32:38"><abbr title="2008-10-12T22:32:38+00:00">22:32:38</abbr></a>] &lt;<cite>pbrook</cite>&gt; <q>Though I guess if you do scanning and everything else is zero-copy you risk cache pollution.</q></li>
<li class="message">[<a href="#T22:33:26" id="T22:33:26"><abbr title="2008-10-12T22:33:26+00:00">22:33:26</abbr></a>] &lt;<cite>mru</cite>&gt; <q>I would probably parse a line at a time and stash the gathered information somewhere</q></li>
<li class="message">[<a href="#T22:34:13" id="T22:34:13"><abbr title="2008-10-12T22:34:13+00:00">22:34:13</abbr></a>] &lt;<cite>mru</cite>&gt; <q>if the available data ends with a partial line, I'd save that line and parse it with the next packet</q></li>
<li class="message">[<a href="#T22:34:51" id="T22:34:51"><abbr title="2008-10-12T22:34:51+00:00">22:34:51</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>mru: that's what I do</q></li>
<li class="message">[<a href="#T22:35:04" id="T22:35:04"><abbr title="2008-10-12T22:35:04+00:00">22:35:04</abbr></a>] &lt;<cite>mru</cite>&gt; <q>and you're saying it's complicated?</q></li>
<li class="message">[<a href="#T22:37:28" id="T22:37:28"><abbr title="2008-10-12T22:37:28+00:00">22:37:28</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>no</q></li>
<li class="message">[<a href="#T22:37:54" id="T22:37:54"><abbr title="2008-10-12T22:37:54+00:00">22:37:54</abbr></a>] &lt;<cite>mru</cite>&gt; <q>then what *are* you saying?</q></li>
<li class="message">[<a href="#T22:38:51" id="T22:38:51"><abbr title="2008-10-12T22:38:51+00:00">22:38:51</abbr></a>] &lt;<cite>mru</cite>&gt; <q>are you saying lex is bad because its parsers are unsuitable for things that aren't suitable for lex in the first place?</q></li>
<li class="message">[<a href="#T22:40:30" id="T22:40:30"><abbr title="2008-10-12T22:40:30+00:00">22:40:30</abbr></a>] &lt;<cite>mru</cite>&gt; <q>that's like complaining that a land rover is no good for nascar</q></li>
<li class="message">[<a href="#T22:42:31" id="T22:42:31"><abbr title="2008-10-12T22:42:31+00:00">22:42:31</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>I'm saying there are no good tools to do simple parsing</q></li>
<li class="message">[<a href="#T22:42:59" id="T22:42:59"><abbr title="2008-10-12T22:42:59+00:00">22:42:59</abbr></a>] &lt;<cite>mru</cite>&gt; <q>by that token, there are no good tools for addition either</q></li>
<li class="message">[<a href="#T22:43:01" id="T22:43:01"><abbr title="2008-10-12T22:43:01+00:00">22:43:01</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>everybody has to implement their own line buffering thingies</q></li>
<li class="message">[<a href="#T22:43:20" id="T22:43:20"><abbr title="2008-10-12T22:43:20+00:00">22:43:20</abbr></a>] &lt;<cite>mru</cite>&gt; <q>everybody has to write their own programme</q></li>
<li class="message">[<a href="#T22:43:24" id="T22:43:24"><abbr title="2008-10-12T22:43:24+00:00">22:43:24</abbr></a>] &lt;<cite>mru</cite>&gt; <q>how awful</q></li>
<li class="message">[<a href="#T22:43:27" id="T22:43:27"><abbr title="2008-10-12T22:43:27+00:00">22:43:27</abbr></a>] &lt;<cite>vlad_</cite>&gt; <q>felipec: so use a library that implements http</q></li>
<li class="message">[<a href="#T22:43:54" id="T22:43:54"><abbr title="2008-10-12T22:43:54+00:00">22:43:54</abbr></a>] &lt;<cite>mru</cite>&gt; <q>I've never found a good http server library</q></li>
<li class="message">[<a href="#T22:44:00" id="T22:44:00"><abbr title="2008-10-12T22:44:00+00:00">22:44:00</abbr></a>] &lt;<cite>vlad_</cite>&gt; <q>mru: yeah, but that's beside the point :)</q></li>
<li class="message">[<a href="#T22:44:09" id="T22:44:09"><abbr title="2008-10-12T22:44:09+00:00">22:44:09</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>vlad_: again, there are no good libraries that do just that, they all want to do everything and make coffee on the way</q></li>
<li class="message">[<a href="#T22:44:34" id="T22:44:34"><abbr title="2008-10-12T22:44:34+00:00">22:44:34</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>anyway, when SCTP goes mainstream hopefully that won't be necessary</q></li>
<li class="message">[<a href="#T22:44:49" id="T22:44:49"><abbr title="2008-10-12T22:44:49+00:00">22:44:49</abbr></a>] &lt;<cite>mru</cite>&gt; <q>will sctp go mainstream?</q></li>
<li class="message">[<a href="#T22:45:03" id="T22:45:03"><abbr title="2008-10-12T22:45:03+00:00">22:45:03</abbr></a>] &lt;<cite>vlad_</cite>&gt; <q>I wouldn't hold my breath</q></li>
<li class="message">[<a href="#T22:45:04" id="T22:45:04"><abbr title="2008-10-12T22:45:04+00:00">22:45:04</abbr></a>] &lt;<cite>mru</cite>&gt; <q>maybe after ipv6 does...</q></li>
<li class="message">[<a href="#T22:45:08" id="T22:45:08"><abbr title="2008-10-12T22:45:08+00:00">22:45:08</abbr></a>] &lt;<cite>vlad_</cite>&gt; <q>yeah, heh</q></li>
<li class="message">[<a href="#T22:45:26" id="T22:45:26"><abbr title="2008-10-12T22:45:26+00:00">22:45:26</abbr></a>] &lt;<cite>mru</cite>&gt; <q>I played around a bit with sctp some 5 years ago</q></li>
<li class="message">[<a href="#T22:45:36" id="T22:45:36"><abbr title="2008-10-12T22:45:36+00:00">22:45:36</abbr></a>] &lt;<cite>mru</cite>&gt; <q>seemed useful for certain applications</q></li>
<li class="message">[<a href="#T22:47:45" id="T22:47:45"><abbr title="2008-10-12T22:47:45+00:00">22:47:45</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>does TCP makes sense if SCTP becomes mainstream?</q></li>
<li class="message">[<a href="#T22:48:05" id="T22:48:05"><abbr title="2008-10-12T22:48:05+00:00">22:48:05</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>I thought SCTP pretty much covers all the stuff that TCP does</q></li>
<li class="message">[<a href="#T22:48:09" id="T22:48:09"><abbr title="2008-10-12T22:48:09+00:00">22:48:09</abbr></a>] &lt;<cite>mru</cite>&gt; <q>tcp is fine for point-to-point communication</q></li>
<li class="message">[<a href="#T22:48:19" id="T22:48:19"><abbr title="2008-10-12T22:48:19+00:00">22:48:19</abbr></a>] &lt;<cite>mru</cite>&gt; <q>sctp is one-to-many</q></li>
<li class="message">[<a href="#T22:48:43" id="T22:48:43"><abbr title="2008-10-12T22:48:43+00:00">22:48:43</abbr></a>] &lt;<cite>mru</cite>&gt; <q>and it's packet oriented</q></li>
<li class="message">[<a href="#T22:48:47" id="T22:48:47"><abbr title="2008-10-12T22:48:47+00:00">22:48:47</abbr></a>] &lt;<cite>mru</cite>&gt; <q>tcp is stream oriented</q></li>
<li class="quit">[<a href="#T22:49:47" id="T22:49:47"><abbr title="2008-10-12T22:49:47+00:00">22:49:47</abbr></a>] <span>* gduncan (n=spec@96.251.13.87) Quit ()</span></li>
<li class="message">[<a href="#T22:49:48" id="T22:49:48"><abbr title="2008-10-12T22:49:48+00:00">22:49:48</abbr></a>] &lt;<cite>mru</cite>&gt; <q>sctp is more likely to replace udp in some contexts</q></li>
<li class="quit">[<a href="#T22:53:21" id="T22:53:21"><abbr title="2008-10-12T22:53:21+00:00">22:53:21</abbr></a>] <span>* igor321 (n=igor@178-56.dsl.iskon.hr) Quit ("leavin'")</span></li>
<li class="message">[<a href="#T22:54:10" id="T22:54:10"><abbr title="2008-10-12T22:54:10+00:00">22:54:10</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>I'm interested in the message framing, that way there's no need for polling, and true async io is possible</q></li>
<li class="message">[<a href="#T22:55:34" id="T22:55:34"><abbr title="2008-10-12T22:55:34+00:00">22:55:34</abbr></a>] &lt;<cite>mru</cite>&gt; <q>that assumes your messages are all smaller than 64k (minus a bit)</q></li>
<li class="message">[<a href="#T22:56:44" id="T22:56:44"><abbr title="2008-10-12T22:56:44+00:00">22:56:44</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>which looks like enough</q></li>
<li class="message">[<a href="#T22:57:02" id="T22:57:02"><abbr title="2008-10-12T22:57:02+00:00">22:57:02</abbr></a>] &lt;<cite>mru</cite>&gt; <q>yes, in many cases it is</q></li>
<li class="message">[<a href="#T22:58:52" id="T22:58:52"><abbr title="2008-10-12T22:58:52+00:00">22:58:52</abbr></a>] &lt;<cite>felipec</cite>&gt; <q>anyway, time to go to sleep... good night</q></li>
<li class="quit">[<a href="#T22:58:59" id="T22:58:59"><abbr title="2008-10-12T22:58:59+00:00">22:58:59</abbr></a>] <span>* felipec (n=felipec@a88-113-6-167.elisa-laajakaista.fi) Quit ("Leaving")</span></li>
