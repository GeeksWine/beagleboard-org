<li class="quit">[<a href="#T00:03:37" id="T00:03:37"><abbr title="2012-05-28T00:03:37+00:00">00:03:37</abbr></a>] <span>* rbarris (~rbarris@cpe-76-167-205-112.socal.res.rr.com) Quit (Quit: rbarris)</span></li>
<li class="join">[<a href="#T00:04:27" id="T00:04:27"><abbr title="2012-05-28T00:04:27+00:00">00:04:27</abbr></a>] <span>* javaJake (~javaJake@unaffiliated/javajake) has joined #beagle</span></li>
<li class="join">[<a href="#T00:04:53" id="T00:04:53"><abbr title="2012-05-28T00:04:53+00:00">00:04:53</abbr></a>] <span>* pastjean (~pastjean@c207.134.175-115.clta.globetrotter.net) has joined #beagle</span></li>
<li class="quit">[<a href="#T00:05:16" id="T00:05:16"><abbr title="2012-05-28T00:05:16+00:00">00:05:16</abbr></a>] <span>* javaJake (~javaJake@unaffiliated/javajake) Quit (Client Quit)</span></li>
<li class="message">[<a href="#T00:06:10" id="T00:06:10"><abbr title="2012-05-28T00:06:10+00:00">00:06:10</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>This is very strange, after booting Angstrom-Cloud9-IDE-GNOME-eglibc-ipk-v2012.05-beaglebone-2012.05.24.img.xz I don't have an /etc/network directory.  Also, no /etc/network/interfaces</q></li>
<li class="join">[<a href="#T00:06:21" id="T00:06:21"><abbr title="2012-05-28T00:06:21+00:00">00:06:21</abbr></a>] <span>* javaJake (~javaJake@unaffiliated/javajake) has joined #beagle</span></li>
<li class="message">[<a href="#T00:06:28" id="T00:06:28"><abbr title="2012-05-28T00:06:28+00:00">00:06:28</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>...yet if I do an "opkg files netbase" it shows those should be present</q></li>
<li class="action">[<a href="#T00:20:18" id="T00:20:18"><abbr title="2012-05-28T00:20:18+00:00">00:20:18</abbr></a>] <span>* fiola chuckles</span></li>
<li class="message">[<a href="#T00:21:55" id="T00:21:55"><abbr title="2012-05-28T00:21:55+00:00">00:21:55</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>I only just got my BeagleBone (and love it).  But yeah, the state of Amgstrom config/startup is bizzare.  Maybe needs a few people to sort it out committee-style.</q></li>
<li class="message">[<a href="#T00:22:56" id="T00:22:56"><abbr title="2012-05-28T00:22:56+00:00">00:22:56</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>Or throw the whole thing out and put in OpenRC.</q></li>
<li class="message">[<a href="#T00:29:51" id="T00:29:51"><abbr title="2012-05-28T00:29:51+00:00">00:29:51</abbr></a>] &lt;<cite>prp_afk</cite>&gt; <q>fiola: OMG, you did not just say committee-style</q></li>
<li class="action">[<a href="#T00:30:04" id="T00:30:04"><abbr title="2012-05-28T00:30:04+00:00">00:30:04</abbr></a>] <span>* prp_afk makes that quote of the year</span></li>
<li class="join">[<a href="#T00:30:12" id="T00:30:12"><abbr title="2012-05-28T00:30:12+00:00">00:30:12</abbr></a>] <span>* kiilo (~kiilo@modemcable096.222-163-184.mc.videotron.ca) has joined #beagle</span></li>
<li class="join">[<a href="#T00:31:41" id="T00:31:41"><abbr title="2012-05-28T00:31:41+00:00">00:31:41</abbr></a>] <span>* Ceriand|desktop (~Ceriand@unaffiliated/ceriand) has joined #beagle</span></li>
<li class="quit">[<a href="#T00:33:04" id="T00:33:04"><abbr title="2012-05-28T00:33:04+00:00">00:33:04</abbr></a>] <span>* pfefferz (~pfefferz@118.143.64.134) Quit (Ping timeout: 245 seconds)</span></li>
<li class="message">[<a href="#T00:33:26" id="T00:33:26"><abbr title="2012-05-28T00:33:26+00:00">00:33:26</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>prp_afk: I did, with heart in mouth :DDDDDDD</q></li>
<li class="message">[<a href="#T00:34:56" id="T00:34:56"><abbr title="2012-05-28T00:34:56+00:00">00:34:56</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>I know it's usually a recipe for square wheels.  But sometimes individuals doing things just get it all wrong, because "it works for them".  A distro affects a lot of people, and more than one cook may be beneficial.</q></li>
<li class="message">[<a href="#T00:36:14" id="T00:36:14"><abbr title="2012-05-28T00:36:14+00:00">00:36:14</abbr></a>] &lt;<cite>thurbad</cite>&gt; <q>koen's motto is generally "patches welcome"... if you think something's broken offer a solution</q></li>
<li class="message">[<a href="#T00:38:36" id="T00:38:36"><abbr title="2012-05-28T00:38:36+00:00">00:38:36</abbr></a>] &lt;<cite>mranostay</cite>&gt; <q>prp_afk: it is only May</q></li>
<li class="message">[<a href="#T00:41:38" id="T00:41:38"><abbr title="2012-05-28T00:41:38+00:00">00:41:38</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>It's going to be a great year for open source in UK.  Reason is that anyone moderately sane will stay out of the public frenzy of the Olympics, and actually get some work done. :P</q></li>
<li class="join">[<a href="#T00:46:03" id="T00:46:03"><abbr title="2012-05-28T00:46:03+00:00">00:46:03</abbr></a>] <span>* peabody124 (~peabody12@128.249.96.21) has joined #beagle</span></li>
<li class="nick-change">[<a href="#T00:50:25" id="T00:50:25"><abbr title="2012-05-28T00:50:25+00:00">00:50:25</abbr></a>] <span>* prp_afk is now known as prpplague</span></li>
<li class="quit">[<a href="#T00:54:56" id="T00:54:56"><abbr title="2012-05-28T00:54:56+00:00">00:54:56</abbr></a>] <span>* mrcan (~mrcan@unaffiliated/mrcan) Quit (Ping timeout: 246 seconds)</span></li>
<li class="join">[<a href="#T00:57:09" id="T00:57:09"><abbr title="2012-05-28T00:57:09+00:00">00:57:09</abbr></a>] <span>* pfefferz (~pfefferz@118.143.64.134) has joined #beagle</span></li>
<li class="message">[<a href="#T00:58:15" id="T00:58:15"><abbr title="2012-05-28T00:58:15+00:00">00:58:15</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>"Patches welcome" isn't a replacement for people talking to each other.  Unless the patch contains a huge documentation spiel about what's intended, it's prolly not going to help, as people will be pulling in opposite directions.  It may even get rejected because people not on same wavelength.  Talking is good.</q></li>
<li class="quit">[<a href="#T00:58:40" id="T00:58:40"><abbr title="2012-05-28T00:58:40+00:00">00:58:40</abbr></a>] <span>* Openfree` (~Openfreer@116.228.88.131) Quit (Remote host closed the connection)</span></li>
<li class="join">[<a href="#T01:00:42" id="T01:00:42"><abbr title="2012-05-28T01:00:42+00:00">01:00:42</abbr></a>] <span>* Openfree` (~Openfreer@116.228.88.131) has joined #beagle</span></li>
<li class="message">[<a href="#T01:00:57" id="T01:00:57"><abbr title="2012-05-28T01:00:57+00:00">01:00:57</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>My biggest problem with Angstrom at the moment is just how long it takes to compile everything</q></li>
<li class="message">[<a href="#T01:01:34" id="T01:01:34"><abbr title="2012-05-28T01:01:34+00:00">01:01:34</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>Even after I've compiled cloud9-image I can make a tiny modification to a single package and it will still take an hour and a half to re-compile it when all it really needs to do is repackage the ipk in question and make a new tarball</q></li>
<li class="message">[<a href="#T01:02:30" id="T01:02:30"><abbr title="2012-05-28T01:02:30+00:00">01:02:30</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>When I was working on OpenWRT years ago I could make a new ROM in minutes.  Then again, those were only a few megabytes in size.  Not 400+</q></li>
<li class="message">[<a href="#T01:04:52" id="T01:04:52"><abbr title="2012-05-28T01:04:52+00:00">01:04:52</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>ARM isn't really a native dev environment currently, unless you're OK with going back 10 years, as CPUs are too slow.  Sure it works ... but it's only acceptable under limited circumstances.  There isn't really a solution to that at present.</q></li>
<li class="message">[<a href="#T01:04:59" id="T01:04:59"><abbr title="2012-05-28T01:04:59+00:00">01:04:59</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>...but if I'm building, say, a custom Ubuntu bootable disk image that only takes a few minutes.  The same is true if I'm building a CentOS image.  I don't know what the hell takes it so long.  It just sits there eating up 5-20% of my CPU and very little RAM for over an hour and the end result is a 400+MB image.  Thats much smaller than some CentOS images I've made in the past</q></li>
<li class="quit">[<a href="#T01:05:01" id="T01:05:01"><abbr title="2012-05-28T01:05:01+00:00">01:05:01</abbr></a>] <span>* pfefferz (~pfefferz@118.143.64.134) Quit (Ping timeout: 252 seconds)</span></li>
<li class="message">[<a href="#T01:05:48" id="T01:05:48"><abbr title="2012-05-28T01:05:48+00:00">01:05:48</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>Even if I modify an ipk that requires absolutely no compilation it takes over an hour on a quad core box with 4GB of RAM that is otherwise doing nothing</q></li>
<li class="message">[<a href="#T01:06:05" id="T01:06:05"><abbr title="2012-05-28T01:06:05+00:00">01:06:05</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>That is after I've already compiled the entire image</q></li>
<li class="message">[<a href="#T01:06:27" id="T01:06:27"><abbr title="2012-05-28T01:06:27+00:00">01:06:27</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>Oh, that sounds worse than just slow.  That sounds faulty.</q></li>
<li class="message">[<a href="#T01:07:01" id="T01:07:01"><abbr title="2012-05-28T01:07:01+00:00">01:07:01</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>It isn't like it has to go through "task 2000 of 3488" all over again.  All it should have to do is make the new ipk, copy it to the rootfs, and re-tarball everything up.  Why does that take over an hour?  Makes no sense to me</q></li>
<li class="message">[<a href="#T01:09:04" id="T01:09:04"><abbr title="2012-05-28T01:09:04+00:00">01:09:04</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>I guess the only way forward there, other than waiting 5 years, is to join the gcc ARM group and help sort out the issues.</q></li>
<li class="message">[<a href="#T01:09:32" id="T01:09:32"><abbr title="2012-05-28T01:09:32+00:00">01:09:32</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>fiola: I don't think the problem has anything at all to do with gcc or compiling</q></li>
<li class="message">[<a href="#T01:09:40" id="T01:09:40"><abbr title="2012-05-28T01:09:40+00:00">01:09:40</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>Oh?</q></li>
<li class="message">[<a href="#T01:09:41" id="T01:09:41"><abbr title="2012-05-28T01:09:41+00:00">01:09:41</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>I think it has to do with bitbake</q></li>
<li class="message">[<a href="#T01:09:47" id="T01:09:47"><abbr title="2012-05-28T01:09:47+00:00">01:09:47</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>Hmmm</q></li>
<li class="message">[<a href="#T01:10:30" id="T01:10:30"><abbr title="2012-05-28T01:10:30+00:00">01:10:30</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>Like I said, even if I modify a single ipk that only copies a few files (no compiling) it still takes an hour and a half to create a rootfs tarball</q></li>
<li class="message">[<a href="#T01:10:42" id="T01:10:42"><abbr title="2012-05-28T01:10:42+00:00">01:10:42</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>Well if so, that's a lot better than if it had to do with compilers.</q></li>
<li class="message">[<a href="#T01:11:28" id="T01:11:28"><abbr title="2012-05-28T01:11:28+00:00">01:11:28</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>The compiling process takes a long time, sure, but you only have to do that once per package.  The thing you have to do CONSTANTLY is make new images (if you want to test things properly anyway)</q></li>
<li class="join">[<a href="#T01:11:39" id="T01:11:39"><abbr title="2012-05-28T01:11:39+00:00">01:11:39</abbr></a>] <span>* rsalveti (~rsalveti@177.133.172.163) has joined #beagle</span></li>
<li class="quit">[<a href="#T01:11:40" id="T01:11:40"><abbr title="2012-05-28T01:11:40+00:00">01:11:40</abbr></a>] <span>* rsalveti (~rsalveti@177.133.172.163) Quit (Changing host)</span></li>
<li class="join">[<abbr title="2012-05-28T01:11:40+00:00">01:11:40</abbr>] <span>* rsalveti (~rsalveti@linaro/rsalveti) has joined #beagle</span></li>
<li class="message">[<a href="#T01:13:24" id="T01:13:24"><abbr title="2012-05-28T01:13:24+00:00">01:13:24</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>I'm also curious why we're messing around with opkg on a device that ships by default with a 4GB storage device</q></li>
<li class="message">[<a href="#T01:14:03" id="T01:14:03"><abbr title="2012-05-28T01:14:03+00:00">01:14:03</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>The point of opkg is to save space at the expense of features.  If you have plenty of space there's no reason not to use dpkg</q></li>
<li class="message">[<a href="#T01:14:19" id="T01:14:19"><abbr title="2012-05-28T01:14:19+00:00">01:14:19</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>(in conjunction with apt)</q></li>
<li class="message">[<a href="#T01:14:22" id="T01:14:22"><abbr title="2012-05-28T01:14:22+00:00">01:14:22</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>Well making new images is just linking, once you know what you need to link.  Are you saying that bitbake's finding out "what you need to link" is totally screwed, or that the linking has a problem?</q></li>
<li class="message">[<a href="#T01:14:41" id="T01:14:41"><abbr title="2012-05-28T01:14:41+00:00">01:14:41</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>fiola: Why would it need to link anything at all?</q></li>
<li class="message">[<a href="#T01:15:06" id="T01:15:06"><abbr title="2012-05-28T01:15:06+00:00">01:15:06</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>That's what making images is, linking.</q></li>
<li class="message">[<a href="#T01:15:09" id="T01:15:09"><abbr title="2012-05-28T01:15:09+00:00">01:15:09</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>If all I'm doing is updating a single ipk it shouldn't have to re-link anything</q></li>
<li class="message">[<a href="#T01:15:26" id="T01:15:26"><abbr title="2012-05-28T01:15:26+00:00">01:15:26</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>The entire rootfs is in the build dir</q></li>
<li class="message">[<a href="#T01:15:37" id="T01:15:37"><abbr title="2012-05-28T01:15:37+00:00">01:15:37</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>Just make the ipk, unpack it to the rootfs dir, and make the new tarball/squasfs/whatever</q></li>
<li class="message">[<a href="#T01:16:07" id="T01:16:07"><abbr title="2012-05-28T01:16:07+00:00">01:16:07</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>No need to link anything unless you're re-compiling something and even then you should only have to re-link just that package</q></li>
<li class="message">[<a href="#T01:17:23" id="T01:17:23"><abbr title="2012-05-28T01:17:23+00:00">01:17:23</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>So what's taking the time?</q></li>
<li class="message">[<a href="#T01:18:16" id="T01:18:16"><abbr title="2012-05-28T01:18:16+00:00">01:18:16</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>It seems to start with an opkg-&lt;something&gt; command and then pseudo runs the longest</q></li>
<li class="join">[<a href="#T01:18:18" id="T01:18:18"><abbr title="2012-05-28T01:18:18+00:00">01:18:18</abbr></a>] <span>* pfefferz (~pfefferz@118.143.64.134) has joined #beagle</span></li>
<li class="message">[<a href="#T01:18:29" id="T01:18:29"><abbr title="2012-05-28T01:18:29+00:00">01:18:29</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>Why it is messing around with pseudo I have no idea</q></li>
<li class="message">[<a href="#T01:18:37" id="T01:18:37"><abbr title="2012-05-28T01:18:37+00:00">01:18:37</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>I didn't change anything that would require that</q></li>
<li class="message">[<a href="#T01:18:41" id="T01:18:41"><abbr title="2012-05-28T01:18:41+00:00">01:18:41</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>strace is your friend</q></li>
<li class="join">[<a href="#T01:20:46" id="T01:20:46"><abbr title="2012-05-28T01:20:46+00:00">01:20:46</abbr></a>] <span>* mikey_w (~mike@c-71-63-115-202.hsd1.va.comcast.net) has joined #beagle</span></li>
<li class="message">[<a href="#T01:20:52" id="T01:20:52"><abbr title="2012-05-28T01:20:52+00:00">01:20:52</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>There should be a standard FOSS flag "--WTFyoudoin" that engages an "strace STUFF | grep open" on an operation :P</q></li>
<li class="join">[<a href="#T01:20:59" id="T01:20:59"><abbr title="2012-05-28T01:20:59+00:00">01:20:59</abbr></a>] <span>* mike_ (~mike@c-71-63-115-202.hsd1.va.comcast.net) has joined #beagle</span></li>
<li class="nick-change">[<a href="#T01:21:25" id="T01:21:25"><abbr title="2012-05-28T01:21:25+00:00">01:21:25</abbr></a>] <span>* mike_ is now known as Guest96320</span></li>
<li class="message">[<a href="#T01:23:14" id="T01:23:14"><abbr title="2012-05-28T01:23:14+00:00">01:23:14</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>I think I'm going to walk my way backwards in the dependency chain of images to see which one is invoking psuedo at all</q></li>
<li class="message">[<a href="#T01:26:14" id="T01:26:14"><abbr title="2012-05-28T01:26:14+00:00">01:26:14</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>This takes so long I think I'm just going to make opkg files and skip all the image stuff</q></li>
<li class="message">[<a href="#T01:28:09" id="T01:28:09"><abbr title="2012-05-28T01:28:09+00:00">01:28:09</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>I come from the Gentoo school of thought, so images are kind of academic.  Kind of sad though that ARM is so slow currently.</q></li>
<li class="message">[<a href="#T01:28:53" id="T01:28:53"><abbr title="2012-05-28T01:28:53+00:00">01:28:53</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>I think it's just a matter of cache.  ARM never really got into the cache game, probably because of power consumption.</q></li>
<li class="message">[<a href="#T01:29:40" id="T01:29:40"><abbr title="2012-05-28T01:29:40+00:00">01:29:40</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>uh?</q></li>
<li class="message">[<a href="#T01:31:27" id="T01:31:27"><abbr title="2012-05-28T01:31:27+00:00">01:31:27</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>Gentoo is a big part of my past as well.  More of an Ubuntu guy these days but I could certainly see how using Gentoo would be superior for making packaged distributions for embedded use</q></li>
<li class="message">[<a href="#T01:33:41" id="T01:33:41"><abbr title="2012-05-28T01:33:41+00:00">01:33:41</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>_troll: effective CPU caches consume a lot of power.  When you run at many times the speed of external memory, you generally consume many time more current too.</q></li>
<li class="message">[<a href="#T01:35:16" id="T01:35:16"><abbr title="2012-05-28T01:35:16+00:00">01:35:16</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>riskable: Yeah, but only in theory.  In practice Gentoo uses a "look at everything" approach which doesn't scale well, so updates take ages even on powerful x86 equipment.  On ARM ... ouch.</q></li>
<li class="message">[<a href="#T01:35:44" id="T01:35:44"><abbr title="2012-05-28T01:35:44+00:00">01:35:44</abbr></a>] &lt;<cite>javaJake</cite>&gt; <q>fiola: what do you mean by "look at everything" approach?</q></li>
<li class="action">[<a href="#T01:36:04" id="T01:36:04"><abbr title="2012-05-28T01:36:04+00:00">01:36:04</abbr></a>] <span>* javaJake happens to be a Gentoo user on both ARM and amd64, fwiw</span></li>
<li class="message">[<a href="#T01:38:03" id="T01:38:03"><abbr title="2012-05-28T01:38:03+00:00">01:38:03</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>javaJake: updates look at the entire dependency graph.  Gentoo has no ability to install upgrades without breaking previous dependents, except in the few cases where packages are slotted.</q></li>
<li class="message">[<a href="#T01:38:05" id="T01:38:05"><abbr title="2012-05-28T01:38:05+00:00">01:38:05</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>It has been a long time since I've done anything with Gentoo.  Last time I did anything with it at all was "Gentoo in a chroot" on a different distro just so I could get a customized version of apache running with a newer version of openssl on some ancient RHEL install</q></li>
<li class="quit">[<a href="#T01:38:08" id="T01:38:08"><abbr title="2012-05-28T01:38:08+00:00">01:38:08</abbr></a>] <span>* peabody124 (~peabody12@128.249.96.21) Quit (Ping timeout: 240 seconds)</span></li>
<li class="message">[<a href="#T01:39:20" id="T01:39:20"><abbr title="2012-05-28T01:39:20+00:00">01:39:20</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>A scalable "Gentoo-NG" would slot everything automatically, so when you emerge an update, you NEVER break anything.  Revdep-rebuild would only be an optimization.  Gentoo is nowhere near to that currently.</q></li>
<li class="message">[<a href="#T01:39:53" id="T01:39:53"><abbr title="2012-05-28T01:39:53+00:00">01:39:53</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>fiola: Is that even in the works?!?</q></li>
<li class="message">[<a href="#T01:39:55" id="T01:39:55"><abbr title="2012-05-28T01:39:55+00:00">01:39:55</abbr></a>] &lt;<cite>javaJake</cite>&gt; <q>fiola: this bug aims to fix the "breaking previous dependents" issue :) <a href="https://bugs.gentoo.org/327809">https://bugs.gentoo.org/327809</a></q></li>
<li class="message">[<a href="#T01:40:13" id="T01:40:13"><abbr title="2012-05-28T01:40:13+00:00">01:40:13</abbr></a>] &lt;<cite>javaJake</cite>&gt; <q>what you're talking about is in the works</q></li>
<li class="message">[<a href="#T01:40:21" id="T01:40:21"><abbr title="2012-05-28T01:40:21+00:00">01:40:21</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>Wow!</q></li>
<li class="message">[<a href="#T01:40:29" id="T01:40:29"><abbr title="2012-05-28T01:40:29+00:00">01:40:29</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>The old way of getting around that problem was to compile everything statically :)</q></li>
<li class="join">[<a href="#T01:40:35" id="T01:40:35"><abbr title="2012-05-28T01:40:35+00:00">01:40:35</abbr></a>] <span>* guanucoluis1 (~luis@200.127.24.218) has joined #beagle</span></li>
<li class="part">[<a href="#T01:40:45" id="T01:40:45"><abbr title="2012-05-28T01:40:45+00:00">01:40:45</abbr></a>] <span>* guanucoluis1 (~luis@200.127.24.218) has left #beagle</span></li>
<li class="message">[<a href="#T01:41:09" id="T01:41:09"><abbr title="2012-05-28T01:41:09+00:00">01:41:09</abbr></a>] &lt;<cite>javaJake</cite>&gt; <q>fiola: There's also currently preserved-rebuild which is a workaround that keeps old libraries around until they're no longer needed</q></li>
<li class="message">[<a href="#T01:41:54" id="T01:41:54"><abbr title="2012-05-28T01:41:54+00:00">01:41:54</abbr></a>] &lt;<cite>javaJake</cite>&gt; <q>Lastly, those breaks happen a *lot* less than they used to because --as-needed (sp?) is now turned on by default in CFLAGS.</q></li>
<li class="message">[<a href="#T01:42:01" id="T01:42:01"><abbr title="2012-05-28T01:42:01+00:00">01:42:01</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>javaJake: thanks for that link.  Would be awesome if Gentoo became scalable that way.</q></li>
<li class="message">[<a href="#T01:43:11" id="T01:43:11"><abbr title="2012-05-28T01:43:11+00:00">01:43:11</abbr></a>] &lt;<cite>javaJake</cite>&gt; <q>fiola: agreed</q></li>
<li class="message">[<a href="#T01:43:17" id="T01:43:17"><abbr title="2012-05-28T01:43:17+00:00">01:43:17</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>Basically any upgrade that makes something else break is a total fail.  We've lived with it for years, but .... it's a fail./</q></li>
<li class="join">[<a href="#T01:44:42" id="T01:44:42"><abbr title="2012-05-28T01:44:42+00:00">01:44:42</abbr></a>] <span>* jkridner_ (~jason@pdpc/supporter/active/jkridner) has joined #beagle</span></li>
<li class="quit">[<a href="#T01:46:02" id="T01:46:02"><abbr title="2012-05-28T01:46:02+00:00">01:46:02</abbr></a>] <span>* djerome (~djerome@ip68-2-20-108.ph.ph.cox.net) Quit (Remote host closed the connection)</span></li>
<li class="message">[<a href="#T01:46:04" id="T01:46:04"><abbr title="2012-05-28T01:46:04+00:00">01:46:04</abbr></a>] &lt;<cite>javaJake</cite>&gt; <q>fiola: it's the price you pay for rolling updates. If you use a distro with a release cycle like Ubuntu, you solve that linking issue by doing a total OS upgrade.</q></li>
<li class="quit">[<a href="#T01:46:46" id="T01:46:46"><abbr title="2012-05-28T01:46:46+00:00">01:46:46</abbr></a>] <span>* panto (~panto@118.143.64.130) Quit (Quit: This computer has gone to sleep)</span></li>
<li class="quit">[<a href="#T01:47:01" id="T01:47:01"><abbr title="2012-05-28T01:47:01+00:00">01:47:01</abbr></a>] <span>* pfefferz (~pfefferz@118.143.64.134) Quit (Ping timeout: 248 seconds)</span></li>
<li class="quit">[<a href="#T01:49:25" id="T01:49:25"><abbr title="2012-05-28T01:49:25+00:00">01:49:25</abbr></a>] <span>* pastjean (~pastjean@c207.134.175-115.clta.globetrotter.net) Quit (Remote host closed the connection)</span></li>
<li class="message">[<a href="#T01:50:30" id="T01:50:30"><abbr title="2012-05-28T01:50:30+00:00">01:50:30</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>javaJake: Yeah, but ignoring the Ubuntu-type "big bang" approach which we reject anyway because it's tantamount to "We know what you want and don't argue with us", we can have Gentoo-type flexibility as long as we don't pull the carpet out from other packages that are our dependents.  Ok  it requires more disk space to hold old versions around, and filestore organization to allow it, but disks are cheap.  It can be done :-))))</q></li>
<li class="message">[<a href="#T01:50:36" id="T01:50:36"><abbr title="2012-05-28T01:50:36+00:00">01:50:36</abbr></a>] &lt;<cite>riskable</cite>&gt; <q>Speaking of Ubuntu...  I just loaded the 12.04 arm image on my Beaglebone and it booted up OK but it seems to have hung when I tried to login as root</q></li>
<li class="message">[<a href="#T01:53:59" id="T01:53:59"><abbr title="2012-05-28T01:53:59+00:00">01:53:59</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>javaJake: and once it's done, Gentoo will be just as usable on ARM as on fast x86, because you won't ever need to upgrade anything unless you absolutely demand the new functionality.</q></li>
<li class="quit">[<a href="#T01:55:23" id="T01:55:23"><abbr title="2012-05-28T01:55:23+00:00">01:55:23</abbr></a>] <span>* jkridner_ (~jason@pdpc/supporter/active/jkridner) Quit (Quit: jkridner_)</span></li>
<li class="join">[<a href="#T01:56:57" id="T01:56:57"><abbr title="2012-05-28T01:56:57+00:00">01:56:57</abbr></a>] <span>* panto (~panto@118.143.64.134) has joined #beagle</span></li>
<li class="join">[<a href="#T01:58:33" id="T01:58:33"><abbr title="2012-05-28T01:58:33+00:00">01:58:33</abbr></a>] <span>* djerome (~djerome@ip68-2-20-108.ph.ph.cox.net) has joined #beagle</span></li>
<li class="join">[<a href="#T02:01:53" id="T02:01:53"><abbr title="2012-05-28T02:01:53+00:00">02:01:53</abbr></a>] <span>* jvcleave_ (~jvcleave@74.83.250.220) has joined #beagle</span></li>
<li class="join">[<a href="#T02:02:03" id="T02:02:03"><abbr title="2012-05-28T02:02:03+00:00">02:02:03</abbr></a>] <span>* Guest18095 (~bleh1@92.39.200.208) has joined #beagle</span></li>
<li class="quit">[<a href="#T02:03:12" id="T02:03:12"><abbr title="2012-05-28T02:03:12+00:00">02:03:12</abbr></a>] <span>* jvcleave (~jvcleave@74.83.250.220) Quit (Read error: Operation timed out)</span></li>
<li class="nick-change">[<abbr title="2012-05-28T02:03:12+00:00">02:03:12</abbr>] <span>* jvcleave_ is now known as jvcleave</span></li>
<li class="join">[<a href="#T02:03:17" id="T02:03:17"><abbr title="2012-05-28T02:03:17+00:00">02:03:17</abbr></a>] <span>* pfefferz (~pfefferz@118.143.64.134) has joined #beagle</span></li>
<li class="quit">[<a href="#T02:08:04" id="T02:08:04"><abbr title="2012-05-28T02:08:04+00:00">02:08:04</abbr></a>] <span>* Guest18095 (~bleh1@92.39.200.208) Quit (Ping timeout: 245 seconds)</span></li>
<li class="message">[<a href="#T02:19:32" id="T02:19:32"><abbr title="2012-05-28T02:19:32+00:00">02:19:32</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>fiola: I know what caches are, just don't understand your comment about arm not being "in the game"</q></li>
<li class="message">[<a href="#T02:19:53" id="T02:19:53"><abbr title="2012-05-28T02:19:53+00:00">02:19:53</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>omap4 has 1MB L2</q></li>
<li class="quit">[<a href="#T02:29:40" id="T02:29:40"><abbr title="2012-05-28T02:29:40+00:00">02:29:40</abbr></a>] <span>* djerome (~djerome@ip68-2-20-108.ph.ph.cox.net) Quit (Ping timeout: 250 seconds)</span></li>
<li class="message">[<a href="#T02:33:23" id="T02:33:23"><abbr title="2012-05-28T02:33:23+00:00">02:33:23</abbr></a>] &lt;<cite>javaJake</cite>&gt; <q>fiola: well currently Gentoo portage does keep old libraries around in @preserved-rebuild such as libpng</q></li>
<li class="join">[<a href="#T02:35:23" id="T02:35:23"><abbr title="2012-05-28T02:35:23+00:00">02:35:23</abbr></a>] <span>* inavat (~inavat@205.178.117.190) has joined #beagle</span></li>
<li class="join">[<a href="#T02:37:58" id="T02:37:58"><abbr title="2012-05-28T02:37:58+00:00">02:37:58</abbr></a>] <span>* rbarris (~rbarris@cpe-76-167-205-112.socal.res.rr.com) has joined #beagle</span></li>
<li class="quit">[<a href="#T02:38:59" id="T02:38:59"><abbr title="2012-05-28T02:38:59+00:00">02:38:59</abbr></a>] <span>* panto (~panto@118.143.64.134) Quit (Quit: This computer has gone to sleep)</span></li>
<li class="quit">[<a href="#T02:39:46" id="T02:39:46"><abbr title="2012-05-28T02:39:46+00:00">02:39:46</abbr></a>] <span>* riskable (~quassel@c-69-180-64-152.hsd1.fl.comcast.net) Quit (Ping timeout: 244 seconds)</span></li>
<li class="quit">[<a href="#T02:41:08" id="T02:41:08"><abbr title="2012-05-28T02:41:08+00:00">02:41:08</abbr></a>] <span>* diablorosso_ (~xweber@p5B2D0547.dip0.t-ipconnect.de) Quit (Ping timeout: 240 seconds)</span></li>
<li class="join">[<a href="#T02:41:21" id="T02:41:21"><abbr title="2012-05-28T02:41:21+00:00">02:41:21</abbr></a>] <span>* peabody124 (~peabody12@c-98-201-56-63.hsd1.tx.comcast.net) has joined #beagle</span></li>
<li class="message">[<a href="#T02:41:57" id="T02:41:57"><abbr title="2012-05-28T02:41:57+00:00">02:41:57</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>_troll: A modern 1.5GHz ARM wouldn't *on pure clock speed* be an order of magnitude slower than x86 if everything else were equal (indeed, Thumb2 may be even more efficient than x86 on instruction density).  So I assume cache memory speed plays a large role in keeping ARM slower by far.  And it seems a reasonable guess because faster memory certainly consumes more power.</q></li>
<li class="quit">[<a href="#T02:42:24" id="T02:42:24"><abbr title="2012-05-28T02:42:24+00:00">02:42:24</abbr></a>] <span>* kiilo (~kiilo@modemcable096.222-163-184.mc.videotron.ca) Quit (Quit: ciao)</span></li>
<li class="message">[<a href="#T02:42:55" id="T02:42:55"><abbr title="2012-05-28T02:42:55+00:00">02:42:55</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>And ARM Holdings aren't happy with using a lot of power.  It would make their niche disappear.</q></li>
<li class="message">[<a href="#T02:47:17" id="T02:47:17"><abbr title="2012-05-28T02:47:17+00:00">02:47:17</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>fiola: cache is not the big difference here</q></li>
<li class="message">[<a href="#T02:47:33" id="T02:47:33"><abbr title="2012-05-28T02:47:33+00:00">02:47:33</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>sure, an i7 has a few more MB of cache</q></li>
<li class="message">[<a href="#T02:47:46" id="T02:47:46"><abbr title="2012-05-28T02:47:46+00:00">02:47:46</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>but the huge difference is external memory bandwidth</q></li>
<li class="message">[<a href="#T02:48:21" id="T02:48:21"><abbr title="2012-05-28T02:48:21+00:00">02:48:21</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>a typical intel system has 2-4 channels ddr3</q></li>
<li class="message">[<a href="#T02:49:30" id="T02:49:30"><abbr title="2012-05-28T02:49:30+00:00">02:49:30</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>Any DDR3 ARM systems we can compare with?</q></li>
<li class="message">[<a href="#T02:50:06" id="T02:50:06"><abbr title="2012-05-28T02:50:06+00:00">02:50:06</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>and on the microarchitecture side, an i7 has more execution units and more aggressive out of order execution than current arm chips</q></li>
<li class="join">[<a href="#T02:50:18" id="T02:50:18"><abbr title="2012-05-28T02:50:18+00:00">02:50:18</abbr></a>] <span>* bhthompson (~bhthompso@c-98-234-177-179.hsd1.ca.comcast.net) has joined #beagle</span></li>
<li class="message">[<a href="#T02:50:23" id="T02:50:23"><abbr title="2012-05-28T02:50:23+00:00">02:50:23</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>cortex-a15 goes some way towards narrowing that gap</q></li>
<li class="message">[<a href="#T02:51:07" id="T02:51:07"><abbr title="2012-05-28T02:51:07+00:00">02:51:07</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>In any case, I think you're wrong there.  Cache is everything, not external memory.  CPUs run much faster than external memory would allow, using cache locality which is very successful for most common problems.</q></li>
<li class="message">[<a href="#T02:51:59" id="T02:51:59"><abbr title="2012-05-28T02:51:59+00:00">02:51:59</abbr></a>] &lt;<cite>javaJake</cite>&gt; <q>Is it a combination of both?</q></li>
<li class="message">[<a href="#T02:52:01" id="T02:52:01"><abbr title="2012-05-28T02:52:01+00:00">02:52:01</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>It's even a big thing in computational libs to exploit cache locality to the full.  The Julia sets lib comes to mind, good writeup there.</q></li>
<li class="message">[<a href="#T02:52:03" id="T02:52:03"><abbr title="2012-05-28T02:52:03+00:00">02:52:03</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>ever heard of cache misses?</q></li>
<li class="message">[<a href="#T02:52:20" id="T02:52:20"><abbr title="2012-05-28T02:52:20+00:00">02:52:20</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>It's a comination, sure, but the cache rules.  It's a multiplier.</q></li>
<li class="message">[<a href="#T02:52:21" id="T02:52:21"><abbr title="2012-05-28T02:52:21+00:00">02:52:21</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>what good will a cache do you if you are unable to fill it?</q></li>
<li class="message">[<a href="#T02:52:25" id="T02:52:25"><abbr title="2012-05-28T02:52:25+00:00">02:52:25</abbr></a>] &lt;<cite>javaJake</cite>&gt; <q>_troll_: it's hard to take you seriously with that nick btw :)</q></li>
<li class="message">[<a href="#T02:53:07" id="T02:53:07"><abbr title="2012-05-28T02:53:07+00:00">02:53:07</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>_troll: That's the whole idea of caching.  You minimize your cache misses so that your cache rules the day.  If you have a hotshot cache, but a lot of cache misses, you fail.</q></li>
<li class="message">[<a href="#T02:53:16" id="T02:53:16"><abbr title="2012-05-28T02:53:16+00:00">02:53:16</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>I know how caches work</q></li>
<li class="message">[<a href="#T02:53:21" id="T02:53:21"><abbr title="2012-05-28T02:53:21+00:00">02:53:21</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>no need to lecture me</q></li>
<li class="message">[<a href="#T02:53:36" id="T02:53:36"><abbr title="2012-05-28T02:53:36+00:00">02:53:36</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>Well if you know, why dwell on cache not being important?</q></li>
<li class="message">[<a href="#T02:53:50" id="T02:53:50"><abbr title="2012-05-28T02:53:50+00:00">02:53:50</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>and yes, caches matter, but it's only one part of the system</q></li>
<li class="message">[<a href="#T02:53:51" id="T02:53:51"><abbr title="2012-05-28T02:53:51+00:00">02:53:51</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>Unless you're doing it to justify your nick</q></li>
<li class="message">[<a href="#T02:54:20" id="T02:54:20"><abbr title="2012-05-28T02:54:20+00:00">02:54:20</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>the working set is frequently much larger than any practical cache</q></li>
<li class="message">[<a href="#T02:54:36" id="T02:54:36"><abbr title="2012-05-28T02:54:36+00:00">02:54:36</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>and in those cases memory bandwidth becomes very important</q></li>
<li class="message">[<a href="#T02:54:50" id="T02:54:50"><abbr title="2012-05-28T02:54:50+00:00">02:54:50</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>When the working set is large than what fits in the cache, you fail.  Bad program or library  design.</q></li>
<li class="message">[<a href="#T02:54:57" id="T02:54:57"><abbr title="2012-05-28T02:54:57+00:00">02:54:57</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>l;arger*</q></li>
<li class="message">[<a href="#T02:55:06" id="T02:55:06"><abbr title="2012-05-28T02:55:06+00:00">02:55:06</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>you have a very narrowminded view</q></li>
<li class="join">[<a href="#T02:55:17" id="T02:55:17"><abbr title="2012-05-28T02:55:17+00:00">02:55:17</abbr></a>] <span>* diablorosso_ (~xweber@p5B2D01CA.dip0.t-ipconnect.de) has joined #beagle</span></li>
<li class="message">[<a href="#T02:55:23" id="T02:55:23"><abbr title="2012-05-28T02:55:23+00:00">02:55:23</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>That's how caching works, sorry if you don;t like it.</q></li>
<li class="message">[<a href="#T02:55:30" id="T02:55:30"><abbr title="2012-05-28T02:55:30+00:00">02:55:30</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>suppose you want to encode 1h of video</q></li>
<li class="message">[<a href="#T02:55:40" id="T02:55:40"><abbr title="2012-05-28T02:55:40+00:00">02:55:40</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>do you know how much raw data that is?</q></li>
<li class="message">[<a href="#T02:55:46" id="T02:55:46"><abbr title="2012-05-28T02:55:46+00:00">02:55:46</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>many, many gigabytes</q></li>
<li class="message">[<a href="#T02:56:17" id="T02:56:17"><abbr title="2012-05-28T02:56:17+00:00">02:56:17</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>even a single frame of HD video is several MB</q></li>
<li class="message">[<a href="#T02:56:18" id="T02:56:18"><abbr title="2012-05-28T02:56:18+00:00">02:56:18</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>Streaming doesn't work with a data cache unless the algorithm reuses what is in the current cached window repeatedly.</q></li>
<li class="message">[<a href="#T02:56:27" id="T02:56:27"><abbr title="2012-05-28T02:56:27+00:00">02:56:27</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>and your working set is at least 3 frames</q></li>
<li class="message">[<a href="#T02:56:50" id="T02:56:50"><abbr title="2012-05-28T02:56:50+00:00">02:56:50</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>no matter what you do, you *will* have cache misses</q></li>
<li class="message">[<a href="#T02:57:30" id="T02:57:30"><abbr title="2012-05-28T02:57:30+00:00">02:57:30</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>Of course you have cache misses.  Cache works does its job when they are infrequent, and fails when they are frequent.  It's simple.</q></li>
<li class="message">[<a href="#T02:58:20" id="T02:58:20"><abbr title="2012-05-28T02:58:20+00:00">02:58:20</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>and when you need to process data orders of magnitude larger than the cache, you will have misses</q></li>
<li class="message">[<a href="#T02:58:48" id="T02:58:48"><abbr title="2012-05-28T02:58:48+00:00">02:58:48</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>of course you should do whatever possible to use the caches as well as possible</q></li>
<li class="message">[<a href="#T02:58:49" id="T02:58:49"><abbr title="2012-05-28T02:58:49+00:00">02:58:49</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>Which is where cache locality comes in.  Most algorithms have high locality, reusing a datum repeatedly.  If your algorithm doesn't, then it will run at external memory speed, and will be slow as heck.</q></li>
<li class="quit">[<a href="#T02:58:53" id="T02:58:53"><abbr title="2012-05-28T02:58:53+00:00">02:58:53</abbr></a>] <span>* pfefferz (~pfefferz@118.143.64.134) Quit (Ping timeout: 256 seconds)</span></li>
<li class="join">[<a href="#T02:59:15" id="T02:59:15"><abbr title="2012-05-28T02:59:15+00:00">02:59:15</abbr></a>] <span>* panto (~panto@118.143.64.130) has joined #beagle</span></li>
<li class="action">[<a href="#T02:59:54" id="T02:59:54"><abbr title="2012-05-28T02:59:54+00:00">02:59:54</abbr></a>] <span>* _troll_ gives up</span></li>
<li class="message">[<a href="#T03:00:09" id="T03:00:09"><abbr title="2012-05-28T03:00:09+00:00">03:00:09</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>some people just refuse to learn</q></li>
<li class="join">[<a href="#T03:00:52" id="T03:00:52"><abbr title="2012-05-28T03:00:52+00:00">03:00:52</abbr></a>] <span>* aholler (~aholler@p57B2093C.dip0.t-ipconnect.de) has joined #beagle</span></li>
<li class="message">[<a href="#T03:01:13" id="T03:01:13"><abbr title="2012-05-28T03:01:13+00:00">03:01:13</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>Yeah, like _troll :-)</q></li>
<li class="quit">[<a href="#T03:01:29" id="T03:01:29"><abbr title="2012-05-28T03:01:29+00:00">03:01:29</abbr></a>] <span>* rbarris (~rbarris@cpe-76-167-205-112.socal.res.rr.com) Quit (Quit: rbarris)</span></li>
<li class="message">[<a href="#T03:01:32" id="T03:01:32"><abbr title="2012-05-28T03:01:32+00:00">03:01:32</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>don't judge people by their nicks</q></li>
<li class="message">[<a href="#T03:02:11" id="T03:02:11"><abbr title="2012-05-28T03:02:11+00:00">03:02:11</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>Take a read of this, if you think that caches don't matter much and external memory speed is king -- <a href="http://judy.sourceforge.net/doc/10minutes.htm">http://judy.sourceforge.net/doc/10minutes.htm</a></q></li>
<li class="message">[<a href="#T03:02:23" id="T03:02:23"><abbr title="2012-05-28T03:02:23+00:00">03:02:23</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>I never said caches don't matter</q></li>
<li class="message">[<a href="#T03:02:38" id="T03:02:38"><abbr title="2012-05-28T03:02:38+00:00">03:02:38</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>I said caches are not the *only* reason intel systems are faster than arm systems</q></li>
<li class="message">[<a href="#T03:02:58" id="T03:02:58"><abbr title="2012-05-28T03:02:58+00:00">03:02:58</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>other reasons being microarchitecture and memory bandwidth</q></li>
<li class="quit">[<a href="#T03:03:48" id="T03:03:48"><abbr title="2012-05-28T03:03:48+00:00">03:03:48</abbr></a>] <span>* panto (~panto@118.143.64.130) Quit (Ping timeout: 245 seconds)</span></li>
<li class="quit">[<a href="#T03:04:32" id="T03:04:32"><abbr title="2012-05-28T03:04:32+00:00">03:04:32</abbr></a>] <span>* aholler_ (~aholler@p57B20E9A.dip0.t-ipconnect.de) Quit (Ping timeout: 265 seconds)</span></li>
<li class="quit">[<a href="#T03:04:56" id="T03:04:56"><abbr title="2012-05-28T03:04:56+00:00">03:04:56</abbr></a>] <span>* Ceriand|desktop (~Ceriand@unaffiliated/ceriand) Quit (Quit: Leaving.)</span></li>
<li class="message">[<a href="#T03:05:22" id="T03:05:22"><abbr title="2012-05-28T03:05:22+00:00">03:05:22</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>Well nobody said they were the *only* reason.  x86 cpu runs much faster than external memory and the cache runs fast enough to deliver data at the speed the cpu requires *most* of the time, that's the point.  And a 1.5GHz ARM cpu should not run an order of magnitude slower than x86 since x86 cpus don't run at 15GHz.  So it's gotta be the cache or the instruction speed, and we know that instruction density isn't too bad on ARM</q></li>
<li class="message">[<abbr title="2012-05-28T03:05:22+00:00">03:05:22</abbr>] &lt;<cite>fiola</cite>&gt; <q>./</q></li>
<li class="join">[<a href="#T03:08:24" id="T03:08:24"><abbr title="2012-05-28T03:08:24+00:00">03:08:24</abbr></a>] <span>* KeatonT (~KeatonT@pool-173-64-212-87.dllstx.fios.verizon.net) has joined #beagle</span></li>
<li class="quit">[<a href="#T03:08:32" id="T03:08:32"><abbr title="2012-05-28T03:08:32+00:00">03:08:32</abbr></a>] <span>* KeatonT (~KeatonT@pool-173-64-212-87.dllstx.fios.verizon.net) Quit (Changing host)</span></li>
<li class="join">[<abbr title="2012-05-28T03:08:32+00:00">03:08:32</abbr>] <span>* KeatonT (~KeatonT@unaffiliated/keatont) has joined #beagle</span></li>
<li class="message">[<a href="#T03:08:53" id="T03:08:53"><abbr title="2012-05-28T03:08:53+00:00">03:08:53</abbr></a>] &lt;<cite>KeatonT</cite>&gt; <q>Does the bealgebone have an onboard temp sensor?</q></li>
<li class="message">[<a href="#T03:09:19" id="T03:09:19"><abbr title="2012-05-28T03:09:19+00:00">03:09:19</abbr></a>] &lt;<cite>fiola</cite>&gt; <q>And since we know that faster memory cycles consumes more power and runs flat out ALL the time, it's reasonable to assume that ARM don't run their cache at the same speed as x86.  It's hardly worth debating though.  When I get a moment I'll just look up the cache clock speeds on both archs :P</q></li>
<li class="quit">[<a href="#T03:17:30" id="T03:17:30"><abbr title="2012-05-28T03:17:30+00:00">03:17:30</abbr></a>] <span>* bhthompson (~bhthompso@c-98-234-177-179.hsd1.ca.comcast.net) Quit (Remote host closed the connection)</span></li>
<li class="join">[<a href="#T03:18:10" id="T03:18:10"><abbr title="2012-05-28T03:18:10+00:00">03:18:10</abbr></a>] <span>* Taima (6b062ec4@gateway/web/freenode/ip.107.6.46.196) has joined #beagle</span></li>
<li class="message">[<a href="#T03:18:39" id="T03:18:39"><abbr title="2012-05-28T03:18:39+00:00">03:18:39</abbr></a>] &lt;<cite>KeatonT</cite>&gt; <q>Guess not.</q></li>
<li class="join">[<a href="#T03:20:07" id="T03:20:07"><abbr title="2012-05-28T03:20:07+00:00">03:20:07</abbr></a>] <span>* pfefferz (~pfefferz@118.143.64.134) has joined #beagle</span></li>
<li class="quit">[<a href="#T03:24:35" id="T03:24:35"><abbr title="2012-05-28T03:24:35+00:00">03:24:35</abbr></a>] <span>* KeatonT (~KeatonT@unaffiliated/keatont) Quit (Quit: Computer has gone to sleep.)</span></li>
<li class="quit">[<a href="#T03:27:54" id="T03:27:54"><abbr title="2012-05-28T03:27:54+00:00">03:27:54</abbr></a>] <span>* GPSFan (~kenm@64.92.145.112) Quit (Remote host closed the connection)</span></li>
<li class="join">[<a href="#T03:31:07" id="T03:31:07"><abbr title="2012-05-28T03:31:07+00:00">03:31:07</abbr></a>] <span>* KeatonT (~KeatonT@unaffiliated/keatont) has joined #beagle</span></li>
<li class="quit">[<a href="#T03:31:10" id="T03:31:10"><abbr title="2012-05-28T03:31:10+00:00">03:31:10</abbr></a>] <span>* KeatonT (~KeatonT@unaffiliated/keatont) Quit (Client Quit)</span></li>
<li class="join">[<a href="#T03:32:35" id="T03:32:35"><abbr title="2012-05-28T03:32:35+00:00">03:32:35</abbr></a>] <span>* KeatonT (~KeatonT@unaffiliated/keatont) has joined #beagle</span></li>
<li class="join">[<a href="#T03:35:17" id="T03:35:17"><abbr title="2012-05-28T03:35:17+00:00">03:35:17</abbr></a>] <span>* djerome (~djerome@ip68-2-20-108.ph.ph.cox.net) has joined #beagle</span></li>
<li class="join">[<a href="#T03:36:42" id="T03:36:42"><abbr title="2012-05-28T03:36:42+00:00">03:36:42</abbr></a>] <span>* raster (~raster@221.147.71.45) has joined #beagle</span></li>
<li class="quit">[<abbr title="2012-05-28T03:36:42+00:00">03:36:42</abbr>] <span>* raster (~raster@221.147.71.45) Quit (Changing host)</span></li>
<li class="join">[<abbr title="2012-05-28T03:36:42+00:00">03:36:42</abbr>] <span>* raster (~raster@enlightenment/developer/raster) has joined #beagle</span></li>
<li class="quit">[<a href="#T03:38:54" id="T03:38:54"><abbr title="2012-05-28T03:38:54+00:00">03:38:54</abbr></a>] <span>* pfefferz (~pfefferz@118.143.64.134) Quit (Ping timeout: 245 seconds)</span></li>
<li class="quit">[<a href="#T03:39:06" id="T03:39:06"><abbr title="2012-05-28T03:39:06+00:00">03:39:06</abbr></a>] <span>* av500 (~vladimir@b2b-46-252-131-98.unitymedia.biz) Quit (Remote host closed the connection)</span></li>
<li class="quit">[<a href="#T03:39:29" id="T03:39:29"><abbr title="2012-05-28T03:39:29+00:00">03:39:29</abbr></a>] <span>* raster (~raster@enlightenment/developer/raster) Quit (Client Quit)</span></li>
<li class="join">[<a href="#T03:39:41" id="T03:39:41"><abbr title="2012-05-28T03:39:41+00:00">03:39:41</abbr></a>] <span>* av500 (~vladimir@b2b-46-252-131-98.unitymedia.biz) has joined #beagle</span></li>
<li class="part">[<a href="#T03:42:40" id="T03:42:40"><abbr title="2012-05-28T03:42:40+00:00">03:42:40</abbr></a>] <span>* Taima (6b062ec4@gateway/web/freenode/ip.107.6.46.196) has left #beagle</span></li>
<li class="join">[<a href="#T03:44:39" id="T03:44:39"><abbr title="2012-05-28T03:44:39+00:00">03:44:39</abbr></a>] <span>* Taima (~martyn@107.6.46.196) has joined #beagle</span></li>
<li class="quit">[<a href="#T03:45:30" id="T03:45:30"><abbr title="2012-05-28T03:45:30+00:00">03:45:30</abbr></a>] <span>* thurbad (~natesewel@cpe-70-124-80-154.austin.res.rr.com) Quit (Ping timeout: 252 seconds)</span></li>
<li class="quit">[<a href="#T03:48:14" id="T03:48:14"><abbr title="2012-05-28T03:48:14+00:00">03:48:14</abbr></a>] <span>* KeatonT (~KeatonT@unaffiliated/keatont) Quit (Quit: Textual IRC Client: <a href="http://www.textualapp.com/)">http://www.textualapp.com/)</a></span></li>
<li class="message">[<a href="#T03:50:53" id="T03:50:53"><abbr title="2012-05-28T03:50:53+00:00">03:50:53</abbr></a>] &lt;<cite>jay6981</cite>&gt; <q>there's something like a 40 cycle pipeline stall penalty for cache miss on the cortex A9</q></li>
<li class="join">[<a href="#T03:51:29" id="T03:51:29"><abbr title="2012-05-28T03:51:29+00:00">03:51:29</abbr></a>] <span>* raster (~raster@221.147.71.45) has joined #beagle</span></li>
<li class="quit">[<a href="#T03:51:30" id="T03:51:30"><abbr title="2012-05-28T03:51:30+00:00">03:51:30</abbr></a>] <span>* raster (~raster@221.147.71.45) Quit (Changing host)</span></li>
<li class="join">[<abbr title="2012-05-28T03:51:30+00:00">03:51:30</abbr>] <span>* raster (~raster@enlightenment/developer/raster) has joined #beagle</span></li>
<li class="join">[<a href="#T03:54:33" id="T03:54:33"><abbr title="2012-05-28T03:54:33+00:00">03:54:33</abbr></a>] <span>* pfefferz (~pfefferz@118.143.64.134) has joined #beagle</span></li>
<li class="quit">[<a href="#T03:57:44" id="T03:57:44"><abbr title="2012-05-28T03:57:44+00:00">03:57:44</abbr></a>] <span>* jvcleave (~jvcleave@74.83.250.220) Quit (Quit: jvcleave)</span></li>
<li class="join">[<a href="#T03:58:58" id="T03:58:58"><abbr title="2012-05-28T03:58:58+00:00">03:58:58</abbr></a>] <span>* aholler_ (~aholler@p57B20540.dip0.t-ipconnect.de) has joined #beagle</span></li>
<li class="quit">[<a href="#T04:02:32" id="T04:02:32"><abbr title="2012-05-28T04:02:32+00:00">04:02:32</abbr></a>] <span>* aholler (~aholler@p57B2093C.dip0.t-ipconnect.de) Quit (Ping timeout: 265 seconds)</span></li>
<li class="join">[<a href="#T04:03:16" id="T04:03:16"><abbr title="2012-05-28T04:03:16+00:00">04:03:16</abbr></a>] <span>* panto (~panto@118.143.64.134) has joined #beagle</span></li>
<li class="message">[<a href="#T04:10:56" id="T04:10:56"><abbr title="2012-05-28T04:10:56+00:00">04:10:56</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>jay6981: not true</q></li>
<li class="message">[<a href="#T04:11:51" id="T04:11:51"><abbr title="2012-05-28T04:11:51+00:00">04:11:51</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>an L2 miss has a high *latency*</q></li>
<li class="message">[<a href="#T04:12:01" id="T04:12:01"><abbr title="2012-05-28T04:12:01+00:00">04:12:01</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>that's not the same as a pipeline stall</q></li>
<li class="message">[<a href="#T04:12:15" id="T04:12:15"><abbr title="2012-05-28T04:12:15+00:00">04:12:15</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>A9 caches are non-blocking</q></li>
<li class="message">[<a href="#T04:12:36" id="T04:12:36"><abbr title="2012-05-28T04:12:36+00:00">04:12:36</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>nothing will stall until the data is actually needed</q></li>
<li class="message">[<a href="#T04:14:48" id="T04:14:48"><abbr title="2012-05-28T04:14:48+00:00">04:14:48</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>fiola: ARM L1 caches always run at full clock speed</q></li>
<li class="message">[<a href="#T04:14:59" id="T04:14:59"><abbr title="2012-05-28T04:14:59+00:00">04:14:59</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>L2 speed depends on the implementation</q></li>
<li class="message">[<a href="#T04:15:10" id="T04:15:10"><abbr title="2012-05-28T04:15:10+00:00">04:15:10</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>typically full or half core clock speed</q></li>
<li class="join">[<a href="#T04:19:26" id="T04:19:26"><abbr title="2012-05-28T04:19:26+00:00">04:19:26</abbr></a>] <span>* rbarris (~rbarris@cpe-76-167-205-112.socal.res.rr.com) has joined #beagle</span></li>
<li class="message">[<a href="#T04:21:50" id="T04:21:50"><abbr title="2012-05-28T04:21:50+00:00">04:21:50</abbr></a>] &lt;<cite>jay6981</cite>&gt; <q>if you read test branch you'll stall on every miss</q></li>
<li class="message">[<a href="#T04:22:02" id="T04:22:02"><abbr title="2012-05-28T04:22:02+00:00">04:22:02</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>don't do that then</q></li>
<li class="message">[<a href="#T04:22:27" id="T04:22:27"><abbr title="2012-05-28T04:22:27+00:00">04:22:27</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>and actually you might not stall</q></li>
<li class="message">[<a href="#T04:22:34" id="T04:22:34"><abbr title="2012-05-28T04:22:34+00:00">04:22:34</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>ever heard of branch prediction?</q></li>
<li class="message">[<a href="#T04:23:01" id="T04:23:01"><abbr title="2012-05-28T04:23:01+00:00">04:23:01</abbr></a>] &lt;<cite>jay6981</cite>&gt; <q>huh?</q></li>
<li class="message">[<a href="#T04:23:20" id="T04:23:20"><abbr title="2012-05-28T04:23:20+00:00">04:23:20</abbr></a>] &lt;<cite>_troll_</cite>&gt; <q>I take that as a no</q></li>
<li class="quit">[<a href="#T04:25:20" id="T04:25:20"><abbr title="2012-05-28T04:25:20+00:00">04:25:20</abbr></a>] <span>* pfefferz (~pfefferz@118.143.64.134) Quit (Quit: Leaving)</span></li>
<li class="join">[<a href="#T04:25:36" id="T04:25:36"><abbr title="2012-05-28T04:25:36+00:00">04:25:36</abbr></a>] <span>* pfefferz (~pfefferz@118.143.64.134) has joined #beagle</span></li>
<li class="join">[<a href="#T04:27:55" id="T04:27:55"><abbr title="2012-05-28T04:27:55+00:00">04:27:55</abbr></a>] <span>* bhthompson (~bhthompso@c-98-234-177-179.hsd1.ca.comcast.net) has joined #beagle</span></li>
<li class="quit">[<a href="#T04:32:08" id="T04:32:08"><abbr title="2012-05-28T04:32:08+00:00">04:32:08</abbr></a>] <span>* bhthompson (~bhthompso@c-98-234-177-179.hsd1.ca.comcast.net) Quit (Ping timeout: 240 seconds)</span></li>
<li class="join">[<a href="#T04:34:30" id="T04:34:30"><abbr title="2012-05-28T04:34:30+00:00">04:34:30</abbr></a>] <span>* hitlin37 (~chatzilla@182.71.144.118) has joined #beagle</span></li>
<li class="quit">[<a href="#T04:45:50" id="T04:45:50"><abbr title="2012-05-28T04:45:50+00:00">04:45:50</abbr></a>] <span>* Taima (~martyn@107.6.46.196) Quit (Quit: This computer has gone to sleep)</span></li>
<li class="quit">[<a href="#T04:51:07" id="T04:51:07"><abbr title="2012-05-28T04:51:07+00:00">04:51:07</abbr></a>] <span>* pfefferz (~pfefferz@118.143.64.134) Quit (Ping timeout: 244 seconds)</span></li>
<li class="quit">[<a href="#T04:55:03" id="T04:55:03"><abbr title="2012-05-28T04:55:03+00:00">04:55:03</abbr></a>] <span>* emeb (~ericb@ip72-223-81-94.ph.ph.cox.net) Quit (Quit: Leaving.)</span></li>
<li class="join">[<a href="#T04:57:37" id="T04:57:37"><abbr title="2012-05-28T04:57:37+00:00">04:57:37</abbr></a>] <span>* bhthompson (~bhthompso@c-98-234-177-179.hsd1.ca.comcast.net) has joined #beagle</span></li>
