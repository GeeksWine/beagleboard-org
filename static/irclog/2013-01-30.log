<li class="message">[<a href="#T00:02:08" id="T00:02:08"><abbr title="2013-01-30T00:02:08+00:00">00:02:08</abbr></a>] &lt;<cite>mranostay</cite>&gt; <q>XorA: had to google to be sure you were kidding</q></li>
<li class="message">[<a href="#T00:04:01" id="T00:04:01"><abbr title="2013-01-30T00:04:01+00:00">00:04:01</abbr></a>] &lt;<cite>Russ</cite>&gt; <q>I do wonder if people would have a more positive view of lennart and co projects if he had a different attitude, or if it weren't for the attitude, his software would be ignored completely</q></li>
<li class="message">[<a href="#T00:04:50" id="T00:04:50"><abbr title="2013-01-30T00:04:50+00:00">00:04:50</abbr></a>] &lt;<cite>XorA</cite>&gt; <q>mranostay: there was a dbus.ko in the past</q></li>
<li class="quit">[<a href="#T00:04:56" id="T00:04:56"><abbr title="2013-01-30T00:04:56+00:00">00:04:56</abbr></a>] <span>* mrcan (~mrcan@unaffiliated/mrcan) Quit (Read error: Connection reset by peer)</span></li>
<li class="quit">[<a href="#T00:09:01" id="T00:09:01"><abbr title="2013-01-30T00:09:01+00:00">00:09:01</abbr></a>] <span>* prpplague (~danders@192.94.92.14) Quit (Quit: Leaving)</span></li>
<li class="quit">[<a href="#T00:10:28" id="T00:10:28"><abbr title="2013-01-30T00:10:28+00:00">00:10:28</abbr></a>] <span>* coldsoup (~nathan@adsl-64-123-153-20.dsl.okcyok.swbell.net) Quit (Ping timeout: 248 seconds)</span></li>
<li class="join">[<a href="#T00:10:40" id="T00:10:40"><abbr title="2013-01-30T00:10:40+00:00">00:10:40</abbr></a>] <span>* eikeon (~eikeon@pool-108-56-3-62.washdc.east.verizon.net) has joined #beagle</span></li>
<li class="quit">[<a href="#T00:17:30" id="T00:17:30"><abbr title="2013-01-30T00:17:30+00:00">00:17:30</abbr></a>] <span>* Tartarus (trini@pixelshelf.com) Quit (Excess Flood)</span></li>
<li class="join">[<a href="#T00:18:27" id="T00:18:27"><abbr title="2013-01-30T00:18:27+00:00">00:18:27</abbr></a>] <span>* Tartarus (trini@pixelshelf.com) has joined #beagle</span></li>
<li class="quit">[<a href="#T00:22:46" id="T00:22:46"><abbr title="2013-01-30T00:22:46+00:00">00:22:46</abbr></a>] <span>* eikeon (~eikeon@pool-108-56-3-62.washdc.east.verizon.net) Quit (Ping timeout: 272 seconds)</span></li>
<li class="quit">[<a href="#T00:24:42" id="T00:24:42"><abbr title="2013-01-30T00:24:42+00:00">00:24:42</abbr></a>] <span>* _roger_ (~a0740758@nat/ti/x-vbzjnzqxrcbudbof) Quit (Ping timeout: 264 seconds)</span></li>
<li class="join">[<a href="#T00:25:34" id="T00:25:34"><abbr title="2013-01-30T00:25:34+00:00">00:25:34</abbr></a>] <span>* eikeon (~eikeon@pool-108-56-8-93.washdc.east.verizon.net) has joined #beagle</span></li>
<li class="join">[<a href="#T00:28:08" id="T00:28:08"><abbr title="2013-01-30T00:28:08+00:00">00:28:08</abbr></a>] <span>* Hoolxi (~Openfree@183.195.231.91) has joined #beagle</span></li>
<li class="message">[<a href="#T00:28:49" id="T00:28:49"><abbr title="2013-01-30T00:28:49+00:00">00:28:49</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>XorA: did you see we have found the install task?</q></li>
<li class="join">[<a href="#T00:31:20" id="T00:31:20"><abbr title="2013-01-30T00:31:20+00:00">00:31:20</abbr></a>] <span>* KeatonT (~textual@unaffiliated/keatont) has joined #beagle</span></li>
<li class="quit">[<a href="#T00:32:25" id="T00:32:25"><abbr title="2013-01-30T00:32:25+00:00">00:32:25</abbr></a>] <span>* Hoolxi (~Openfree@183.195.231.91) Quit (Remote host closed the connection)</span></li>
<li class="quit">[<a href="#T00:37:42" id="T00:37:42"><abbr title="2013-01-30T00:37:42+00:00">00:37:42</abbr></a>] <span>* rickaaa (~rick@60.250.238.181) Quit (Ping timeout: 256 seconds)</span></li>
<li class="join">[<a href="#T00:38:14" id="T00:38:14"><abbr title="2013-01-30T00:38:14+00:00">00:38:14</abbr></a>] <span>* rickaaa (~rick@60.250.238.181) has joined #beagle</span></li>
<li class="quit">[<a href="#T00:40:30" id="T00:40:30"><abbr title="2013-01-30T00:40:30+00:00">00:40:30</abbr></a>] <span>* eikeon (~eikeon@pool-108-56-8-93.washdc.east.verizon.net) Quit (Ping timeout: 272 seconds)</span></li>
<li class="message">[<a href="#T00:51:54" id="T00:51:54"><abbr title="2013-01-30T00:51:54+00:00">00:51:54</abbr></a>] &lt;<cite>XorA</cite>&gt; <q>toneeee: nope</q></li>
<li class="quit">[<a href="#T00:54:26" id="T00:54:26"><abbr title="2013-01-30T00:54:26+00:00">00:54:26</abbr></a>] <span>* rickaaa (~rick@60.250.238.181) Quit (Ping timeout: 272 seconds)</span></li>
<li class="message">[<a href="#T00:55:21" id="T00:55:21"><abbr title="2013-01-30T00:55:21+00:00">00:55:21</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>XorA: <a href="http://hipstercircuits.com/?p=245">http://hipstercircuits.com/?p=245</a></q></li>
<li class="message">[<a href="#T00:55:58" id="T00:55:58"><abbr title="2013-01-30T00:55:58+00:00">00:55:58</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>XorA: I found the openembedded-core manual and see that though there is a deploy task listed in the recipe, it looks like the install task is actually working</q></li>
<li class="message">[<a href="#T00:56:16" id="T00:56:16"><abbr title="2013-01-30T00:56:16+00:00">00:56:16</abbr></a>] &lt;<cite>XorA</cite>&gt; <q>toneeee: yes, that is normal</q></li>
<li class="message">[<a href="#T00:57:12" id="T00:57:12"><abbr title="2013-01-30T00:57:12+00:00">00:57:12</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>XorA: fantastisch</q></li>
<li class="message">[<a href="#T00:57:15" id="T00:57:15"><abbr title="2013-01-30T00:57:15+00:00">00:57:15</abbr></a>] &lt;<cite>XorA</cite>&gt; <q>toneeee: bitbake -C compile should work, but it seems Angstrom bitbake version is too old</q></li>
<li class="message">[<a href="#T00:57:23" id="T00:57:23"><abbr title="2013-01-30T00:57:23+00:00">00:57:23</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>ohhh</q></li>
<li class="message">[<a href="#T00:59:27" id="T00:59:27"><abbr title="2013-01-30T00:59:27+00:00">00:59:27</abbr></a>] &lt;<cite>XorA</cite>&gt; <q>might have to wait until koen bumps bitbake version</q></li>
<li class="message">[<a href="#T01:00:05" id="T01:00:05"><abbr title="2013-01-30T01:00:05+00:00">01:00:05</abbr></a>] &lt;<cite>XorA</cite>&gt; <q>I will be at FOSDEM soon anyway and no coding shall be done :-D</q></li>
<li class="join">[<a href="#T01:02:31" id="T01:02:31"><abbr title="2013-01-30T01:02:31+00:00">01:02:31</abbr></a>] <span>* djerome (~djerome@ip68-2-20-108.ph.ph.cox.net) has joined #beaglebone</span></li>
<li class="nick-change">[<a href="#T01:03:03" id="T01:03:03"><abbr title="2013-01-30T01:03:03+00:00">01:03:03</abbr></a>] <span>* XorA is now known as XorA|gone</span></li>
<li class="message">[<a href="#T01:24:59" id="T01:24:59"><abbr title="2013-01-30T01:24:59+00:00">01:24:59</abbr></a>] &lt;<cite>nemik_</cite>&gt; <q>sorry if this is asked too often, but are there any plans for a C compiler for the PRU? to not have to hand-code assembly?</q></li>
<li class="message">[<a href="#T01:26:49" id="T01:26:49"><abbr title="2013-01-30T01:26:49+00:00">01:26:49</abbr></a>] &lt;<cite>mru</cite>&gt; <q>why on earth (or anywhere else) would anyone want a c compiler for pru?</q></li>
<li class="quit">[<a href="#T01:27:13" id="T01:27:13"><abbr title="2013-01-30T01:27:13+00:00">01:27:13</abbr></a>] <span>* KeatonT (~textual@unaffiliated/keatont) Quit (Quit: Computer has gone to sleep.)</span></li>
<li class="message">[<a href="#T01:29:57" id="T01:29:57"><abbr title="2013-01-30T01:29:57+00:00">01:29:57</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>me me !! I want one :D</q></li>
<li class="message">[<a href="#T01:30:40" id="T01:30:40"><abbr title="2013-01-30T01:30:40+00:00">01:30:40</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>but: I don't mind skipping it because the PRU might be obsoleted by the Cortex-Ms on the newer Sitara SoCs...</q></li>
<li class="message">[<a href="#T01:31:00" id="T01:31:00"><abbr title="2013-01-30T01:31:00+00:00">01:31:00</abbr></a>] &lt;<cite>mru</cite>&gt; <q>they serve somewhat different purposes</q></li>
<li class="message">[<a href="#T01:31:29" id="T01:31:29"><abbr title="2013-01-30T01:31:29+00:00">01:31:29</abbr></a>] &lt;<cite>mru</cite>&gt; <q>the pru has the advantage that you can easily count exactly how many cycles a piece of code will use</q></li>
<li class="message">[<a href="#T01:31:52" id="T01:31:52"><abbr title="2013-01-30T01:31:52+00:00">01:31:52</abbr></a>] &lt;<cite>mru</cite>&gt; <q>but of course only if you write assembly by hand</q></li>
<li class="message">[<abbr title="2013-01-30T01:31:52+00:00">01:31:52</abbr>] &lt;<cite>mranostay</cite>&gt; <q>also the instuction space you have is really small</q></li>
<li class="message">[<a href="#T01:32:07" id="T01:32:07"><abbr title="2013-01-30T01:32:07+00:00">01:32:07</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>well it's no smaller than Arduino</q></li>
<li class="message">[<a href="#T01:32:44" id="T01:32:44"><abbr title="2013-01-30T01:32:44+00:00">01:32:44</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>it's bigger in many regards because you can swap memory into it from the rest of the SoC</q></li>
<li class="message">[<a href="#T01:32:50" id="T01:32:50"><abbr title="2013-01-30T01:32:50+00:00">01:32:50</abbr></a>] &lt;<cite>mru</cite>&gt; <q>if you involve a compiler, you lose that determinism</q></li>
<li class="message">[<a href="#T01:33:10" id="T01:33:10"><abbr title="2013-01-30T01:33:10+00:00">01:33:10</abbr></a>] &lt;<cite>mru</cite>&gt; <q>which was probably the reason for using it in the first place</q></li>
<li class="message">[<a href="#T01:33:27" id="T01:33:27"><abbr title="2013-01-30T01:33:27+00:00">01:33:27</abbr></a>] &lt;<cite>mru</cite>&gt; <q>if you don't need that accurate timing, a cortex-m is much easier to use</q></li>
<li class="message">[<a href="#T01:33:47" id="T01:33:47"><abbr title="2013-01-30T01:33:47+00:00">01:33:47</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>okay. nice advice.</q></li>
<li class="message">[<a href="#T01:34:03" id="T01:34:03"><abbr title="2013-01-30T01:34:03+00:00">01:34:03</abbr></a>] &lt;<cite>mranostay</cite>&gt; <q>also you aren't running complex stuff on a PRU</q></li>
<li class="message">[<a href="#T01:34:10" id="T01:34:10"><abbr title="2013-01-30T01:34:10+00:00">01:34:10</abbr></a>] &lt;<cite>mru</cite>&gt; <q>that too</q></li>
<li class="message">[<a href="#T01:34:39" id="T01:34:39"><abbr title="2013-01-30T01:34:39+00:00">01:34:39</abbr></a>] &lt;<cite>mrpackethead_</cite>&gt; <q>i'm loving that PRU</q></li>
<li class="message">[<a href="#T01:34:41" id="T01:34:41"><abbr title="2013-01-30T01:34:41+00:00">01:34:41</abbr></a>] &lt;<cite>mrpackethead_</cite>&gt; <q>:-)</q></li>
<li class="message">[<a href="#T01:34:47" id="T01:34:47"><abbr title="2013-01-30T01:34:47+00:00">01:34:47</abbr></a>] &lt;<cite>mrpackethead_</cite>&gt; <q>what a godsend of a device</q></li>
<li class="message">[<a href="#T01:34:49" id="T01:34:49"><abbr title="2013-01-30T01:34:49+00:00">01:34:49</abbr></a>] &lt;<cite>mru</cite>&gt; <q>and it's a rather unusual architecture that it would be hard to target with gcc</q></li>
<li class="message">[<a href="#T01:35:00" id="T01:35:00"><abbr title="2013-01-30T01:35:00+00:00">01:35:00</abbr></a>] &lt;<cite>mru</cite>&gt; <q>gcc _hates_ special-purpose registers</q></li>
<li class="message">[<a href="#T01:36:11" id="T01:36:11"><abbr title="2013-01-30T01:36:11+00:00">01:36:11</abbr></a>] &lt;<cite>mrpackethead_</cite>&gt; <q>... " he pru has the advantage that you can easily count exactly how many cycles a piece of code will use "</q></li>
<li class="message">[<a href="#T01:36:12" id="T01:36:12"><abbr title="2013-01-30T01:36:12+00:00">01:36:12</abbr></a>] &lt;<cite>mru</cite>&gt; <q>not to mention you'd still have to constantly look over your shoulder to make sure it didn't mess up with memory layout and such</q></li>
<li class="message">[<a href="#T01:36:25" id="T01:36:25"><abbr title="2013-01-30T01:36:25+00:00">01:36:25</abbr></a>] &lt;<cite>mrpackethead_</cite>&gt; <q>exactly what makes it appealing</q></li>
<li class="quit">[<a href="#T01:36:43" id="T01:36:43"><abbr title="2013-01-30T01:36:43+00:00">01:36:43</abbr></a>] <span>* xanium4332 (~xanium433@2001:470:1f09:10:225:90ff:fea2:995f) Quit (Ping timeout: 246 seconds)</span></li>
<li class="message">[<a href="#T01:36:46" id="T01:36:46"><abbr title="2013-01-30T01:36:46+00:00">01:36:46</abbr></a>] &lt;<cite>mru</cite>&gt; <q>unless you touch the L3 interconnect of course</q></li>
<li class="message">[<a href="#T01:39:19" id="T01:39:19"><abbr title="2013-01-30T01:39:19+00:00">01:39:19</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>So the first time I saw C, I was an assembly type guy. My friend showed me how C saved my time by dumping the assembly output of the version 6 unix compiler, primitive but useful: cc -s helloworld.c and there was glory in that simple compiler. I'd like something to avoid the assembly paradigm but maybe with predictable outputs for each statement so you are still in control of the timing like mrpackethead suggests</q></li>
<li class="message">[<a href="#T01:40:26" id="T01:40:26"><abbr title="2013-01-30T01:40:26+00:00">01:40:26</abbr></a>] &lt;<cite>mranostay</cite>&gt; <q>heh</q></li>
<li class="message">[<a href="#T01:40:27" id="T01:40:27"><abbr title="2013-01-30T01:40:27+00:00">01:40:27</abbr></a>] &lt;<cite>mru</cite>&gt; <q>so you want an assembler with macros</q></li>
<li class="message">[<a href="#T01:40:31" id="T01:40:31"><abbr title="2013-01-30T01:40:31+00:00">01:40:31</abbr></a>] &lt;<cite>mru</cite>&gt; <q>they all have 'em</q></li>
<li class="message">[<a href="#T01:40:33" id="T01:40:33"><abbr title="2013-01-30T01:40:33+00:00">01:40:33</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>sometimes</q></li>
<li class="message">[<a href="#T01:40:39" id="T01:40:39"><abbr title="2013-01-30T01:40:39+00:00">01:40:39</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>of course I know they have them</q></li>
<li class="message">[<a href="#T01:40:44" id="T01:40:44"><abbr title="2013-01-30T01:40:44+00:00">01:40:44</abbr></a>] &lt;<cite>nemik_</cite>&gt; <q>thanks guys. so which are the newer chips with the cortex-m's? they're on the same IC?</q></li>
<li class="message">[<a href="#T01:41:02" id="T01:41:02"><abbr title="2013-01-30T01:41:02+00:00">01:41:02</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>and I don't want an assembler with macros, I want a higher-level language. I can get by with a macro assembler</q></li>
<li class="message">[<a href="#T01:41:23" id="T01:41:23"><abbr title="2013-01-30T01:41:23+00:00">01:41:23</abbr></a>] &lt;<cite>mru</cite>&gt; <q>a more advanced compiler is by definition unpredictable</q></li>
<li class="message">[<a href="#T01:41:40" id="T01:41:40"><abbr title="2013-01-30T01:41:40+00:00">01:41:40</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>well cc -s will show the output and it can't be that huge.</q></li>
<li class="join">[<abbr title="2013-01-30T01:41:40+00:00">01:41:40</abbr>] <span>* rickaaa (~rick@114-44-80-69.dynamic.hinet.net) has joined #beagle</span></li>
<li class="message">[<a href="#T01:42:00" id="T01:42:00"><abbr title="2013-01-30T01:42:00+00:00">01:42:00</abbr></a>] &lt;<cite>mranostay</cite>&gt; <q>hmmm missing the point</q></li>
<li class="message">[<a href="#T01:42:10" id="T01:42:10"><abbr title="2013-01-30T01:42:10+00:00">01:42:10</abbr></a>] &lt;<cite>mru</cite>&gt; <q>you save time and effort by putting the compiler in charge of some decisions</q></li>
<li class="message">[<a href="#T01:42:21" id="T01:42:21"><abbr title="2013-01-30T01:42:21+00:00">01:42:21</abbr></a>] &lt;<cite>mru</cite>&gt; <q>by doing that you no longer know the precise outcome</q></li>
<li class="message">[<a href="#T01:42:28" id="T01:42:28"><abbr title="2013-01-30T01:42:28+00:00">01:42:28</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>yes. and then I tweak the output.  cc -s stupid.c &gt; stupid.asm</q></li>
<li class="message">[<a href="#T01:42:36" id="T01:42:36"><abbr title="2013-01-30T01:42:36+00:00">01:42:36</abbr></a>] &lt;<cite>mru</cite>&gt; <q>you can of course check what it did in any specific case</q></li>
<li class="message">[<a href="#T01:42:50" id="T01:42:50"><abbr title="2013-01-30T01:42:50+00:00">01:42:50</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>yes, if I care that much that I'd spin on asm, sure I do.</q></li>
<li class="message">[<abbr title="2013-01-30T01:42:50+00:00">01:42:50</abbr>] &lt;<cite>mru</cite>&gt; <q>but a different version of the compiler will produce different output</q></li>
<li class="message">[<a href="#T01:42:57" id="T01:42:57"><abbr title="2013-01-30T01:42:57+00:00">01:42:57</abbr></a>] &lt;<cite>mru</cite>&gt; <q>otherwise it wouldn't be a different version</q></li>
<li class="message">[<a href="#T01:43:16" id="T01:43:16"><abbr title="2013-01-30T01:43:16+00:00">01:43:16</abbr></a>] &lt;<cite>mdp</cite>&gt; <q>don't be surprised if you see a non-gcc pru C compiler in the future</q></li>
<li class="message">[<a href="#T01:43:34" id="T01:43:34"><abbr title="2013-01-30T01:43:34+00:00">01:43:34</abbr></a>] &lt;<cite>mru</cite>&gt; <q>I'll be surprised if it works</q></li>
<li class="message">[<a href="#T01:43:51" id="T01:43:51"><abbr title="2013-01-30T01:43:51+00:00">01:43:51</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>oh you are suggesting that I'd end up rebuilding my stupid.c code in another situation and my compiler's output would need to be retweaked. Accepted/good point</q></li>
<li class="message">[<a href="#T01:43:55" id="T01:43:55"><abbr title="2013-01-30T01:43:55+00:00">01:43:55</abbr></a>] &lt;<cite>mru</cite>&gt; <q>but I'm never surprised, so it won't</q></li>
<li class="message">[<a href="#T01:43:56" id="T01:43:56"><abbr title="2013-01-30T01:43:56+00:00">01:43:56</abbr></a>] &lt;<cite>mdp</cite>&gt; <q>mru, we did have that discussion about other TI C compilers didn't we? ;)</q></li>
<li class="message">[<a href="#T01:44:13" id="T01:44:13"><abbr title="2013-01-30T01:44:13+00:00">01:44:13</abbr></a>] &lt;<cite>mru</cite>&gt; <q>exactly</q></li>
<li class="message">[<a href="#T01:44:28" id="T01:44:28"><abbr title="2013-01-30T01:44:28+00:00">01:44:28</abbr></a>] &lt;<cite>mranostay</cite>&gt; <q>hehe</q></li>
<li class="message">[<a href="#T01:44:53" id="T01:44:53"><abbr title="2013-01-30T01:44:53+00:00">01:44:53</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>I wasn't thinking that far into the future. This is throwaway tech! :D</q></li>
<li class="message">[<a href="#T01:45:11" id="T01:45:11"><abbr title="2013-01-30T01:45:11+00:00">01:45:11</abbr></a>] &lt;<cite>mdp</cite>&gt; <q>mru, I was thinking about that while um, looking at something related recently ;)</q></li>
<li class="join">[<a href="#T01:45:35" id="T01:45:35"><abbr title="2013-01-30T01:45:35+00:00">01:45:35</abbr></a>] <span>* KeatonT (~textual@unaffiliated/keatont) has joined #beagle</span></li>
<li class="message">[<a href="#T01:46:03" id="T01:46:03"><abbr title="2013-01-30T01:46:03+00:00">01:46:03</abbr></a>] &lt;<cite>mdp</cite>&gt; <q>toneeee: you are holding your breath waiting for a general purpose cortex-M in a Sitara processor?</q></li>
<li class="message">[<a href="#T01:46:19" id="T01:46:19"><abbr title="2013-01-30T01:46:19+00:00">01:46:19</abbr></a>] &lt;<cite>mru</cite>&gt; <q>the omaps have them...</q></li>
<li class="message">[<a href="#T01:46:25" id="T01:46:25"><abbr title="2013-01-30T01:46:25+00:00">01:46:25</abbr></a>] &lt;<cite>mdp</cite>&gt; <q>yep</q></li>
<li class="message">[<a href="#T01:46:29" id="T01:46:29"><abbr title="2013-01-30T01:46:29+00:00">01:46:29</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>yes</q></li>
<li class="message">[<a href="#T01:46:40" id="T01:46:40"><abbr title="2013-01-30T01:46:40+00:00">01:46:40</abbr></a>] &lt;<cite>mdp</cite>&gt; <q>even Sitara now has cortex-M..just not general purpose ;)</q></li>
<li class="message">[<a href="#T01:46:56" id="T01:46:56"><abbr title="2013-01-30T01:46:56+00:00">01:46:56</abbr></a>] &lt;<cite>mru</cite>&gt; <q>the power sequencer?</q></li>
<li class="message">[<a href="#T01:46:58" id="T01:46:58"><abbr title="2013-01-30T01:46:58+00:00">01:46:58</abbr></a>] &lt;<cite>mdp</cite>&gt; <q>dra74x has two M4s</q></li>
<li class="message">[<a href="#T01:47:22" id="T01:47:22"><abbr title="2013-01-30T01:47:22+00:00">01:47:22</abbr></a>] &lt;<cite>mdp</cite>&gt; <q>mru, yeah, you don't get the m3 to yourself because of that</q></li>
<li class="message">[<a href="#T01:47:28" id="T01:47:28"><abbr title="2013-01-30T01:47:28+00:00">01:47:28</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>but I am not on the TI roadmap mailing list. I'm a beagle hobbiest who has been looking at the various TI SoC designs to see the different peripherals they are packing into them</q></li>
<li class="message">[<a href="#T01:47:50" id="T01:47:50"><abbr title="2013-01-30T01:47:50+00:00">01:47:50</abbr></a>] &lt;<cite>mdp</cite>&gt; <q>my crystal ball says more PRU</q></li>
<li class="message">[<a href="#T01:47:56" id="T01:47:56"><abbr title="2013-01-30T01:47:56+00:00">01:47:56</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>yay!!</q></li>
<li class="message">[<a href="#T01:47:59" id="T01:47:59"><abbr title="2013-01-30T01:47:59+00:00">01:47:59</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>thanks crystal ball!</q></li>
<li class="message">[<a href="#T01:48:24" id="T01:48:24"><abbr title="2013-01-30T01:48:24+00:00">01:48:24</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>(I like Harvard architectures, they are fun. Weitek had some 'back in the day' )</q></li>
<li class="message">[<a href="#T01:48:28" id="T01:48:28"><abbr title="2013-01-30T01:48:28+00:00">01:48:28</abbr></a>] &lt;<cite>mdp</cite>&gt; <q>the crystal ball has more details at conferences with drinks</q></li>
<li class="message">[<a href="#T01:49:49" id="T01:49:49"><abbr title="2013-01-30T01:49:49+00:00">01:49:49</abbr></a>] &lt;<cite>mranostay</cite>&gt; <q>where there are no logs? :P</q></li>
<li class="message">[<a href="#T01:50:16" id="T01:50:16"><abbr title="2013-01-30T01:50:16+00:00">01:50:16</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>lololol</q></li>
<li class="message">[<a href="#T01:50:19" id="T01:50:19"><abbr title="2013-01-30T01:50:19+00:00">01:50:19</abbr></a>] &lt;<cite>nemik_</cite>&gt; <q>i get it, the PRU is most useful for very precise machine/motor timing. but still, right now i'm probably going to be adding a second cheap m0 or something core to do some not-too-complex-but-too-complex-for-PRU stuff</q></li>
<li class="message">[<abbr title="2013-01-30T01:50:19+00:00">01:50:19</abbr>] &lt;<cite>mdp</cite>&gt; <q>everything is logged</q></li>
<li class="message">[<a href="#T01:50:52" id="T01:50:52"><abbr title="2013-01-30T01:50:52+00:00">01:50:52</abbr></a>] &lt;<cite>mdp</cite>&gt; <q>nemik_: I used it for precise bus cycles, myself</q></li>
<li class="message">[<a href="#T01:51:09" id="T01:51:09"><abbr title="2013-01-30T01:51:09+00:00">01:51:09</abbr></a>] &lt;<cite>mdp</cite>&gt; <q>now I'm using it as a highspeed spi slave</q></li>
<li class="message">[<a href="#T01:51:14" id="T01:51:14"><abbr title="2013-01-30T01:51:14+00:00">01:51:14</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>The PRU-feeds-the-6502-bus is pretty keen.  maybe we could PRU-feeds-arduino. lol</q></li>
<li class="message">[<a href="#T01:51:17" id="T01:51:17"><abbr title="2013-01-30T01:51:17+00:00">01:51:17</abbr></a>] &lt;<cite>mranostay</cite>&gt; <q>nemik_: what is too complex?</q></li>
<li class="message">[<a href="#T01:51:50" id="T01:51:50"><abbr title="2013-01-30T01:51:50+00:00">01:51:50</abbr></a>] &lt;<cite>mdp</cite>&gt; <q>mranostay, bitbanged spi slave...bang bang bang bang</q></li>
<li class="message">[<a href="#T01:52:34" id="T01:52:34"><abbr title="2013-01-30T01:52:34+00:00">01:52:34</abbr></a>] &lt;<cite>nemik_</cite>&gt; <q>mranostay: routine that does some control of channels (some h-bridges) and reads wiegand data</q></li>
<li class="message">[<a href="#T01:53:18" id="T01:53:18"><abbr title="2013-01-30T01:53:18+00:00">01:53:18</abbr></a>] &lt;<cite>nemik_</cite>&gt; <q>plus some processing inside there to SHA256 some of that wiegand data but that could be done on beaglebone then by just writing it to some section of the shared memory and issuing some interrupt then</q></li>
<li class="message">[<a href="#T01:53:37" id="T01:53:37"><abbr title="2013-01-30T01:53:37+00:00">01:53:37</abbr></a>] &lt;<cite>mdp</cite>&gt; <q>mranostay, it really is the best bitbanger around at 200mhz</q></li>
<li class="message">[<a href="#T01:54:05" id="T01:54:05"><abbr title="2013-01-30T01:54:05+00:00">01:54:05</abbr></a>] &lt;<cite>nemik_</cite>&gt; <q>still...assembly :/ but my hesitation is probably because i'd never really done it before</q></li>
<li class="quit">[<a href="#T01:54:14" id="T01:54:14"><abbr title="2013-01-30T01:54:14+00:00">01:54:14</abbr></a>] <span>* emeb (~ericb@ip72-201-78-226.ph.ph.cox.net) Quit (Quit: Leaving.)</span></li>
<li class="message">[<a href="#T01:54:52" id="T01:54:52"><abbr title="2013-01-30T01:54:52+00:00">01:54:52</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>nemik: it's really "easy" on the small scale ??? but tedious on the larger scale.</q></li>
<li class="message">[<a href="#T01:54:57" id="T01:54:57"><abbr title="2013-01-30T01:54:57+00:00">01:54:57</abbr></a>] &lt;<cite>mdp</cite>&gt; <q>nemik_: I don't even have a neckbeard and even I can do assembly ;) not sure why it's a big deal</q></li>
<li class="message">[<a href="#T01:55:11" id="T01:55:11"><abbr title="2013-01-30T01:55:11+00:00">01:55:11</abbr></a>] &lt;<cite>mdp</cite>&gt; <q>it's not like you are writing a spreadsheet app in assembly here</q></li>
<li class="join">[<a href="#T01:55:59" id="T01:55:59"><abbr title="2013-01-30T01:55:59+00:00">01:55:59</abbr></a>] <span>* eikeon (~eikeon@pool-108-56-52-43.washdc.east.verizon.net) has joined #beagle</span></li>
<li class="message">[<a href="#T01:56:17" id="T01:56:17"><abbr title="2013-01-30T01:56:17+00:00">01:56:17</abbr></a>] &lt;<cite>mdp</cite>&gt; <q>it's a tiny investment for having determinism..ask mranostay how it quickly fixed his nixie tube problem</q></li>
<li class="message">[<a href="#T01:56:31" id="T01:56:31"><abbr title="2013-01-30T01:56:31+00:00">01:56:31</abbr></a>] &lt;<cite>nemik_</cite>&gt; <q>yea you're right. i should spend a couple days with it and try it. the real nice thing there is the bin file is then upgradeable as part of the OS. no need to deal with the bootloaders on separate chips and their firmware</q></li>
<li class="message">[<a href="#T01:56:56" id="T01:56:56"><abbr title="2013-01-30T01:56:56+00:00">01:56:56</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>I can't grow a neckbeard, freakin' follicles! who needs 'em!</q></li>
<li class="message">[<a href="#T01:57:06" id="T01:57:06"><abbr title="2013-01-30T01:57:06+00:00">01:57:06</abbr></a>] &lt;<cite>nemik_</cite>&gt; <q>nah, this isn't really about determinism for me but i get what you mean</q></li>
<li class="join">[<a href="#T01:57:24" id="T01:57:24"><abbr title="2013-01-30T01:57:24+00:00">01:57:24</abbr></a>] <span>* emeb_mac (~ericb@ip72-201-78-226.ph.ph.cox.net) has joined #beagle</span></li>
<li class="message">[<a href="#T01:57:25" id="T01:57:25"><abbr title="2013-01-30T01:57:25+00:00">01:57:25</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>yeah it is a solid conversation</q></li>
<li class="join">[<a href="#T01:58:51" id="T01:58:51"><abbr title="2013-01-30T01:58:51+00:00">01:58:51</abbr></a>] <span>* eikeon_ (~eikeon@pool-108-56-50-216.washdc.east.verizon.net) has joined #beagle</span></li>
<li class="message">[<a href="#T01:59:05" id="T01:59:05"><abbr title="2013-01-30T01:59:05+00:00">01:59:05</abbr></a>] &lt;<cite>nemik_</cite>&gt; <q>speaking of which, it appears the PRU can access the GPIO banks 0 and 1? and can then make any of those pins into interrupts? that would be real nice...</q></li>
<li class="quit">[<a href="#T02:00:35" id="T02:00:35"><abbr title="2013-01-30T02:00:35+00:00">02:00:35</abbr></a>] <span>* eikeon (~eikeon@pool-108-56-52-43.washdc.east.verizon.net) Quit (Ping timeout: 248 seconds)</span></li>
<li class="nick-change">[<a href="#T02:00:36" id="T02:00:36"><abbr title="2013-01-30T02:00:36+00:00">02:00:36</abbr></a>] <span>* eikeon_ is now known as eikeon</span></li>
<li class="join">[<a href="#T02:00:45" id="T02:00:45"><abbr title="2013-01-30T02:00:45+00:00">02:00:45</abbr></a>] <span>* axMountain (~Daniel@cust-95-80-44-248.csbnet.se) has joined #beagle</span></li>
<li class="message">[<a href="#T02:02:15" id="T02:02:15"><abbr title="2013-01-30T02:02:15+00:00">02:02:15</abbr></a>] &lt;<cite>mranostay</cite>&gt; <q>nemik_: well if you mean poll their state then yes :)</q></li>
<li class="message">[<a href="#T02:03:00" id="T02:03:00"><abbr title="2013-01-30T02:03:00+00:00">02:03:00</abbr></a>] &lt;<cite>mranostay</cite>&gt; <q>and it isn't really GPIO there is mux setting to have the PRU access it</q></li>
<li class="quit">[<a href="#T02:03:07" id="T02:03:07"><abbr title="2013-01-30T02:03:07+00:00">02:03:07</abbr></a>] <span>* eikeon (~eikeon@pool-108-56-50-216.washdc.east.verizon.net) Quit (Read error: Connection reset by peer)</span></li>
<li class="message">[<a href="#T02:03:09" id="T02:03:09"><abbr title="2013-01-30T02:03:09+00:00">02:03:09</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>yeah that mux is nifty</q></li>
<li class="message">[<a href="#T02:03:25" id="T02:03:25"><abbr title="2013-01-30T02:03:25+00:00">02:03:25</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>that's how I found those DMTimers</q></li>
<li class="message">[<a href="#T02:03:43" id="T02:03:43"><abbr title="2013-01-30T02:03:43+00:00">02:03:43</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>and ended up here???.</q></li>
<li class="join">[<a href="#T02:03:56" id="T02:03:56"><abbr title="2013-01-30T02:03:56+00:00">02:03:56</abbr></a>] <span>* eikeon (~eikeon@pool-108-56-50-216.washdc.east.verizon.net) has joined #beagle</span></li>
<li class="message">[<a href="#T02:06:26" id="T02:06:26"><abbr title="2013-01-30T02:06:26+00:00">02:06:26</abbr></a>] &lt;<cite>nemik_</cite>&gt; <q>mranostay: hmmm the pulses i'm looking for are ~50 uS and i can't miss one.</q></li>
<li class="message">[<a href="#T02:08:22" id="T02:08:22"><abbr title="2013-01-30T02:08:22+00:00">02:08:22</abbr></a>] &lt;<cite>nemik_</cite>&gt; <q>at 200 mhz i suppose that could work depending on how many i need and what else it might be doing</q></li>
<li class="message">[<a href="#T02:08:35" id="T02:08:35"><abbr title="2013-01-30T02:08:35+00:00">02:08:35</abbr></a>] &lt;<cite>mranostay</cite>&gt; <q>nemik_: two cores :)</q></li>
<li class="join">[<a href="#T02:08:43" id="T02:08:43"><abbr title="2013-01-30T02:08:43+00:00">02:08:43</abbr></a>] <span>* sr105 (~sr105@4.59.92.178) has joined #beagle</span></li>
<li class="message">[<a href="#T02:09:16" id="T02:09:16"><abbr title="2013-01-30T02:09:16+00:00">02:09:16</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>are you just counting pulses?</q></li>
<li class="message">[<a href="#T02:09:46" id="T02:09:46"><abbr title="2013-01-30T02:09:46+00:00">02:09:46</abbr></a>] &lt;<cite>nemik_</cite>&gt; <q>toneeee: yea, just that. and good point mranostay</q></li>
<li class="join">[<a href="#T02:17:47" id="T02:17:47"><abbr title="2013-01-30T02:17:47+00:00">02:17:47</abbr></a>] <span>* alan_o (~alan@68.62.254.211) has joined #beagle</span></li>
<li class="message">[<a href="#T02:20:03" id="T02:20:03"><abbr title="2013-01-30T02:20:03+00:00">02:20:03</abbr></a>] &lt;<cite>mrpackethead_</cite>&gt; <q>i got four outputs of DMX up and running on teh PRU</q></li>
<li class="message">[<a href="#T02:20:19" id="T02:20:19"><abbr title="2013-01-30T02:20:19+00:00">02:20:19</abbr></a>] &lt;<cite>mrpackethead_</cite>&gt; <q>its wonderful for that kind of thing.</q></li>
<li class="message">[<a href="#T02:20:46" id="T02:20:46"><abbr title="2013-01-30T02:20:46+00:00">02:20:46</abbr></a>] &lt;<cite>mrpackethead_</cite>&gt; <q>DMX has got some whacky breaks and pauses in it, that makes using a Standard UART possible, but not allways easy</q></li>
<li class="message">[<a href="#T02:20:58" id="T02:20:58"><abbr title="2013-01-30T02:20:58+00:00">02:20:58</abbr></a>] &lt;<cite>mrpackethead_</cite>&gt; <q>being able to bit bang it out, is great</q></li>
<li class="message">[<a href="#T02:20:59" id="T02:20:59"><abbr title="2013-01-30T02:20:59+00:00">02:20:59</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>you are Mr DMX, mph</q></li>
<li class="message">[<a href="#T02:21:25" id="T02:21:25"><abbr title="2013-01-30T02:21:25+00:00">02:21:25</abbr></a>] &lt;<cite>nemik_</cite>&gt; <q>nice!</q></li>
<li class="message">[<a href="#T02:21:40" id="T02:21:40"><abbr title="2013-01-30T02:21:40+00:00">02:21:40</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>it's cool; I run a recording studio for funzies but I do not do much  live work and thus only know peripherally of DMX (pun intended)</q></li>
<li class="message">[<abbr title="2013-01-30T02:21:40+00:00">02:21:40</abbr>] &lt;<cite>mrpackethead_</cite>&gt; <q>The PRU also can do some pretty complex task</q></li>
<li class="message">[<a href="#T02:22:08" id="T02:22:08"><abbr title="2013-01-30T02:22:08+00:00">02:22:08</abbr></a>] &lt;<cite>mrpackethead_</cite>&gt; <q>like run ethercat or profinet</q></li>
<li class="message">[<a href="#T02:22:18" id="T02:22:18"><abbr title="2013-01-30T02:22:18+00:00">02:22:18</abbr></a>] &lt;<cite>mrpackethead_</cite>&gt; <q>where you need very high determinitic behavior</q></li>
<li class="message">[<a href="#T02:22:26" id="T02:22:26"><abbr title="2013-01-30T02:22:26+00:00">02:22:26</abbr></a>] &lt;<cite>mrpackethead_</cite>&gt; <q>for industrial control.</q></li>
<li class="message">[<a href="#T02:26:42" id="T02:26:42"><abbr title="2013-01-30T02:26:42+00:00">02:26:42</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>mrpackethead_: thanks for reminding me to look up Ethercat. I'd never heard of it (not in controls) until I looked through the SPRUH73G document and was curious about it.</q></li>
<li class="message">[<a href="#T02:27:03" id="T02:27:03"><abbr title="2013-01-30T02:27:03+00:00">02:27:03</abbr></a>] &lt;<cite>mrpackethead_</cite>&gt; <q>TI have a board called the ICE</q></li>
<li class="message">[<a href="#T02:27:17" id="T02:27:17"><abbr title="2013-01-30T02:27:17+00:00">02:27:17</abbr></a>] &lt;<cite>mrpackethead_</cite>&gt; <q>AM3559</q></li>
<li class="message">[<a href="#T02:27:22" id="T02:27:22"><abbr title="2013-01-30T02:27:22+00:00">02:27:22</abbr></a>] &lt;<cite>toneeee</cite>&gt; <q>k</q></li>
<li class="message">[<a href="#T02:27:26" id="T02:27:26"><abbr title="2013-01-30T02:27:26+00:00">02:27:26</abbr></a>] &lt;<cite>mrpackethead_</cite>&gt; <q>plus the relevent PHY</q></li>
<li class="join">[<a href="#T02:37:15" id="T02:37:15"><abbr title="2013-01-30T02:37:15+00:00">02:37:15</abbr></a>] <span>* smplman (~speery@74-134-50-76.dhcp.insightbb.com) has joined #beagle</span></li>
<li class="quit">[<a href="#T02:41:13" id="T02:41:13"><abbr title="2013-01-30T02:41:13+00:00">02:41:13</abbr></a>] <span>* KeatonT (~textual@unaffiliated/keatont) Quit (Quit: Textual IRC Client: <a href="http://www.textualapp.com/)">http://www.textualapp.com/)</a></span></li>
<li class="quit">[<a href="#T02:48:03" id="T02:48:03"><abbr title="2013-01-30T02:48:03+00:00">02:48:03</abbr></a>] <span>* tema (~tema@178-16-155-142.obit.ru) Quit (Ping timeout: 276 seconds)</span></li>
<li class="join">[<a href="#T03:03:09" id="T03:03:09"><abbr title="2013-01-30T03:03:09+00:00">03:03:09</abbr></a>] <span>* Ceriand|desktop (~Ceriand@unaffiliated/ceriand) has joined #beagle</span></li>
<li class="quit">[<a href="#T03:05:12" id="T03:05:12"><abbr title="2013-01-30T03:05:12+00:00">03:05:12</abbr></a>] <span>* stahl (~stahl@77-57-188-4.dclient.hispeed.ch) Quit (Ping timeout: 255 seconds)</span></li>
<li class="quit">[<a href="#T03:09:41" id="T03:09:41"><abbr title="2013-01-30T03:09:41+00:00">03:09:41</abbr></a>] <span>* AndrevS (~andre_bk@2001:980:55e0:1:20f:eaff:fe58:28f8) Quit (Quit: Leaving)</span></li>
<li class="join">[<a href="#T03:45:34" id="T03:45:34"><abbr title="2013-01-30T03:45:34+00:00">03:45:34</abbr></a>] <span>* thurbad (~natesewel@cpe-70-113-204-247.austin.res.rr.com) has joined #beagle</span></li>
<li class="join">[<a href="#T03:54:54" id="T03:54:54"><abbr title="2013-01-30T03:54:54+00:00">03:54:54</abbr></a>] <span>* zoby (52ea429e@gateway/web/freenode/ip.82.234.66.158) has joined #beagle</span></li>
<li class="join">[<a href="#T03:56:27" id="T03:56:27"><abbr title="2013-01-30T03:56:27+00:00">03:56:27</abbr></a>] <span>* jet (~jerome@mna75-8-82-234-66-158.fbx.proxad.net) has joined #beagle</span></li>
<li class="quit">[<a href="#T03:57:28" id="T03:57:28"><abbr title="2013-01-30T03:57:28+00:00">03:57:28</abbr></a>] <span>* eikeon (~eikeon@pool-108-56-50-216.washdc.east.verizon.net) Quit (Ping timeout: 272 seconds)</span></li>
