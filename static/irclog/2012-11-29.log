<li class="quit">[<a href="#T00:03:50" id="T00:03:50"><abbr title="2012-11-29T00:03:50+00:00">00:03:50</abbr></a>] <span>* mhaberler_ (~mhaberler@macbook.stiwoll.mah.priv.at) Quit (Quit: mhaberler_)</span></li>
<li class="quit">[<a href="#T00:18:39" id="T00:18:39"><abbr title="2012-11-29T00:18:39+00:00">00:18:39</abbr></a>] <span>* tema (~tema@92-100-174-78.dynamic.avangarddsl.ru) Quit (Ping timeout: 256 seconds)</span></li>
<li class="join">[<a href="#T00:20:13" id="T00:20:13"><abbr title="2012-11-29T00:20:13+00:00">00:20:13</abbr></a>] <span>* juvenal (~juvenal@200-100-8-87.dsl.telesp.net.br) has joined #beagle</span></li>
<li class="quit">[<a href="#T00:42:26" id="T00:42:26"><abbr title="2012-11-29T00:42:26+00:00">00:42:26</abbr></a>] <span>* alan_o (~alan@rrcs-71-43-66-98.se.biz.rr.com) Quit (Ping timeout: 250 seconds)</span></li>
<li class="join">[<a href="#T00:52:15" id="T00:52:15"><abbr title="2012-11-29T00:52:15+00:00">00:52:15</abbr></a>] <span>* karepee (~karepee@107-196-212-245.lightspeed.rlghnc.sbcglobal.net) has joined #beagleboard</span></li>
<li class="join">[<abbr title="2012-11-29T00:52:15+00:00">00:52:15</abbr>] <span>* karepee (~karepee@107-196-212-245.lightspeed.rlghnc.sbcglobal.net) has joined #beagle</span></li>
<li class="quit">[<a href="#T00:52:57" id="T00:52:57"><abbr title="2012-11-29T00:52:57+00:00">00:52:57</abbr></a>] <span>* bhthompson1 (bhthompson@nat/google/x-evzcuztcnlychrtk) Quit (Quit: Leaving.)</span></li>
<li class="part">[<a href="#T00:56:05" id="T00:56:05"><abbr title="2012-11-29T00:56:05+00:00">00:56:05</abbr></a>] <span>* karepee (~karepee@107-196-212-245.lightspeed.rlghnc.sbcglobal.net) has left #beagleboard</span></li>
<li class="part">[<a href="#T00:56:13" id="T00:56:13"><abbr title="2012-11-29T00:56:13+00:00">00:56:13</abbr></a>] <span>* karepee (~karepee@107-196-212-245.lightspeed.rlghnc.sbcglobal.net) has left #beagle</span></li>
<li class="join">[<a href="#T01:03:05" id="T01:03:05"><abbr title="2012-11-29T01:03:05+00:00">01:03:05</abbr></a>] <span>* bwlang (~anonymous@c-24-128-3-110.hsd1.ma.comcast.net) has joined #beagleboard</span></li>
<li class="part">[<a href="#T01:04:02" id="T01:04:02"><abbr title="2012-11-29T01:04:02+00:00">01:04:02</abbr></a>] <span>* bwlang (~anonymous@c-24-128-3-110.hsd1.ma.comcast.net) has left #beagleboard</span></li>
<li class="quit">[<a href="#T01:15:06" id="T01:15:06"><abbr title="2012-11-29T01:15:06+00:00">01:15:06</abbr></a>] <span>* koen (~koen@ip4da2a5ae.direct-adsl.nl) Quit (Ping timeout: 264 seconds)</span></li>
<li class="join">[<a href="#T01:15:40" id="T01:15:40"><abbr title="2012-11-29T01:15:40+00:00">01:15:40</abbr></a>] <span>* koen (~koen@ip4da2a5ae.direct-adsl.nl) has joined #beagle</span></li>
<li class="join">[<a href="#T01:25:10" id="T01:25:10"><abbr title="2012-11-29T01:25:10+00:00">01:25:10</abbr></a>] <span>* alan_o (~alan@68.62.240.236) has joined #beagle</span></li>
<li class="quit">[<a href="#T01:29:06" id="T01:29:06"><abbr title="2012-11-29T01:29:06+00:00">01:29:06</abbr></a>] <span>* juvenal (~juvenal@200-100-8-87.dsl.telesp.net.br) Quit (Quit: Computer has gone to sleep.)</span></li>
<li class="quit">[<a href="#T01:31:23" id="T01:31:23"><abbr title="2012-11-29T01:31:23+00:00">01:31:23</abbr></a>] <span>* rcranetx (~rcranetx@nat/ti/x-zkxqjtscnvskxkdi) Quit (Remote host closed the connection)</span></li>
<li class="join">[<a href="#T01:32:53" id="T01:32:53"><abbr title="2012-11-29T01:32:53+00:00">01:32:53</abbr></a>] <span>* djerome (~djerome@ip68-2-20-108.ph.ph.cox.net) has joined #beaglebone</span></li>
<li class="join">[<a href="#T01:40:13" id="T01:40:13"><abbr title="2012-11-29T01:40:13+00:00">01:40:13</abbr></a>] <span>* juvenal (~juvenal@200-100-8-87.dsl.telesp.net.br) has joined #beagle</span></li>
<li class="message">[<a href="#T01:44:02" id="T01:44:02"><abbr title="2012-11-29T01:44:02+00:00">01:44:02</abbr></a>] &lt;<cite>Crofton</cite>&gt; <q>mru, does gcc 4.7 make you use fast-math to get neon?</q></li>
<li class="message">[<a href="#T01:45:21" id="T01:45:21"><abbr title="2012-11-29T01:45:21+00:00">01:45:21</abbr></a>] &lt;<cite>mru</cite>&gt; <q>depends on what you mean</q></li>
<li class="message">[<a href="#T01:45:54" id="T01:45:54"><abbr title="2012-11-29T01:45:54+00:00">01:45:54</abbr></a>] &lt;<cite>Crofton</cite>&gt; <q>so we are playing with some NEON stuff here</q></li>
<li class="message">[<a href="#T01:46:18" id="T01:46:18"><abbr title="2012-11-29T01:46:18+00:00">01:46:18</abbr></a>] &lt;<cite>mru</cite>&gt; <q>you should only use -ffast-math if you're certain the things it does are safe with your code</q></li>
<li class="message">[<a href="#T01:46:23" id="T01:46:23"><abbr title="2012-11-29T01:46:23+00:00">01:46:23</abbr></a>] &lt;<cite>Crofton</cite>&gt; <q>ans the guy doing the work said no neon until he turned on fast-math</q></li>
<li class="message">[<a href="#T01:46:30" id="T01:46:30"><abbr title="2012-11-29T01:46:30+00:00">01:46:30</abbr></a>] &lt;<cite>mru</cite>&gt; <q>bullshit</q></li>
<li class="message">[<a href="#T01:46:49" id="T01:46:49"><abbr title="2012-11-29T01:46:49+00:00">01:46:49</abbr></a>] &lt;<cite>Crofton</cite>&gt; <q>that is what I was was wondering</q></li>
<li class="message">[<a href="#T01:46:57" id="T01:46:57"><abbr title="2012-11-29T01:46:57+00:00">01:46:57</abbr></a>] &lt;<cite>mru</cite>&gt; <q>some of the options -ffast-math enables are required for auto-vectoriser to be useful in some cases</q></li>
<li class="message">[<abbr title="2012-11-29T01:46:57+00:00">01:46:57</abbr>] &lt;<cite>ds2</cite>&gt; <q>how close is gcc 4.7 to what you can get with armcc?</q></li>
<li class="message">[<a href="#T01:47:04" id="T01:47:04"><abbr title="2012-11-29T01:47:04+00:00">01:47:04</abbr></a>] &lt;<cite>Crofton</cite>&gt; <q>basically, he is trying to do something with intrinsics</q></li>
<li class="message">[<a href="#T01:47:07" id="T01:47:07"><abbr title="2012-11-29T01:47:07+00:00">01:47:07</abbr></a>] &lt;<cite>mru</cite>&gt; <q>ds2: who cares?</q></li>
<li class="message">[<a href="#T01:47:21" id="T01:47:21"><abbr title="2012-11-29T01:47:21+00:00">01:47:21</abbr></a>] &lt;<cite>mru</cite>&gt; <q>ds2: both are a far cry from what you can do by hand</q></li>
<li class="message">[<a href="#T01:47:24" id="T01:47:24"><abbr title="2012-11-29T01:47:24+00:00">01:47:24</abbr></a>] &lt;<cite>Crofton</cite>&gt; <q>and without fast-math and -O something, the NEON disappered</q></li>
<li class="message">[<a href="#T01:47:34" id="T01:47:34"><abbr title="2012-11-29T01:47:34+00:00">01:47:34</abbr></a>] &lt;<cite>mru</cite>&gt; <q>I say bullshit</q></li>
<li class="message">[<a href="#T01:47:43" id="T01:47:43"><abbr title="2012-11-29T01:47:43+00:00">01:47:43</abbr></a>] &lt;<cite>Crofton</cite>&gt; <q>heh</q></li>
<li class="message">[<a href="#T01:47:55" id="T01:47:55"><abbr title="2012-11-29T01:47:55+00:00">01:47:55</abbr></a>] &lt;<cite>mru</cite>&gt; <q>intrinsics give you the instructions you say provided you have -mfpu=neon</q></li>
<li class="message">[<a href="#T01:48:00" id="T01:48:00"><abbr title="2012-11-29T01:48:00+00:00">01:48:00</abbr></a>] &lt;<cite>Crofton</cite>&gt; <q>I wish I had a small example</q></li>
<li class="message">[<a href="#T01:48:08" id="T01:48:08"><abbr title="2012-11-29T01:48:08+00:00">01:48:08</abbr></a>] &lt;<cite>Crofton</cite>&gt; <q>hmm,</q></li>
<li class="message">[<a href="#T01:48:16" id="T01:48:16"><abbr title="2012-11-29T01:48:16+00:00">01:48:16</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>I thought armcc will do some basic stuff w/o using intrinsics?</q></li>
<li class="message">[<a href="#T01:48:22" id="T01:48:22"><abbr title="2012-11-29T01:48:22+00:00">01:48:22</abbr></a>] &lt;<cite>mru</cite>&gt; <q>ds2: as will gcc</q></li>
<li class="message">[<a href="#T01:48:30" id="T01:48:30"><abbr title="2012-11-29T01:48:30+00:00">01:48:30</abbr></a>] &lt;<cite>mru</cite>&gt; <q>some *very* basic stuff</q></li>
<li class="message">[<a href="#T01:48:35" id="T01:48:35"><abbr title="2012-11-29T01:48:35+00:00">01:48:35</abbr></a>] &lt;<cite>Crofton</cite>&gt; <q>we'll look further</q></li>
<li class="message">[<a href="#T01:48:48" id="T01:48:48"><abbr title="2012-11-29T01:48:48+00:00">01:48:48</abbr></a>] &lt;<cite>mru</cite>&gt; <q>in my testing, the auto-vectoriser does more harm than good</q></li>
<li class="message">[<a href="#T01:48:58" id="T01:48:58"><abbr title="2012-11-29T01:48:58+00:00">01:48:58</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>I see</q></li>
<li class="message">[<a href="#T01:49:19" id="T01:49:19"><abbr title="2012-11-29T01:49:19+00:00">01:49:19</abbr></a>] &lt;<cite>tholm</cite>&gt; <q>hi all, I'm working with SPI, I need to do a pulse on Chip select per word by each TX, does the kernel support that option?</q></li>
<li class="message">[<a href="#T01:50:22" id="T01:50:22"><abbr title="2012-11-29T01:50:22+00:00">01:50:22</abbr></a>] &lt;<cite>mru</cite>&gt; <q>Crofton: you do want to enable some of the options -ffast-math turns on</q></li>
<li class="message">[<a href="#T01:51:49" id="T01:51:49"><abbr title="2012-11-29T01:51:49+00:00">01:51:49</abbr></a>] &lt;<cite>alan_o</cite>&gt; <q>tholm: CS should go down (active) and back up again (idle) around the call for each spi message</q></li>
<li class="message">[<a href="#T01:51:59" id="T01:51:59"><abbr title="2012-11-29T01:51:59+00:00">01:51:59</abbr></a>] &lt;<cite>tholm</cite>&gt; <q>yes alan_o</q></li>
<li class="message">[<a href="#T01:53:33" id="T01:53:33"><abbr title="2012-11-29T01:53:33+00:00">01:53:33</abbr></a>] &lt;<cite>alan_o</cite>&gt; <q>tholm: not sure what you mean</q></li>
<li class="message">[<a href="#T01:53:56" id="T01:53:56"><abbr title="2012-11-29T01:53:56+00:00">01:53:56</abbr></a>] &lt;<cite>alan_o</cite>&gt; <q>tholm: do you mean you need the CS to go down and back up again around each 4 bytes?</q></li>
<li class="message">[<a href="#T01:53:57" id="T01:53:57"><abbr title="2012-11-29T01:53:57+00:00">01:53:57</abbr></a>] &lt;<cite>mru</cite>&gt; <q>Crofton: but you have to evaluate each one and make sure you're not doing something it breaks</q></li>
<li class="message">[<a href="#T01:55:48" id="T01:55:48"><abbr title="2012-11-29T01:55:48+00:00">01:55:48</abbr></a>] &lt;<cite>Crofton</cite>&gt; <q>I am somewhat stumped by the compiler making NEON go away</q></li>
<li class="message">[<a href="#T01:56:12" id="T01:56:12"><abbr title="2012-11-29T01:56:12+00:00">01:56:12</abbr></a>] &lt;<cite>mru</cite>&gt; <q>either someone is full of shit, or there's something you're not telling me</q></li>
<li class="message">[<a href="#T01:57:14" id="T01:57:14"><abbr title="2012-11-29T01:57:14+00:00">01:57:14</abbr></a>] &lt;<cite>tholm</cite>&gt; <q>for example alan_o I need to send 0xD000 (16 bit) and I will receive a data, but CS to go up and back down with the second word</q></li>
<li class="message">[<a href="#T01:57:43" id="T01:57:43"><abbr title="2012-11-29T01:57:43+00:00">01:57:43</abbr></a>] &lt;<cite>alan_o</cite>&gt; <q>tholm: can you make a separate message for each time you need CS to go down and back up?</q></li>
<li class="message">[<a href="#T01:58:19" id="T01:58:19"><abbr title="2012-11-29T01:58:19+00:00">01:58:19</abbr></a>] &lt;<cite>alan_o</cite>&gt; <q>tholm: then call spi_sync() or whatever you're doing on both messages?</q></li>
<li class="message">[<a href="#T01:58:55" id="T01:58:55"><abbr title="2012-11-29T01:58:55+00:00">01:58:55</abbr></a>] &lt;<cite>tholm</cite>&gt; <q>hold on alan_o I'll pastebin the code</q></li>
<li class="message">[<a href="#T01:59:01" id="T01:59:01"><abbr title="2012-11-29T01:59:01+00:00">01:59:01</abbr></a>] &lt;<cite>Crofton</cite>&gt; <q>like I said, I am annoyed we do not have something easy to show this with</q></li>
<li class="message">[<a href="#T01:59:02" id="T01:59:02"><abbr title="2012-11-29T01:59:02+00:00">01:59:02</abbr></a>] &lt;<cite>alan_o</cite>&gt; <q>tholm: I haven't seen a magic option to make it do what you're saying, but I haven't looked for it either.</q></li>
<li class="message">[<a href="#T01:59:31" id="T01:59:31"><abbr title="2012-11-29T01:59:31+00:00">01:59:31</abbr></a>] &lt;<cite>mru</cite>&gt; <q>Crofton: if you can't come up with a simple demonstration, the cause is likely not simple either</q></li>
