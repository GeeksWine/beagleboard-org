<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="helma.xsl"?>
<xmlroot xmlns:hop="http://www.helma.org/docs/guide/features/database">
  <hopobject id="3466" name="2014-02-25-project-spotlight-fish-on-wheels" prototype="Page" created="1393345842513" lastModified="1393346219306">
  <hop:parent idref="2912" prototyperef="Page"/>
    <is_xhtml type="boolean">true</is_xhtml>
    <http_remotehost>4.28.44.174</http_remotehost>
    <http_language>en-US,en;q=0.5</http_language>
    <uri>2014-02-25-project-spotlight-fish-on-wheels</uri>
    <http_browser>Mozilla/5.0 (Windows NT 6.1; rv:17.0) Gecko/20100101 Firefox/17.0</http_browser>
    <time type="date">25.02.2014 10:36:59 CST</time>
    <hopsession>4.28.44.1sffi58f9t0no</hopsession>
    <body>&lt;div&gt;
    &lt;div style=&quot;float:left;width:100%;&quot;&gt;
        &lt;h1&gt;BeagleBoard-xM project spotlight:&lt;br&gt;Fish on Wheels &lt;/h1&gt;
        &lt;p&gt;By Tara Stratton&lt;/p&gt;
       &lt;p&gt;
          Don’t drink and drive, unless you are the driver of today’s 
          featured Beagle project. That is, unless you are... a fish! 
           &lt;/p&gt;
           &lt;p&gt;
          Goldfish can now explore the world beyond the limits of the tank with 
          Fish on Wheels, a robotic car from Studio diip, a design shop in the 
          Netherlands. Fish on Wheels has made a splash (pun intended!) in 
          publications from Discovery and Popular Science to Hackaday and 
          Geek.com, receiving popular acclaim from people who wanted their own 
          goldfish at home to be able to put the pedal to the metal. 
           &lt;/p&gt;
           &lt;p&gt;
           &lt;img src=&quot;http://i.imgur.com/N5minc0.png&quot; HEIGHT=360 WIDTH=640&lt;/p&gt;&lt;p&gt;Image credit: Studio diip
           &lt;/p&gt;
           &lt;p&gt;
            As the goldfish swims, a Logitech C910 webcam stationed overhead 
            communicates with computer vision software running on a 
            Sitara-processor-powered BeagleBoard-xM computer. Using the 
            contrast of the fish with the bottom of the fish tank, the computer 
            is able to determine which direction the fish is swimming. 
            BeagleBoard-xM then talks to the chassis, powered by a Seed Hercules 
            Robot platform with Arduino, to tell it to drive in the direction 
            that the fish is swimming. Please note, seatbelts are not included, 
            so tell your goldfish to avoid the stairs! 
        &lt;/p&gt;
        &lt;p&gt;
         &lt;img src=&quot;http://i.imgur.com/jaYiSpO.jpg&quot; HEIGHT=360 WIDTH=640&lt;/p&gt;&lt;p&gt;Image credit: Studio diip
           &lt;/p&gt;
           &lt;p&gt;
            “We thought of developing Fish on Wheels because we wanted to have 
            something to showcase the possibilities of computer vision 
            technology. We then came to the idea that with computer vision, 
            even animals would be able to control devices. The best way to show 
            this was to enable fish to drive their own aquarium wherever they 
            want to go,” said Thomas de Wolf, business manager and co-founder 
            of Studio diip.  
            &lt;/p&gt;
            &lt;p&gt;
            &lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;//www.youtube.com/v/YbNmL6hSNKw?version=3&amp;amp;hl=en_US&amp;amp;rel=0&quot;&gt;&lt;/param&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot;&gt;&lt;/param&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot;&gt;&lt;/param&gt;&lt;embed src=&quot;//www.youtube.com/v/YbNmL6hSNKw?version=3&amp;amp;hl=en_US&amp;amp;rel=0&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot;&gt;&lt;/embed&gt;&lt;/object&gt; 
            &lt;/p&gt;&lt;p&gt;
           While the above video shows Fish on Wheels as a smooth operation, 
           Thomas says that it was not always so. The team faced a challenge in 
           being able to smoothly control the motors of the robot platform so 
           that water wouldn’t spill over the edge of the aquarium, leaving 
           Goldie out to dry. They tested various options with the 
           BeagleBoard-xM and were eventually able to fine-tune the device. 
            &lt;/p&gt;
            &lt;p&gt;
            Thomas and his teams had several other reasons for choosing 
            BeagleBoard-xM for Fish on Wheels. “It offered the flexibility to 
            quickly create a working solution that gets the job done. It can 
            run on a battery for some time so that the whole device can run 
            autonomously,” said Thomas. The Studio diip team was also happy 
            that the BeagleBoard-xM can run Linux and is powerful enough for 
            computer vision tasks.
            &lt;/p&gt;
            &lt;p&gt;
            While the Fish on Wheels is a fantastic project, the Studio diip 
            team has bigger fish to fry! They are currently working on 
            enhancing a laser cutter with computer vision to make it possible 
            for anyone to operate the machine by simply sketching their idea. 
            For more information about the upcoming laser cutter, Fish on 
            Wheels, and other intelligent imaging projects from Studio diip, 
            check out www.studiodiip.com 
            or email the team at info@studiodiip.com.
            &lt;/p&gt;
            &lt;p&gt;
          
         
            &lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
           
    
            
    &lt;/div&gt;
&lt;/div&gt;</body>
    <pseudoparent idref="2912" prototyperef="Page"/>
    <http_referer>http://beagleboard.org/blog/2014-02-25-project-spotlight-fish-on-wheels/edit</http_referer>
    <http_host>beagleboard.org</http_host>
    <user>tarajstratton@gmail.com</user>
    <lang>en-us</lang>
  </hopobject>
</xmlroot>
