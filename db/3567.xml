<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="helma.xsl"?>
<xmlroot xmlns:hop="http://www.helma.org/docs/guide/features/database">
  <hopobject id="3567" name="Page" prototype="Page" created="1396975410691" lastModified="1396994544182">
  <hop:parent idref="0" prototyperef="Root"/>
    <is_xhtml type="boolean">true</is_xhtml>
    <http_remotehost>98.250.189.79</http_remotehost>
    <http_language>en-US,en;q=0.8</http_language>
    <uri>updater</uri>
    <http_browser>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.152 Safari/537.36</http_browser>
    <time type="date">08.04.2014 22:02:24 UTC</time>
    <hopsession>98.250.189.1sc85vus56lm</hopsession>
    <body>&lt;script type=&quot;text/javascript&quot; src=&quot;/static/bonescript.js&quot;&gt;&lt;/script&gt;
&lt;div id=&quot;floatMenu&quot;&gt;  
    &lt;ul&gt;   
        &lt;li id=&quot;fmStep1&quot;&gt;&lt;a href=&quot;#step1&quot;&gt;&lt;strong&gt;Step 1:&lt;/strong&gt;&lt;br /&gt;
            Connect to BeagleBone Black over home network&lt;/a&gt;&lt;/li&gt; 
        &lt;li id=&quot;fmStep2&quot;&gt;&lt;a href=&quot;#step2&quot;&gt;&lt;strong&gt;Step 2:&lt;/strong&gt;&lt;br /&gt;
            Insert blank uSD card and review contents&lt;/a&gt;&lt;/li&gt;         
        &lt;li id=&quot;fmStep3&quot;&gt;&lt;a href=&quot;#step3&quot;&gt;&lt;strong&gt;Step 3:&lt;/strong&gt;&lt;br /&gt;
            Select image to download&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&quot;gettingstarted&quot;&gt;
    &lt;h1&gt;BeagleBone Image Updater&lt;/h1&gt;
    &lt;p&gt;
        This step-by-step guide will use the BoneScript server on your
        BeagleBone Black to download the latest BeagleBone Black software image
        onto a uSD card
        connected inserted in your BeagleBone Black uSD card slot. To do this,
        you
        will need to have your BeagleBone Black connected to the Internet and
        visible to the computer you are using to visit this web page.
    &lt;/p&gt;
    &lt;h3 id=&quot;step1&quot;&gt;
        &lt;img class=&quot;steps&quot; src=&quot;/static/images/btn_step1.gif&quot; /&gt;
        &lt;strong&gt;Connect to BeagleBone Black over home network&lt;/strong&gt;
    &lt;/h3&gt;
    &lt;p&gt;
        As long as your BeagleBone Black is already running on of the images
        shipped with the boards, you should be good to plug it into your
        network and get connected to it from this web page. If not, you&apos;ll
        need to user other steps to download and flash the latest image:&lt;br /&gt;
        &lt;a href=&quot;/Getting%20Started#update&quot;&gt;http://beagleboard.org/Getting Started#update&lt;/a&gt;
    &lt;/p&gt;
    &lt;p&gt;
        Start by connecting your BeagleBone Black up to your router
        using an Ethernet cable as this is the simplest method. If you are
        an advanced user, you can try using a WiFi USB dongle or
        Internet Connection Sharing over USB.
    &lt;/p&gt;
    &lt;p&gt;
        Fetch the IP address of your board using the DHCP information
        provided by your router. Depending on your home network configuration,
        you might also find your BeagleBone Black using the &apos;beaglebone.local&apos;
        broadcast name.
    &lt;/p&gt;
    &lt;p&gt;
        When you type your board&apos;s address into the box below, a script will
        be copied onto your board to examine and update your uSD contents.
    &lt;/p&gt;
    &lt;input id=&quot;address&quot;&gt;&lt;/input&gt;
    &lt;pre id=&quot;step1-log&quot;&gt;&lt;/pre&gt;
    &lt;h3 id=&quot;step2&quot;&gt;
        &lt;img class=&quot;steps&quot; src=&quot;/static/images/btn_step2.gif&quot; /&gt;
        &lt;strong&gt;Insert blank uSD card and review contents&lt;/strong&gt;
    &lt;/h3&gt;
    &lt;p&gt;
        
    &lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;clear:both;&quot;&gt;&lt;/div&gt;
&lt;script&gt;
    var address = getParameterByName(&quot;address&quot;);
    var handlers = {initialized: run};
    if(address) {
        $(&apos;#step1-log&apos;).append(&quot;Attempting connection to &quot; + address + &apos;\n&apos;);
        setTargetAddress(address, handlers);
    }
    $(&apos;#address&apos;).keypress(onAddress);
    
    function onAddress(e) {
        if(e.which == 10 || e.which == 13) {
            address = $(&apos;#address&apos;).val();
            $(&apos;#step1-log&apos;).append(&quot;Attempting connection to &quot; + address + &apos;\n&apos;);
            setTargetAddress(address, handlers);
        }
    }
    
    function getParameterByName(name) {
        name = name.replace(/[\[]/, &quot;\\\[&quot;).replace(/[\]]/, &quot;\\\]&quot;);
        var regex = new RegExp(&quot;[\\?&amp;]&quot; + name + &quot;=([^&amp;#]*)&quot;), results = regex.exec(location.search);
        return results == null ? &quot;&quot; : decodeURIComponent(results[1].replace(/\+/g, &quot; &quot;));
    }

    function run() {
        $(&apos;#step1-log&apos;).append(&apos;Connected to &apos; + address + &apos;\n&apos;);
        var b = require(&apos;bonescript&apos;);
        
        var sourceJS = &apos;/static/updater.js&apos;;
        var targetJS = &apos;/var/lib/cloud9/autorun/updater.js&apos;;
        var verifyFile = &apos;/tmp/verify-updater.json&apos;;
        b.getPlatform(onGetPlatform);

        function onGetPlatform(platform) {
            $(&apos;#step1-log&apos;).append(&quot;Running BoneScript version &quot; + platform.bonescript + &apos;\n&apos;);
            b.setDate(Date().toString(), onSetDate);
        }

        function onSetDate() {
            $(&apos;#step1-log&apos;).append(&quot;Reading &quot; + sourceJS + &apos;\n&apos;);
            jQuery.get(sourceJS, onJSReadSuccess, &apos;text&apos;).fail(onJSReadFail);
        }

        function onJSReadSuccess(contentsJS) {
            $(&apos;#step1-log&apos;).append(&quot;Writing &quot; + targetJS + &apos;\n&apos;);
            b.writeTextFile(targetJS, contentsJS, onJSWritten);
        }

        function onJSReadFail() {
            $(&apos;#step1-log&apos;).append(&quot;Failed to read &quot; + targetJS + &apos;\n&apos;);
        }
        
        var verifyAttempts = 0;
        function onJSWritten() {
            $(&apos;#step1-log&apos;).append(&quot;Waiting 3 seconds...\n&quot;);
            setTimeout(verifyRead, 3000);
        }
        
        function verifyRead() {
            verifyAttempts++;
            $(&apos;#step1-log&apos;).append(&quot;Reading verification file &quot; + verifyFile + &apos;\n&apos;);
            b.readTextFile(verifyFile, onVerifyRead)            
        }
        
        function onVerifyRead(x) {
            if(x.err) {
                if(verifyAttempts &lt; 5) {
                    onJSWritten();
                } else {
                    $(&apos;#step1-log&apos;).append(&quot;Connection failed\n&quot;);                    
                }
            } else {
                var data = JSON.parse(x.data);
                var date = new Date();
                var diff = Math.abs(Date(date.date).valueOf() - date.valueOf());
                $(&apos;#step1-log&apos;).append(&quot;Confirming time stamp: &quot; + diff + &apos;\n&apos;);
                //$(&apos;#step1-log&apos;).append(JSON.stringify(data, null, 4) + &apos;\n&apos;);
                if(data.date &amp;&amp; (diff &lt; 60000)) {
                    stepOneDone();    
                } else {
                    onJSWritten();
                }
            }
        }
        
        function stepOneDone() {
            $(&apos;#step1-log&apos;).append(&quot;Connection successful... on to Step #2\n&quot;);
            setTimeout(nextStep, 0);
        }
        
        function nextStep() {
            $(&apos;#fmStep1&apos;).addClass(&apos;fmGreen&apos;);
            location.href = &quot;#&quot;;
            location.href = &quot;#step2&quot;;    
        }
    }
&lt;/script&gt;</body>
    <pseudoparent idref="0" prototyperef="Root"/>
    <http_referer>http://beagleboard.org/updater/edit</http_referer>
    <http_host>beagleboard.org</http_host>
    <user>jkridner.wordpress.com</user>
    <lang>en-us</lang>
  </hopobject>
</xmlroot>
