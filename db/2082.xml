<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="helma.xsl"?>
<xmlroot xmlns:hop="http://www.helma.org/docs/guide/features/database">
  <hopobject id="2082" name="bonescript" prototype="Page" created="1346351014499" lastModified="1395764235508">
  <hop:parent idref="20" prototyperef="Page"/>
    <edit_skin>edit_project</edit_skin>
    <updatetime type="date">30.08.2012 18:23:34 UTC</updatetime>
    <uri>bonescript</uri>
    <time type="date">30.08.2012 18:23:34 UTC</time>
    <pseudoparent idref="20" prototyperef="Page"/>
    <registrant>blog.hangerhead.com</registrant>
    <pname>Bonescript</pname>
    <user>blog.hangerhead.com</user>
    <pvcount type="float">24.0</pvcount>
    <body>&lt;p&gt;Simple open hardware platforms, such as the Arduino, have reignited interest in electronic systems design as a hobby, accessible to those outside the industry. While the Arduino platform has given us a model of simplicity that enables novices to build their own inventions with components as complex as a microcontroller, even greater simplicity and collaboration are possible by utilizing the full capabilities of Linux and such familiar technologies as building web pages.
&lt;/p&gt;&lt;p&gt;
JavaScript is the programming language of the web and a logical first choice for new programmers. By providing the development environment over the web using Cloud9 IDE, familiarity is maintained from top to bottom building on the same technology and language. Additionally, lengthy download and installation of tools is not required, nor any permission to alter a computer host that is often used for more passive experiences such as browsing the Internet. Avoiding any surprises is a critical aspect of building a platform for inexperienced users and the universality of JavaScript provides new opportunities to avoid such surprises or delays to success.
&lt;/p&gt;&lt;p&gt;
The event-driven model of Node.JS’s JavaScript implementation provides an optimized approach to handling embedded I/O. When a sensor provides data, JavaScript closure functions provide an easy-to-use mechanism to efficiently and responsively update a web-based user interface providing visualizations of the data.
&lt;/p&gt;
 &lt;iframe src=&quot;http://www.slideshare.net/slideshow/embed_code/13698237&quot; width=&quot;427&quot; height=&quot;356&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px&quot; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;http://www.slideshare.net/OReillyOSCON/bonescript-at-oscon-2012&quot; title=&quot;Bonescript at oscon 2012&quot; target=&quot;_blank&quot;&gt;Bonescript at oscon 2012&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;http://www.slideshare.net/OReillyOSCON&quot; target=&quot;_blank&quot;&gt;OSCON Byrum&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;
&lt;br /&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/ZgDtklInLSg&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;</body>
    <errmsg></errmsg>
    <homepage>https://github.com/jadonk/bonescript</homepage>
    <render_skin>project</render_skin>
    <shortdesc>Physical computing library in Node.JS</shortdesc>
    <rssfeed></rssfeed>
  </hopobject>
</xmlroot>
