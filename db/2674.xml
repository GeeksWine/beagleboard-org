<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="helma.xsl"?>
<xmlroot xmlns:hop="http://www.helma.org/docs/guide/features/database">
  <hopobject id="2674" name="minix-i2c" prototype="Page" created="1369684405230" lastModified="1395759211573">
  <hop:parent idref="20" prototyperef="Page"/>
    <is_xhtml type="boolean">true</is_xhtml>
    <http_remotehost>127.0.0.1</http_remotehost>
    <pname>Minix I2C Drivers for the BeagleBone Black </pname>
    <registrant>www.tomcort.com</registrant>
    <http_language>en-US,en;q=0.8</http_language>
    <uri>minix-i2c</uri>
    <http_browser>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.71 Safari/537.36</http_browser>
    <time type="date">04.08.2013 21:29:42 CDT</time>
    <updatetime type="date">27.05.2013 14:53:25 CDT</updatetime>
    <hopsession>127.0.0.173.176.153.zfkznt3s5o9x</hopsession>
    <body>&lt;p&gt;The project is to develop a generic I2C driver subsystem for the Minix operating system, and then use it to write drivers for I2C devices on the new BeagleBone Black, BeagleBone White, and BeagleBoard-xM. The primary programming language will be C, and the code will be open source under Minix&apos;s BSD-style license. These drivers will enable the BeagleBoard.org community to run Minix on the new BeagleBone with drivers that allow them to take advantage of more of the hardware features. The generic I2C driver will setup the I2C registers, take the I2C module out of reset, initialize the I2C buses, handle interrupts, initiate transfers, and transmit/receive data. An interface to the generic I2C driver will be developed in Minix&apos;s libsys. The other drivers will interact with I2C through that interface. The interface will be the same that NetBSD and OpenBSD provide. As a first test to verify that the basics of that interface are working, I will use NetBSD&apos;s usr.sbin/i2scan program and import it into Minix&apos;s base system. Following that, I will develop a driver for the EEPROM to get information about the board. After that, I will enhance the framebuffer driver to support EDID via the TDA19988. If time permits, I would work on the driver for the power management chip (TPS65217C). The Minix project is eager to get this code written and tested widely. Small commits will be submitted for inclusion to mainline Minix throughout the summer as code becomes production ready rather than waiting until the end of the summer and having one huge patchset.&lt;/p&gt;</body>
    <pseudoparent idref="20" prototyperef="Page"/>
    <rssfeed>http://minix-i2c.blogspot.com/feeds/posts/default</rssfeed>
    <pvcount type="float">8.0</pvcount>
    <homepage>http://minix-i2c.blogspot.ca/</homepage>
    <render_skin>project</render_skin>
    <edit_skin>edit_project</edit_skin>
    <http_referer>http://beagleboard.org/project/minix-i2c/edit</http_referer>
    <http_host>beagleboard.org</http_host>
    <errmsg></errmsg>
    <shortdesc>The project is to develop a generic I2C driver subsystem for Minix, and then use it to write drivers for I2C devices on the new BeagleBone Black.</shortdesc>
    <user>www.tomcort.com</user>
  </hopobject>
</xmlroot>
