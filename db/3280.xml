<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="helma.xsl"?>
<xmlroot xmlns:hop="http://www.helma.org/docs/guide/features/database">
  <hopobject id="3280" name="2013-12-09-let-beaglebone-black-give-your-old-games-an-extra-life" prototype="Page" created="1386613064145" lastModified="1386613396509">
  <hop:parent idref="2912" prototyperef="Page"/>
    <is_xhtml type="boolean">true</is_xhtml>
    <http_remotehost>98.250.142.42</http_remotehost>
    <http_language>en-US,en;q=0.8</http_language>
    <uri>2013-12-09-let-beaglebone-black-give-your-old-games-an-extra-life</uri>
    <http_browser>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.63 Safari/537.36</http_browser>
    <time type="date">09.12.2013 12:23:16 CST</time>
    <hopsession>98.250.142.lugtvnkhsfal</hopsession>
    <body>&lt;h1&gt;Let BeagleBone Black Give Your Old Games an Extra Life!&lt;/h1&gt;
&lt;p&gt;
Don&apos;t let the most fun bits you&apos;ve known simply rot away and decay as
forgotten memories---give them an extra life! Help make sure that generations 
to come will still be able to run the same software you run today, including 
the video games of yesterday. Open source enables us to preserve the 
information to run those games, passing them on to the next generation. In 
fact, there&apos;s already a huge movement of people saving their old games using 
&quot;retro-gaming systems&quot;, but not all of them are fully open source. Because the 
BeagleBone Black doesn&apos;t just run open source software, but is open source 
hardware, taking the time to bring it your games means you&apos;ll be able to bring 
those games with you into the future and into anywhere else you can imagine.
&lt;/p&gt;
&lt;h2&gt;Why BeagleBone Black?&lt;/h2&gt;
&lt;p&gt;
Why does BeagleBone Black make an awesome choice for building your retro-gaming
system? Firstly, it is affordable. If you&apos;re on a budget, all you need to add 
is a gaming controller, a USB charger like you already have for your phone and 
a microHDMI cable to connect up to your TV. You can use the system already 
installed on your BeagleBone Black&apos;s on-board 2GB eMMC flash as a basis for
compiling and running your game system emulators, such as MAME that lets you
run old arcade games, Stella that lets you run old Atari 2600 games and DEmul
that lets you run your old Dreamcast games.
&lt;/p&gt;
&lt;p&gt;
Having a compiler and full set of build tools without needing to download and
configure anything can make for a wonderful experience. Nevertheless, if you
aren&apos;t very familiar with embedded Linux, you might want to switch to a more
familiar Linux distribution. For my simplest setup, I chose to 
&lt;a href=&quot;http://elinux.org/BeagleBoardDebian#eMMC:_BeagleBone_Black&quot;&gt;flash
Debian onto my BeagleBone Black&apos;s eMMC&lt;/a&gt;. I used a microSD card to put the
new operating system on my BeagleBone Black. If I was feeling especially cheap,
I could have opted for a tool coming from one of the BeagleBoard.org students 
participating in Google Summer of Code---Vlad Victor Ungureanu has provided a 
utility that can be used to flash a BeagleBone Black from an Android phone or 
Linux computer, without needing a microSD card 
(&lt;a href=&quot;https://github.com/ungureanuvladvictor/BBBlfs&quot;&gt;
https://github.com/ungureanuvladvictor/BBBlfs&lt;/a&gt;).
&lt;/p&gt;
&lt;h2&gt;Not just affordable, it&apos;s also easy&lt;/h2&gt;
&lt;p&gt;
Of course, if all this talk of compiling and Linux distributions has you scared, no need to fear---BeagleSNES is here! Take a stroll over to http://www.beaglesnes.org and you can download an image for a microSD card that&apos;s ready to boot and roll. This image is built on Ubuntu and there is a full set of documentation to get you started. In the future, it might even get easier as I&apos;ve been working on a Buildroot based image that will let you boot and run off of a FAT-formatted microSD card, rather than needing to copy over an exact disk image (https://github.com/jadonk/buildroot/blob/snes9x/README.md).
&lt;/p&gt;
&lt;p&gt;
It is also really easy to put a case around your new retro-gaming system such that it can sit neatly in the living room without getting chewed up by the dog. Here&apos;s a quick look at some of my favorites, including very affordable plastic and laser-cut cases as well as stamped metal cases you could stand on, if somehow the need arose:
&lt;/p&gt;
&lt;div&gt;

&lt;div&gt;&lt;a href=&quot;http://www.adafruit.com/products/1555&quot;&gt;http://www.adafruit.com/products/1555&lt;/a&gt; ($9.95 – plastic)
&lt;/div&gt;

http://www.logicsupply.com/components/cases/lgx/bb100/ ($14.95 – metal)


http://www.mouser.com/ProductDetail/Hammond/1593HAMDOGBK/?qs=c8305KrhTpzfcssm1ZcOOw%3D%3D&amp;gclid=CJjrzaDzlrsCFa9cMgod6G4AUQ ($5.40 – plastic)


http://lasergoodies.com/shop/beaglebone-black-slim-case-clear ($11.99 – acrylic)


http://www.adafruit.com/products/699 ($19.95 – acrylic)
&lt;/div&gt;
&lt;h2&gt;Make it your own
&lt;/h2&gt;    
&lt;p&gt;
Off the shelf software and cases make it easy, but small, low-power, open software and hardware means that you can customize to your heart&apos;s content. For me, that meant putting my BeagleBone Black into a cabinet and attaching a 10&quot; LCD screen. For my first case, I was a bit lazy and started with an off-the-shelf cabinet---the iCade (http://www.ionaudio.com/products/details/icade). It is a nice case with solid controllers, originally built for an iPad, but I was able to easily mount my LCD panel using a 2-by-4 and some velcro I got at my local hackerspace (i3 Detroit) and connect to the controls using a USB Bluetooth dongle. For the LCD screen, I used the one from Chalkboard Electronics (http://www.chalk-elec.com/?page_id=1280#!/~/product/category=3094859&amp;id=13939433).
&lt;/p&gt;



For my next upright version, I got some custom components and ideas from the folks at i3 Detroit, including a smaller laser-cut cabinet partially inspired by the iCade and a less-expensive, more-flexible 7&quot; LCD that takes an HDMI input. I ended up buying the LCD off of eBay for less than $50 (http://www.ebay.com/itm/For-Raspberry-Pi-LCD-Screen-Display-Monitor-7-Inch-Driver-Board-HDMI-VGA-2AV-/331079009429). I&apos;m told LCD system seems to have been designed for backing-up cameras in cars, but I haven&apos;t been able to find a more traditional distributor stocking these displays.



This new cabinet looks really promising and there is already one setup at i3 Detroit showing constant weather updates (https://github.com/i3detroit/beagle-py-hotandcold), but the killer case has got to be the laser-cut handheld case with the battery-powered GamingCape by Max Thrun (http://bear24rw.blogspot.com/2013/07/beaglebone-gamingcape.html) he did as part of the TI 2013 Intern Challenge. Unfortunately, you can&apos;t buy the case or cape anywhere, so we set out to build our own at i3 Detroit. I ordered 3 PCBs from OSHPark (http://oshpark.com/orders/1ut52Pg4) and purchased most of the components at Digi-Key. All said and done, I&apos;ll have ended up paying about $160 each (including BeagleBone Black) for 3 units hand assembled by one of the members of the space (in exchange for getting one of the units) and assembly has begun. It wouldn&apos;t take a much larger order to drastically cut the price, but we just want our hands on a couple of these bad boys on our own for now.



It is worth a few minutes to watch Max&apos;s amazing video of his assembly.

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/wj1T84orbeY&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

Final thoughts on retro-gaming, custom-gaming and physical-gaming

In addition to being affordable, easy, supported by off-the-shelf enclosures and highly customizable, you might also simply choose to use BeagleBone Black for a retro-gaming project simply because of its performance and interfacing abilities. The super-scalar ARM Cortex-A8 can execute 2 instructions every cycle and has a vector accelerator called NEON that can perform up to 8 operations per cycle---and it runs at 1GHz. This is in addition to having a built-in 3D graphics accelerator and two 200MHz microcontrollers to handle all of the real-time interfacing aspects. You might have already seen how these microcontrollers can be used to drive huge LED displays without consuming any of the primary CPU in projects like Disorient Pyramid (http://beagleboard.org/blog/2013-10-22-project-spotlight-octoscroller/).

These performance and interfacing aspects, in addition to providing ways to run game system emulators faster and in more environments with more input and display devices, also open up entirely new types of gaming. One example is the Node.JS-based multiple-room physical-gaming system built by Eric Gradman (https://vimeo.com/60993092, http://www.pehub.com/2010/04/gradman-bushnell-aim-to-create-new-gaming-experience/). For those of you concerned about retro-gaming copyright issues (http://www.nintendo.com/corp/legal.jsp), creating and exploring entirely new games and new gaming experiences might be just the cure for your worries and boredom. Then again, you might simply be looking to bring back old games on your own without emulators and creating new experiences around them, like with Benjamin James&apos; 30-foot Tetris wall.

&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/wDq7iqvvSMw&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

Retro-gaming or custom-gaming, good times are here for you and your Beagle.</body>
    <pseudoparent idref="2912" prototyperef="Page"/>
    <http_referer>http://beagleboard.org/blog/2013-12-09-let-beaglebone-black-give-your-old-games-an-extra-life/edit</http_referer>
    <http_host>beagleboard.org</http_host>
    <user>jkridner@gmail.com</user>
    <lang>en-us</lang>
  </hopobject>
</xmlroot>
